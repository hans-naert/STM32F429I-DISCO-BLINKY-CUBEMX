Component: Arm Compiler for Embedded 6.22 Tool: armlink [5ee90200]

==============================================================================

Section Cross References

    timer.o(.text.Init_Timers) refers to timer.o(.bss.exec1) for exec1
    timer.o(.text.Init_Timers) refers to timer.o(.text.Timer1_Callback) for Timer1_Callback
    timer.o(.text.Init_Timers) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    timer.o(.text.Init_Timers) refers to timer.o(.bss.tim_id1) for tim_id1
    timer.o(.text.Init_Timers) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    timer.o(.text.Init_Timers) refers to timer.o(.bss.exec2) for exec2
    timer.o(.text.Init_Timers) refers to timer.o(.text.Timer2_Callback) for Timer2_Callback
    timer.o(.text.Init_Timers) refers to timer.o(.bss.tim_id2) for tim_id2
    timer.o(.ARM.exidx.text.Init_Timers) refers to timer.o(.text.Init_Timers) for [Anonymous Symbol]
    timer.o(.ARM.exidx.text.Timer1_Callback) refers to timer.o(.text.Timer1_Callback) for [Anonymous Symbol]
    timer.o(.text.Timer2_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    timer.o(.ARM.exidx.text.Timer2_Callback) refers to timer.o(.text.Timer2_Callback) for [Anonymous Symbol]
    thread.o(.text.Init_Thread) refers to thread.o(.text.Thread) for Thread
    thread.o(.text.Init_Thread) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    thread.o(.text.Init_Thread) refers to thread.o(.bss.tid_Thread) for tid_Thread
    thread.o(.ARM.exidx.text.Init_Thread) refers to thread.o(.text.Init_Thread) for [Anonymous Symbol]
    thread.o(.text.Thread) refers to usbh_lib_core.o(.text.USBH_Initialize) for USBH_Initialize
    thread.o(.text.Thread) refers to thread.o(.rodata.str1.1) for .L.str
    thread.o(.text.Thread) refers to usbh_msc.o(.text.USBH_MSC_DriveMount) for USBH_MSC_DriveMount
    thread.o(.text.Thread) refers to thread.o(.bss.Thread.result) for Thread.result
    thread.o(.text.Thread) refers to fopen_locked.o(.text) for fopen
    thread.o(.text.Thread) refers to thread.o(.bss.Thread.f) for Thread.f
    thread.o(.text.Thread) refers to thread.o(.bss.fbuf) for fbuf
    thread.o(.text.Thread) refers to freadfast_locked.o(.text) for fread
    thread.o(.text.Thread) refers to fclose_locked.o(.text) for fclose
    thread.o(.text.Thread) refers to rtx_delay.o(.text.osDelay) for osDelay
    thread.o(.ARM.exidx.text.Thread) refers to thread.o(.text.Thread) for [Anonymous Symbol]
    usbh_msc.o(.text.USBH_MSC_DriveGetMediaStatus) refers to usbh_lib_msc.o(.text.USBH_MSC_GetStatus) for USBH_MSC_GetStatus
    usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveGetMediaStatus) refers to usbh_msc.o(.text.USBH_MSC_DriveGetMediaStatus) for [Anonymous Symbol]
    usbh_msc.o(.text.USBH_MSC_DriveMount) refers to fs_mapi.o(.text.finit) for finit
    usbh_msc.o(.text.USBH_MSC_DriveMount) refers to fs_mapi.o(.text.fmount) for fmount
    usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveMount) refers to usbh_msc.o(.text.USBH_MSC_DriveMount) for [Anonymous Symbol]
    usbh_msc.o(.text.USBH_MSC_DriveUnmount) refers to fs_mapi.o(.text.funmount) for funmount
    usbh_msc.o(.text.USBH_MSC_DriveUnmount) refers to fs_mapi.o(.text.funinit) for funinit
    usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveUnmount) refers to usbh_msc.o(.text.USBH_MSC_DriveUnmount) for [Anonymous Symbol]
    usbh_msc.o(.text.USBH_MSC_DriveGetCapacity) refers to usbh_lib_msc.o(.text.USBH_MSC_GetStatus) for USBH_MSC_GetStatus
    usbh_msc.o(.text.USBH_MSC_DriveGetCapacity) refers to usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity) for USBH_MSC_ReadCapacity
    usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveGetCapacity) refers to usbh_msc.o(.text.USBH_MSC_DriveGetCapacity) for [Anonymous Symbol]
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.HAL_GetTick) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.HAL_GetTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.HAL_GetTick) refers to main.o(.bss.HAL_GetTick.ticks) for HAL_GetTick.ticks
    main.o(.ARM.exidx.text.HAL_GetTick) refers to main.o(.text.HAL_GetTick) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.HAL_InitTick) refers to main.o(.text.HAL_InitTick) for [Anonymous Symbol]
    main.o(.text.app_main) refers to timer.o(.text.Init_Timers) for Init_Timers
    main.o(.text.app_main) refers to thread.o(.text.Init_Thread) for Init_Thread
    main.o(.text.app_main) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.ARM.exidx.text.app_main) refers to main.o(.text.app_main) for [Anonymous Symbol]
    main.o(.text.main) refers to stm32f4xx_hal.o(.text.HAL_Init) for HAL_Init
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to main.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to main.o(.text.MX_SPI5_Init) for MX_SPI5_Init
    main.o(.text.main) refers to main.o(.text.MX_USB_OTG_HS_HCD_Init) for MX_USB_OTG_HS_HCD_Init
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.text.app_main) for app_main
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for HAL_RCC_OscConfig
    main.o(.text.SystemClock_Config) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.text.SystemClock_Config) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for HAL_RCC_ClockConfig
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    main.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    main.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    main.o(.text.MX_GPIO_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    main.o(.ARM.exidx.text.MX_GPIO_Init) refers to main.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    main.o(.text.MX_SPI5_Init) refers to main.o(.bss.hspi5) for hspi5
    main.o(.text.MX_SPI5_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for HAL_SPI_Init
    main.o(.text.MX_SPI5_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.ARM.exidx.text.MX_SPI5_Init) refers to main.o(.text.MX_SPI5_Init) for [Anonymous Symbol]
    main.o(.text.MX_USB_OTG_HS_HCD_Init) refers to main.o(.bss.hhcd_USB_OTG_HS) for hhcd_USB_OTG_HS
    main.o(.text.MX_USB_OTG_HS_HCD_Init) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) for HAL_HCD_Init
    main.o(.text.MX_USB_OTG_HS_HCD_Init) refers to main.o(.text.Error_Handler) for Error_Handler
    main.o(.ARM.exidx.text.MX_USB_OTG_HS_HCD_Init) refers to main.o(.text.MX_USB_OTG_HS_HCD_Init) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for HAL_GPIO_TogglePin
    main.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to main.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f4xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f4xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f4xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f4xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f4xx_it.o(.text.EXTI0_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for HAL_GPIO_EXTI_IRQHandler
    stm32f4xx_it.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to stm32f4xx_it.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    irq_armv7m.o(.text) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for EvrRtxDelay
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsException) refers to rtx_delay.o(.text.IsException) for [Anonymous Symbol]
    rtx_delay.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_delay.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for EvrRtxDelayUntil
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsException) for IsException
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_delay.o(.text.osDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for EvrRtxDelayStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayError) for EvrRtxDelayError
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for EvrRtxDelayUntilStarted
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for EvrRtxEventFlagsNew
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for svcRtxEventFlagsNew
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew) refers to rtx_evflags.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsException) refers to rtx_evflags.o(.text.IsException) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_evflags.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for svcRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName) refers to rtx_evflags.o(.text.osEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for EvrRtxEventFlagsGetName
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName) refers to rtx_evflags.o(.text.svcRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for EvrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for isrRtxEventFlagsSet
    rtx_evflags.o(.text.osEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for svcRtxEventFlagsSet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet) refers to rtx_evflags.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_evflags.o(.text.isrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet) refers to rtx_evflags.o(.text.isrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for EvrRtxEventFlagsClear
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for svcRtxEventFlagsClear
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear) refers to rtx_evflags.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for EventFlagsClear
    rtx_evflags.o(.text.svcRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for EvrRtxEventFlagsClearDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear) refers to rtx_evflags.o(.text.svcRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for svcRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet) refers to rtx_evflags.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for EvrRtxEventFlagsGet
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet) refers to rtx_evflags.o(.text.svcRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for EvrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for isrRtxEventFlagsWait
    rtx_evflags.o(.text.osEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for svcRtxEventFlagsWait
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait) refers to rtx_evflags.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.isrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait) refers to rtx_evflags.o(.text.isrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for EvrRtxEventFlagsDelete
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsException) for IsException
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for svcRtxEventFlagsDelete
    rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete) refers to rtx_evflags.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for osRtxEventFlagsPostProcess
    rtx_evflags.o(.text.svcRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for EvrRtxEventFlagsCreated
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew) refers to rtx_evflags.o(.text.svcRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.IsEventFlagsPtrValid) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.osRtxEventFlagsPostProcess) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess) refers to rtx_evflags.o(.text.osRtxEventFlagsPostProcess) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_evflags.o(.text.EventFlagsCheck) refers to rtx_evflags.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck) refers to rtx_evflags.o(.text.EventFlagsCheck) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_evflags.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_evflags.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsSet) refers to rtx_evflags.o(.text.atomic_set32) for atomic_set32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.osRtxObject) refers to rtx_evflags.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_set32) refers to rtx_evflags.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsSet) for EventFlagsSet
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for EvrRtxEventFlagsSetDone
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet) refers to rtx_evflags.o(.text.svcRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evflags.o(.text.EventFlagsClear) refers to rtx_evflags.o(.text.atomic_clr32) for atomic_clr32
    rtx_evflags.o(.ARM.exidx.text.EventFlagsClear) refers to rtx_evflags.o(.text.EventFlagsClear) for [Anonymous Symbol]
    rtx_evflags.o(.ARM.exidx.text.atomic_clr32) refers to rtx_evflags.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.EventFlagsCheck) for EventFlagsCheck
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for EvrRtxEventFlagsWaitCompleted
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for EvrRtxEventFlagsWaitPending
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_evflags.o(.text.svcRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for EvrRtxEventFlagsWaitNotCompleted
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait) refers to rtx_evflags.o(.text.svcRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_evflags.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsId) for osRtxEventFlagsId
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.IsEventFlagsPtrValid) for IsEventFlagsPtrValid
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for EvrRtxEventFlagsError
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxObject) for osRtxObject
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_evflags.o(.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.osRtxEventFlagsDestroy) for osRtxEventFlagsDestroy
    rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete) refers to rtx_evflags.o(.text.svcRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_evflags.o(.text.osRtxEventFlagsDestroy) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for EvrRtxEventFlagsDestroyed
    rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsDestroy) refers to rtx_evflags.o(.text.osRtxEventFlagsDestroy) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryAlloc) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockInit) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryBlockFree) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError) refers to rtx_evr.o(.text.EvrRtxKernelError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInitialized) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetInfo) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) refers to eventrecorder.o(.text.EventRecordData) for EventRecordData
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelUnlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelRestoreLock) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelLockRestored) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelProtect) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelProtected) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected) refers to rtx_evr.o(.text.EvrRtxKernelProtected) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetTickFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelErrorNotify) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxKernelDestroyClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError) refers to rtx_evr.o(.text.EvrRtxThreadError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass) refers to rtx_evr.o(.text.EvrRtxThreadGetClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetZone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone) refers to rtx_evr.o(.text.EvrRtxThreadGetZone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetId) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetState) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetStackSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetPriority) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadYield) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspend) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspended) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResume) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetach) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDetached) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoin) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoinPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadJoined) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadBlocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadUnblocked) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPreempted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSwitched) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadExit) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminate) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected) refers to rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadEnumerate) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadSuspendClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadResumeClass) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadTerminateZone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadWatchdogExpired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired) refers to rtx_evr.o(.text.EvrRtxThreadWatchdogExpired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError) refers to rtx_evr.o(.text.EvrRtxDelayError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelay) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelay) refers to rtx_evr.o(.text.EvrRtxDelay) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntil) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil) refers to rtx_evr.o(.text.EvrRtxDelayUntil) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted) refers to rtx_evr.o(.text.EvrRtxDelayStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayUntilStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted) refers to rtx_evr.o(.text.EvrRtxDelayUntilStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxDelayCompleted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError) refers to rtx_evr.o(.text.EvrRtxTimerError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCallback) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStart) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStarted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStop) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerStopped) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerIsRunning) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxTimerDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError) refers to rtx_evr.o(.text.EvrRtxEventFlagsError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew) refers to rtx_evr.o(.text.EvrRtxEventFlagsNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated) refers to rtx_evr.o(.text.EvrRtxEventFlagsCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName) refers to rtx_evr.o(.text.EvrRtxEventFlagsGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet) refers to rtx_evr.o(.text.EvrRtxEventFlagsSet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsSetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsSetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClear) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear) refers to rtx_evr.o(.text.EvrRtxEventFlagsClear) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsClearDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone) refers to rtx_evr.o(.text.EvrRtxEventFlagsClearDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsGet) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet) refers to rtx_evr.o(.text.EvrRtxEventFlagsGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWait) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait) refers to rtx_evr.o(.text.EvrRtxEventFlagsWait) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete) refers to rtx_evr.o(.text.EvrRtxEventFlagsDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed) refers to rtx_evr.o(.text.EvrRtxEventFlagsDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError) refers to rtx_evr.o(.text.EvrRtxMutexError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNew) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexGetOwner) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMutexDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquire) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreRelease) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreReleased) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFree) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueError) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNew) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueCreated) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetName) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePut) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGet) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetPending) refers to eventrecorder.o(.text.EventRecord4) for EventRecord4
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetCount) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueReset) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueResetDone) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDelete) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) refers to eventrecorder.o(.text.EventRecord2) for EventRecord2
    rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_evr.o(.text.EvrRtxKernelErrorNotify) for EvrRtxKernelErrorNotify
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_lib.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialize) for EvrRtxKernelInitialize
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsException) refers to rtx_kernel.o(.text.IsException) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_kernel.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelGetInfo) for EvrRtxKernelGetInfo
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPrivileged) refers to rtx_kernel.o(.text.IsPrivileged) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.1) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_evr.o(.text.EvrRtxKernelInfoRetrieved) for EvrRtxKernelInfoRetrieved
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.IsPrivileged) for IsPrivileged
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.osRtxKernelState) for osRtxKernelState
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStart) for EvrRtxKernelStart
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLock) for EvrRtxKernelLock
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlock) for EvrRtxKernelUnlock
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelRestoreLock) for EvrRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsFault) for IsFault
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsSVCallIrq) for IsSVCallIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsPendSvIrq) for IsPendSvIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.IsTickIrq) for IsTickIrq
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsFault) refers to rtx_kernel.o(.text.IsFault) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsSVCallIrq) refers to rtx_kernel.o(.text.IsSVCallIrq) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsPendSvIrq) refers to rtx_kernel.o(.text.IsPendSvIrq) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.IsTickIrq) refers to rtx_kernel.o(.text.IsTickIrq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelLockRestored) for EvrRtxKernelLockRestored
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspend) for EvrRtxKernelSuspend
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResume) for EvrRtxKernelResume
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelProtect) for EvrRtxKernelProtect
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelDestroyClass) for EvrRtxKernelDestroyClass
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.IsTickIrq) for IsTickIrq
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_evr.o(.text.EvrRtxKernelGetTickCount) for EvrRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetTickFreq) for EvrRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount) for EvrRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsException) for IsException
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq) for EvrRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelInitialized) for EvrRtxKernelInitialized
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelState) refers to rtx_kernel.o(.text.osRtxKernelState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.SVC_Setup) for SVC_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_evr.o(.text.EvrRtxKernelStarted) for EvrRtxKernelStarted
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.SVC_Setup) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    rtx_kernel.o(.ARM.exidx.text.SVC_Setup) refers to rtx_kernel.o(.text.SVC_Setup) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to rtx_kernel.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelLocked) for EvrRtxKernelLocked
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelUnlocked) for EvrRtxKernelUnlocked
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelError) for EvrRtxKernelError
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.KernelBlock) for KernelBlock
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_evr.o(.text.EvrRtxKernelSuspended) for EvrRtxKernelSuspended
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelBlock) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.GetPendSV) for GetPendSV
    rtx_kernel.o(.text.KernelBlock) refers to rtx_kernel.o(.text.ClrPendSV) for ClrPendSV
    rtx_kernel.o(.ARM.exidx.text.KernelBlock) refers to rtx_kernel.o(.text.KernelBlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.GetPendSV) refers to rtx_kernel.o(.text.GetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.ClrPendSV) refers to rtx_kernel.o(.text.ClrPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_evr.o(.text.EvrRtxKernelResumed) for EvrRtxKernelResumed
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.KernelUnblock) for KernelUnblock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.KernelUnblock) refers to rtx_kernel.o(.text.SetPendSV) for SetPendSV
    rtx_kernel.o(.text.KernelUnblock) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.ARM.exidx.text.KernelUnblock) refers to rtx_kernel.o(.text.KernelUnblock) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.SetPendSV) refers to rtx_kernel.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.1) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.text.osRtxKernelBeforeInit) refers to rtx_lib.o(.text.evr_initialize) for evr_initialize
    rtx_lib.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_lib.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for EventRecorderInitialize
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    rtx_lib.o(.text.evr_initialize) refers to eventrecorder.o(.text.EventRecorderDisable) for EventRecorderDisable
    rtx_lib.o(.ARM.exidx.text.evr_initialize) refers to rtx_lib.o(.text.evr_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.user_perthread_libspace_free) for user_perthread_libspace_free
    rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_lib.o(.text.user_perthread_libspace_free) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free) refers to rtx_lib.o(.text.user_perthread_libspace_free) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_evr.o(.text.EvrRtxMemoryInit) for EvrRtxMemoryInit
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.text.osRtxMemoryInit) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemHeadPtr) refers to rtx_memory.o(.text.MemHeadPtr) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.MemBlockPtr) refers to rtx_memory.o(.text.MemBlockPtr) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryAlloc) for EvrRtxMemoryAlloc
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_evr.o(.text.EvrRtxMemoryFree) for EvrRtxMemoryFree
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemBlockPtr) for MemBlockPtr
    rtx_memory.o(.text.osRtxMemoryFree) refers to rtx_memory.o(.text.MemHeadPtr) for MemHeadPtr
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolInit) refers to rtx_evr.o(.text.EvrRtxMemoryBlockInit) for EvrRtxMemoryBlockInit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryBlockAlloc) for EvrRtxMemoryBlockAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_link_get) for atomic_link_get
    rtx_mempool.o(.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.atomic_inc32) for atomic_inc32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_get) refers to rtx_mempool.o(.text.atomic_link_get) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_inc32) refers to rtx_mempool.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryBlockFree) for EvrRtxMemoryBlockFree
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_link_put) for atomic_link_put
    rtx_mempool.o(.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.atomic_dec32) for atomic_dec32
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_link_put) refers to rtx_mempool.o(.text.atomic_link_put) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.atomic_dec32) refers to rtx_mempool.o(.text.atomic_dec32) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolNew) for EvrRtxMemoryPoolNew
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsException) refers to rtx_mempool.o(.text.IsException) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mempool.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetName) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetName) for EvrRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAlloc) for EvrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for isrRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.isrRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFree) for EvrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for isrRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.isrRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree) refers to rtx_mempool.o(.text.isrRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity) for EvrRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize) for EvrRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetCount) for EvrRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) refers to rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace) for EvrRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDelete) for EvrRtxMemoryPoolDelete
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsException) for IsException
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_evr.o(.text.EvrRtxMemoryPoolCreated) for EvrRtxMemoryPoolCreated
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.IsMemoryPoolPtrValid) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxObject) refers to rtx_mempool.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending) for EvrRtxMemoryPoolAllocPending
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed) for EvrRtxMemoryPoolAllocFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mempool.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated) for EvrRtxMemoryPoolDeallocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocated) for EvrRtxMemoryPoolAllocated
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed) for EvrRtxMemoryPoolFreeFailed
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolId) for osRtxMemoryPoolId
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.IsMemoryPoolPtrValid) for IsMemoryPoolPtrValid
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_evr.o(.text.EvrRtxMemoryPoolError) for EvrRtxMemoryPoolError
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxObject) for osRtxObject
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolDestroy) for osRtxMemoryPoolDestroy
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osRtxMemoryPoolDestroy) refers to rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed) for EvrRtxMemoryPoolDestroyed
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolDestroy) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueCreated) for EvrRtxMessageQueueCreated
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueNew) for EvrRtxMessageQueueNew
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsException) refers to rtx_msgqueue.o(.text.IsException) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_msgqueue.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetName) for EvrRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePut) for EvrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for isrRtxMessageQueuePut
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInsertPending) for EvrRtxMessageQueueInsertPending
    rtx_msgqueue.o(.text.isrRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.isrRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGet) for EvrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for isrRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.isrRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.isrRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity) for EvrRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize) for EvrRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetCount) for EvrRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetSpace) for EvrRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueReset) for EvrRtxMessageQueueReset
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueDelete) for EvrRtxMessageQueueDelete
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsException) for IsException
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.IsMessageQueuePtrValid) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.osRtxObject) refers to rtx_msgqueue.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.atomic_inc32) for atomic_inc32
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32) refers to rtx_msgqueue.o(.text.atomic_inc32) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutPending) for EvrRtxMessageQueuePutPending
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotInserted) for EvrRtxMessageQueueNotInserted
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for atomic_dec32_nz
    rtx_msgqueue.o(.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.atomic_wr8) for atomic_wr8
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz) refers to rtx_msgqueue.o(.text.atomic_dec32_nz) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8) refers to rtx_msgqueue.o(.text.atomic_wr8) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetPending) for EvrRtxMessageQueueGetPending
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved) for EvrRtxMessageQueueNotRetrieved
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueRetrieved) for EvrRtxMessageQueueRetrieved
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueInserted) for EvrRtxMessageQueueInserted
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_evr.o(.text.EvrRtxMessageQueueResetDone) for EvrRtxMessageQueueResetDone
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueId) for osRtxMessageQueueId
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.IsMessageQueuePtrValid) for IsMessageQueuePtrValid
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_evr.o(.text.EvrRtxMessageQueueError) for EvrRtxMessageQueueError
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxObject) for osRtxObject
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) for osRtxMessageQueueDestroy
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) refers to rtx_evr.o(.text.EvrRtxMessageQueueDestroyed) for EvrRtxMessageQueueDestroyed
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueDestroy) refers to rtx_msgqueue.o(.text.osRtxMessageQueueDestroy) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxObject) refers to rtx_mutex.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexNew) for EvrRtxMutexNew
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsException) refers to rtx_mutex.o(.text.IsException) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_mutex.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexGetName) refers to rtx_evr.o(.text.EvrRtxMutexGetName) for EvrRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquire) for EvrRtxMutexAcquire
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexRelease) for EvrRtxMutexRelease
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexDelete) for EvrRtxMutexDelete
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsException) for IsException
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_evr.o(.text.EvrRtxMutexCreated) for EvrRtxMutexCreated
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.IsMutexPtrValid) refers to rtx_mutex.o(.text.IsMutexPtrValid) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexId) refers to rtx_mutex.o(.text.osRtxMutexId) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquirePending) for EvrRtxMutexAcquirePending
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_evr.o(.text.EvrRtxMutexNotAcquired) for EvrRtxMutexNotAcquired
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexReleased) for EvrRtxMutexReleased
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_evr.o(.text.EvrRtxMutexAcquired) for EvrRtxMutexAcquired
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexGetOwner) refers to rtx_evr.o(.text.EvrRtxMutexGetOwner) for EvrRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexId) for osRtxMutexId
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.IsMutexPtrValid) for IsMutexPtrValid
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_evr.o(.text.EvrRtxMutexError) for EvrRtxMutexError
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexOwnerUnlock) for osRtxMutexOwnerUnlock
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.osRtxMutexDestroy) for osRtxMutexDestroy
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_mutex.o(.text.osRtxObject) for osRtxObject
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerUnlock) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerUnlock) refers to rtx_mutex.o(.text.osRtxMutexOwnerUnlock) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.osRtxMutexDestroy) refers to rtx_evr.o(.text.EvrRtxMutexDestroyed) for EvrRtxMutexDestroyed
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexDestroy) refers to rtx_mutex.o(.text.osRtxMutexDestroy) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreNew) for EvrRtxSemaphoreNew
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for svcRtxSemaphoreNew
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew) refers to rtx_semaphore.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsException) refers to rtx_semaphore.o(.text.IsException) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_semaphore.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for svcRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName) refers to rtx_semaphore.o(.text.osSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreGetName) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetName) for EvrRtxSemaphoreGetName
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetName) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquire) for EvrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for isrRtxSemaphoreAcquire
    rtx_semaphore.o(.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for svcRtxSemaphoreAcquire
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.isrRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreRelease) for EvrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for isrRtxSemaphoreRelease
    rtx_semaphore.o(.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for svcRtxSemaphoreRelease
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_semaphore.o(.text.isrRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.isrRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for svcRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount) refers to rtx_semaphore.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) refers to rtx_evr.o(.text.EvrRtxSemaphoreGetCount) for EvrRtxSemaphoreGetCount
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount) refers to rtx_semaphore.o(.text.svcRtxSemaphoreGetCount) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreDelete) for EvrRtxSemaphoreDelete
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsException) for IsException
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for svcRtxSemaphoreDelete
    rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for osRtxSemaphorePostProcess
    rtx_semaphore.o(.text.svcRtxSemaphoreNew) refers to rtx_evr.o(.text.EvrRtxSemaphoreCreated) for EvrRtxSemaphoreCreated
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew) refers to rtx_semaphore.o(.text.svcRtxSemaphoreNew) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.IsSemaphorePtrValid) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.osRtxSemaphorePostProcess) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess) refers to rtx_semaphore.o(.text.osRtxSemaphorePostProcess) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxObject) refers to rtx_semaphore.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_semaphore.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.SemaphoreTokenDecrement) for SemaphoreTokenDecrement
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending) for EvrRtxSemaphoreAcquirePending
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) refers to rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired) for EvrRtxSemaphoreNotAcquired
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire) refers to rtx_semaphore.o(.text.svcRtxSemaphoreAcquire) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_semaphore.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_semaphore.o(.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for [Anonymous Symbol]
    rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_semaphore.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreReleased) for EvrRtxSemaphoreReleased
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquired) for EvrRtxSemaphoreAcquired
    rtx_semaphore.o(.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.SemaphoreTokenIncrement) for SemaphoreTokenIncrement
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease) refers to rtx_semaphore.o(.text.svcRtxSemaphoreRelease) for [Anonymous Symbol]
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreId) for osRtxSemaphoreId
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.IsSemaphorePtrValid) for IsSemaphorePtrValid
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_evr.o(.text.EvrRtxSemaphoreError) for EvrRtxSemaphoreError
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxObject) for osRtxObject
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_semaphore.o(.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.osRtxSemaphoreDestroy) for osRtxSemaphoreDestroy
    rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete) refers to rtx_semaphore.o(.text.svcRtxSemaphoreDelete) for [Anonymous Symbol]
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_semaphore.o(.text.osRtxSemaphoreDestroy) refers to rtx_evr.o(.text.EvrRtxSemaphoreDestroyed) for EvrRtxSemaphoreDestroyed
    rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreDestroy) refers to rtx_semaphore.o(.text.osRtxSemaphoreDestroy) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_system.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.isr_queue_get) for isr_queue_get
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxEventFlagsObject) for osRtxEventFlagsObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxSemaphoreObject) for osRtxSemaphoreObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for osRtxMemoryPoolObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxMessageObject) for osRtxMessageObject
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_get) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_dec16_nz) for atomic_dec16_nz
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.text.isr_queue_get) refers to rtx_system.o(.text.osRtxObject) for osRtxObject
    rtx_system.o(.ARM.exidx.text.isr_queue_get) refers to rtx_system.o(.text.isr_queue_get) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_system.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject) refers to rtx_system.o(.text.osRtxEventFlagsObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject) refers to rtx_system.o(.text.osRtxSemaphoreObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject) refers to rtx_system.o(.text.osRtxMemoryPoolObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxMessageObject) refers to rtx_system.o(.text.osRtxMessageObject) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.isr_queue_put) for isr_queue_put
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_system.o(.text.SetPendSV) for SetPendSV
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.isr_queue_put) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lt) for atomic_inc16_lt
    rtx_system.o(.text.isr_queue_put) refers to rtx_system.o(.text.atomic_inc16_lim) for atomic_inc16_lim
    rtx_system.o(.ARM.exidx.text.isr_queue_put) refers to rtx_system.o(.text.isr_queue_put) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.SetPendSV) refers to rtx_system.o(.text.SetPendSV) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_dec16_nz) refers to rtx_system.o(.text.atomic_dec16_nz) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lim) refers to rtx_system.o(.text.atomic_inc16_lim) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxObject) refers to rtx_system.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.atomic_inc16_lt) refers to rtx_system.o(.text.atomic_inc16_lt) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadObject) refers to rtx_thread.o(.text.osRtxThreadObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxObject) refers to rtx_thread.o(.text.osRtxObject) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxDelayCompleted) for EvrRtxDelayCompleted
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRoot) for osRtxThreadListRoot
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout) for EvrRtxEventFlagsWaitTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxMutexObject) for osRtxMutexObject
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMutexAcquireTimeout) for EvrRtxMutexAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout) for EvrRtxSemaphoreAcquireTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout) for EvrRtxMemoryPoolAllocTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout) for EvrRtxMessageQueueGetTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout) for EvrRtxMessageQueuePutTimeout
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxMutexObject) refers to rtx_thread.o(.text.osRtxMutexObject) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.StackOffsetR0) for StackOffsetR0
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.StackOffsetR0) refers to rtx_thread.o(.text.StackOffsetR0) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.SetPrivileged) for SetPrivileged
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_evr.o(.text.EvrRtxThreadSwitched) for EvrRtxThreadSwitched
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.SetPrivileged) refers to rtx_thread.o(.text.SetPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState) refers to rtx_thread.o(.text.osRtxKernelGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadObject) for osRtxThreadObject
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_evr.o(.text.EvrRtxThreadUnblocked) for EvrRtxThreadUnblocked
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_evr.o(.text.EvrRtxThreadBlocked) for EvrRtxThreadBlocked
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_evr.o(.text.EvrRtxThreadDestroyed) for EvrRtxThreadDestroyed
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_lib.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadId) refers to rtx_thread.o(.text.osRtxThreadId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.xPSR_InitVal) for xPSR_InitVal
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadCreated) for EvrRtxThreadCreated
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadNew) for EvrRtxThreadNew
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadNew) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsException) refers to rtx_thread.o(.text.IsException) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetName) refers to rtx_evr.o(.text.EvrRtxThreadGetName) for EvrRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_evr.o(.text.EvrRtxThreadGetId) for EvrRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadSetPriority) for EvrRtxThreadSetPriority
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadYield) for EvrRtxThreadYield
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspend) for EvrRtxThreadSuspend
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResume) for EvrRtxThreadResume
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetach) for EvrRtxThreadDetach
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoin) for EvrRtxThreadJoin
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadExit) for EvrRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.text.osThreadExit) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadTerminate) for EvrRtxThreadTerminate
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadFeedWatchdog) for EvrRtxThreadFeedWatchdog
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadProtectPrivileged) for EvrRtxThreadProtectPrivileged
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadSuspendClass) for EvrRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsTickIrq) refers to rtx_thread.o(.text.IsTickIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadResumeClass) for EvrRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadTerminateZone) for EvrRtxThreadTerminateZone
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsFault) for IsFault
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsSVCallIrq) for IsSVCallIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsPendSvIrq) for IsPendSvIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.IsTickIrq) for IsTickIrq
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.svcRtxThreadTerminateZone) for svcRtxThreadTerminateZone
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsFault) refers to rtx_thread.o(.text.IsFault) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsSVCallIrq) refers to rtx_thread.o(.text.IsSVCallIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsPendSvIrq) refers to rtx_thread.o(.text.IsPendSvIrq) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminateZone) refers to rtx_thread.o(.text.svcRtxThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSet) for EvrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for isrRtxThreadFlagsSet
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxObject) for osRtxObject
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.isrRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet) refers to rtx_thread.o(.text.isrRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClear) for EvrRtxThreadFlagsClear
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWait) for EvrRtxThreadFlagsWait
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsException) for IsException
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsThreadPtrValid) refers to rtx_thread.o(.text.IsThreadPtrValid) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.xPSR_InitVal) refers to rtx_thread.o(.text.xPSR_InitVal) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_all) for atomic_chk32_all
    rtx_thread.o(.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.atomic_chk32_any) for atomic_chk32_any
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_all) refers to rtx_thread.o(.text.atomic_chk32_all) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_chk32_any) refers to rtx_thread.o(.text.atomic_chk32_any) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_evr.o(.text.EvrRtxThreadGetState) for EvrRtxThreadGetState
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.osRtxThreadState) for osRtxThreadState
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadState) refers to rtx_thread.o(.text.osRtxThreadState) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetStackSize) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSize) for EvrRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_evr.o(.text.EvrRtxThreadGetStackSpace) for EvrRtxThreadGetStackSpace
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_evr.o(.text.EvrRtxThreadPriorityUpdated) for EvrRtxThreadPriorityUpdated
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_evr.o(.text.EvrRtxThreadGetPriority) for EvrRtxThreadGetPriority
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for osRtxThreadPriority
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority) refers to rtx_thread.o(.text.osRtxThreadPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_evr.o(.text.EvrRtxThreadPreempted) for EvrRtxThreadPreempted
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_evr.o(.text.EvrRtxThreadSuspended) for EvrRtxThreadSuspended
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_evr.o(.text.EvrRtxThreadResumed) for EvrRtxThreadResumed
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_evr.o(.text.EvrRtxThreadDetached) for EvrRtxThreadDetached
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoined) for EvrRtxThreadJoined
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_evr.o(.text.EvrRtxThreadJoinPending) for EvrRtxThreadJoinPending
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_evr.o(.text.EvrRtxThreadError) for EvrRtxThreadError
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxKernelGetState) for osRtxKernelGetState
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_evr.o(.text.EvrRtxThreadGetCount) for EvrRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_evr.o(.text.EvrRtxThreadEnumerate) for EvrRtxThreadEnumerate
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsSet) refers to rtx_thread.o(.text.atomic_set32) for atomic_set32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_set32) refers to rtx_thread.o(.text.atomic_set32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadId) for osRtxThreadId
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.IsThreadPtrValid) for IsThreadPtrValid
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsSet) for ThreadFlagsSet
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsSetDone) for EvrRtxThreadFlagsSetDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for ThreadFlagsClear
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_evr.o(.text.EvrRtxThreadFlagsClearDone) for EvrRtxThreadFlagsClearDone
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.ThreadFlagsClear) refers to rtx_thread.o(.text.atomic_clr32) for atomic_clr32
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear) refers to rtx_thread.o(.text.ThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.atomic_clr32) refers to rtx_thread.o(.text.atomic_clr32) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_evr.o(.text.EvrRtxThreadFlagsGet) for EvrRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsError) for EvrRtxThreadFlagsError
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted) for EvrRtxThreadFlagsWaitCompleted
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending) for EvrRtxThreadFlagsWaitPending
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout) for EvrRtxThreadFlagsWaitTimeout
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted) for EvrRtxThreadFlagsWaitNotCompleted
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for osRtxThreadGetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerUnlink) for TimerUnlink
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for osRtxThreadSetRunning
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_evr.o(.text.EvrRtxTimerCallback) for EvrRtxTimerCallback
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerNew) for EvrRtxTimerNew
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsException) refers to rtx_timer.o(.text.IsException) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_timer.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerGetName) refers to rtx_evr.o(.text.EvrRtxTimerGetName) for EvrRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStart) for EvrRtxTimerStart
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStop) for EvrRtxTimerStop
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerDelete) for EvrRtxTimerDelete
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsException) for IsException
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_timer.o(.text.osTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadGetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning) refers to rtx_timer.o(.text.osRtxThreadGetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerUnlink) refers to rtx_timer.o(.text.TimerUnlink) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxThreadSetRunning) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning) refers to rtx_timer.o(.text.osRtxThreadSetRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_evr.o(.text.EvrRtxTimerCreated) for EvrRtxTimerCreated
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.IsTimerPtrValid) refers to rtx_timer.o(.text.IsTimerPtrValid) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.osRtxTimerId) refers to rtx_timer.o(.text.osRtxTimerId) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_evr.o(.text.EvrRtxTimerStarted) for EvrRtxTimerStarted
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_evr.o(.text.EvrRtxTimerStopped) for EvrRtxTimerStopped
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerIsRunning) refers to rtx_evr.o(.text.EvrRtxTimerIsRunning) for EvrRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerId) for osRtxTimerId
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.IsTimerPtrValid) for IsTimerPtrValid
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_evr.o(.text.EvrRtxTimerError) for EvrRtxTimerError
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.osRtxTimerDestroy) for osRtxTimerDestroy
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.osRtxTimerDestroy) refers to rtx_evr.o(.text.EvrRtxTimerDestroyed) for EvrRtxTimerDestroyed
    rtx_timer.o(.ARM.exidx.text.osRtxTimerDestroy) refers to rtx_timer.o(.text.osRtxTimerDestroy) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    otg_hs_stm32f4xx.o(.text.OTG_HS_IRQHandler) refers to usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) for USBH_HS_IRQ
    otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_IRQHandler) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_IRQHandler) for [Anonymous Symbol]
    otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinsConfigure) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_PinsConfigure) for [Anonymous Symbol]
    otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinsUnconfigure) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_PinsUnconfigure) for [Anonymous Symbol]
    otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff) refers to otg_hs_stm32f4xx.o(.bss.otg_hs_role) for otg_hs_role
    otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for HAL_GPIO_WritePin
    otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinVbusOnOff) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff) for [Anonymous Symbol]
    otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinGetOC) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_PinGetOC) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.bss.port_reset) for port_reset
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.bss.SignalPortEvent) for SignalPortEvent
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.bss.SignalPipeEvent) for SignalPipeEvent
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.data.OTG_DFIFO) for OTG_DFIFO
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetAddressFromIndex) for USBH_CH_GetAddressFromIndex
    usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) for USBH_HW_StartTransfer
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_HS_IRQ) refers to usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) refers to usbh_hs_stm32f4xx.o(.data.OTG_DFIFO) for OTG_DFIFO
    usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) refers to usbh_hs_stm32f4xx.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) refers to usbh_hs_stm32f4xx.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_HW_StartTransfer) refers to usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_GetAddressFromIndex) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetAddressFromIndex) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetVersion) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetVersion) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetCapabilities) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetCapabilities) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.hw_initialized) for hw_initialized
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.SignalPortEvent) for SignalPortEvent
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.SignalPipeEvent) for SignalPipeEvent
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to otg_hs_stm32f4xx.o(.bss.otg_hs_role) for otg_hs_role
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to main.o(.bss.hhcd_USB_OTG_HS) for hhcd_USB_OTG_HS
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.port_reset) for port_reset
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.text.USBH_Initialize) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_Initialize) refers to usbh_hs_stm32f4xx.o(.text.USBH_Initialize) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) refers to main.o(.bss.hhcd_USB_OTG_HS) for hhcd_USB_OTG_HS
    usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) refers to otg_hs_stm32f4xx.o(.bss.otg_hs_role) for otg_hs_role
    usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) refers to usbh_hs_stm32f4xx.o(.bss.hw_initialized) for hw_initialized
    usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) refers to usbh_hs_stm32f4xx.o(.bss.port_reset) for port_reset
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_Uninitialize) refers to usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to main.o(.bss.hhcd_USB_OTG_HS) for hhcd_USB_OTG_HS
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit) for HAL_HCD_MspDeInit
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to usbh_hs_stm32f4xx.o(.bss.port_reset) for port_reset
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to usbh_hs_stm32f4xx.o(.bss.hw_initialized) for hw_initialized
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) for HAL_HCD_MspInit
    usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PowerControl) refers to usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff) for OTG_HS_PinVbusOnOff
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortVbusOnOff) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PortReset) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PortReset) refers to usbh_hs_stm32f4xx.o(.bss.port_reset) for port_reset
    usbh_hs_stm32f4xx.o(.text.USBH_PortReset) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortReset) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortReset) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PortSuspend) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortSuspend) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortSuspend) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PortResume) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PortResume) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortResume) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortResume) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PortGetState) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortGetState) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortGetState) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_FindFree) for USBH_CH_FindFree
    usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeCreate) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeModify) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeModify) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeModify) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeModify) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeModify) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeDelete) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeReset) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeReset) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeReset) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeReset) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeReset) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) refers to usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer) for USBH_HW_StartTransfer
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransfer) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransferGetResult) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for USBH_CH_GetIndexFromAddress
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) refers to usbh_hs_stm32f4xx.o(.bss.pipe) for pipe
    usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_Disable) for USBH_CH_Disable
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransferAbort) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_GetFrameNumber) refers to usbh_hs_stm32f4xx.o(.bss.hw_powered) for hw_powered
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetFrameNumber) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetFrameNumber) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_GetIndexFromAddress) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to usbh_hs_stm32f4xx.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to usbh_hs_stm32f4xx.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_FindFree) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_FindFree) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.text.USBH_CH_Disable) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_Disable) refers to usbh_hs_stm32f4xx.o(.text.USBH_CH_Disable) for [Anonymous Symbol]
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetVersion) for USBH_GetVersion
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetCapabilities) for USBH_GetCapabilities
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_Initialize) for USBH_Initialize
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize) for USBH_Uninitialize
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PowerControl) for USBH_PowerControl
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff) for USBH_PortVbusOnOff
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortReset) for USBH_PortReset
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortSuspend) for USBH_PortSuspend
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortResume) for USBH_PortResume
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PortGetState) for USBH_PortGetState
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate) for USBH_PipeCreate
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeModify) for USBH_PipeModify
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete) for USBH_PipeDelete
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeReset) for USBH_PipeReset
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer) for USBH_PipeTransfer
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult) for USBH_PipeTransferGetResult
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort) for USBH_PipeTransferAbort
    usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) refers to usbh_hs_stm32f4xx.o(.text.USBH_GetFrameNumber) for USBH_GetFrameNumber
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text._sys_open) refers to strcmpv7em.o(.text) for strcmp
    retarget_io.o(.text._sys_open) refers to retarget_mdk-fs.o(.text.rt_fs_open) for rt_fs_open
    retarget_io.o(.text._sys_open) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.text._sys_close) refers to retarget_mdk-fs.o(.text.rt_fs_close) for rt_fs_close
    retarget_io.o(.text._sys_close) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to retarget_mdk-fs.o(.text.rt_fs_write) for rt_fs_write
    retarget_io.o(.text._sys_write) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text._sys_read) refers to retarget_mdk-fs.o(.text.rt_fs_read) for rt_fs_read
    retarget_io.o(.text._sys_read) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.text._sys_seek) refers to retarget_mdk-fs.o(.text.rt_fs_seek) for rt_fs_seek
    retarget_io.o(.text._sys_seek) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.text._sys_flen) refers to retarget_mdk-fs.o(.text.rt_fs_size) for rt_fs_size
    retarget_io.o(.text._sys_flen) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_open) refers to fs_sys.o(.text.fs_fopen) for fs_fopen
    retarget_mdk-fs.o(.text.rt_fs_open) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_open) refers to retarget_mdk-fs.o(.text.rt_fs_open) for [Anonymous Symbol]
    retarget_mdk-fs.o(.ARM.exidx.text.fs_to_rt_rval) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_close) refers to fs_sys.o(.text.fs_fclose) for fs_fclose
    retarget_mdk-fs.o(.text.rt_fs_close) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_close) refers to retarget_mdk-fs.o(.text.rt_fs_close) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_write) refers to fs_sys.o(.text.fs_fwrite) for fs_fwrite
    retarget_mdk-fs.o(.text.rt_fs_write) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_write) refers to retarget_mdk-fs.o(.text.rt_fs_write) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_read) refers to fs_sys.o(.text.fs_fread) for fs_fread
    retarget_mdk-fs.o(.text.rt_fs_read) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_read) refers to retarget_mdk-fs.o(.text.rt_fs_read) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_seek) refers to fs_sys.o(.text.fs_fseek) for fs_fseek
    retarget_mdk-fs.o(.text.rt_fs_seek) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_seek) refers to retarget_mdk-fs.o(.text.rt_fs_seek) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_size) refers to fs_sys.o(.text.fs_fsize) for fs_fsize
    retarget_mdk-fs.o(.text.rt_fs_size) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_size) refers to retarget_mdk-fs.o(.text.rt_fs_size) for [Anonymous Symbol]
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_stat) refers to retarget_mdk-fs.o(.text.rt_fs_stat) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_remove) refers to fs_config.o(.text.fdelete) for fdelete
    retarget_mdk-fs.o(.text.rt_fs_remove) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_remove) refers to retarget_mdk-fs.o(.text.rt_fs_remove) for [Anonymous Symbol]
    retarget_mdk-fs.o(.text.rt_fs_rename) refers to fs_mapi.o(.text.frename) for frename
    retarget_mdk-fs.o(.text.rt_fs_rename) refers to retarget_mdk-fs.o(.text.fs_to_rt_rval) for fs_to_rt_rval
    retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_rename) refers to retarget_mdk-fs.o(.text.rt_fs_rename) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderTimerGetFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.rodata.EventRecorderInfo) for EventRecorderInfo
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.crc16_ccitt) for crc16_ccitt
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerSetup) for EventRecorderTimerSetup
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderEnable) for EventRecorderEnable
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderStart) for EventRecorderStart
    eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize) refers to eventrecorder.o(.text.EventRecorderInitialize) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.crc16_ccitt) refers to eventrecorder.o(.text.crc16_ccitt) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderEnable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderEnable) refers to eventrecorder.o(.text.EventRecorderEnable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.EventRecorderTimerGetCount) for EventRecorderTimerGetCount
    eventrecorder.o(.text.EventGetTS) refers to eventrecorder.o(.text.atomic_cmp_xch_32) for atomic_cmp_xch_32
    eventrecorder.o(.ARM.exidx.text.EventGetTS) refers to eventrecorder.o(.text.EventGetTS) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.GetRecordIndex) for GetRecordIndex
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.bss.noinit) for EventBuffer
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.LockRecord) for LockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.UnlockRecord) for UnlockRecord
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsWritten) for IncrementRecordsWritten
    eventrecorder.o(.text.EventRecordItem) refers to eventrecorder.o(.text.IncrementRecordsDumped) for IncrementRecordsDumped
    eventrecorder.o(.ARM.exidx.text.EventRecordItem) refers to eventrecorder.o(.text.EventRecordItem) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStart) refers to eventrecorder.o(.text.EventRecorderStart) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderDisable) refers to eventrecorder.o(.bss.noinit) for EventFilter
    eventrecorder.o(.ARM.exidx.text.EventRecorderDisable) refers to eventrecorder.o(.text.EventRecorderDisable) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderStop) refers to eventrecorder.o(.text.EventRecorderStop) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderTimerGetFreq) for EventRecorderTimerGetFreq
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate) refers to eventrecorder.o(.text.EventRecorderClockUpdate) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.text.EventRecordData) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    eventrecorder.o(.text.EventRecordData) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.ARM.exidx.text.EventRecordData) refers to eventrecorder.o(.text.EventRecordData) for [Anonymous Symbol]
    eventrecorder.o(.text.EventCheckFilter) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.ARM.exidx.text.EventCheckFilter) refers to eventrecorder.o(.text.EventCheckFilter) for [Anonymous Symbol]
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetContext) refers to eventrecorder.o(.text.atomic_inc_8) for atomic_inc_8
    eventrecorder.o(.ARM.exidx.text.GetContext) refers to eventrecorder.o(.text.GetContext) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord2) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord2) refers to eventrecorder.o(.text.EventRecord2) for [Anonymous Symbol]
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventCheckFilter) for EventCheckFilter
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventGetTS) for EventGetTS
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.GetContext) for GetContext
    eventrecorder.o(.text.EventRecord4) refers to eventrecorder.o(.text.EventRecordItem) for EventRecordItem
    eventrecorder.o(.ARM.exidx.text.EventRecord4) refers to eventrecorder.o(.text.EventRecord4) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_cmp_xch_32) refers to eventrecorder.o(.text.atomic_cmp_xch_32) for [Anonymous Symbol]
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.GetRecordIndex) refers to eventrecorder.o(.text.atomic_inc_32) for atomic_inc_32
    eventrecorder.o(.ARM.exidx.text.GetRecordIndex) refers to eventrecorder.o(.text.GetRecordIndex) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.LockRecord) refers to eventrecorder.o(.text.LockRecord) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.UnlockRecord) refers to eventrecorder.o(.text.UnlockRecord) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.atomic_inc_32) for atomic_inc_32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten) refers to eventrecorder.o(.text.IncrementRecordsWritten) for [Anonymous Symbol]
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.bss.noinit) for EventStatus
    eventrecorder.o(.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.atomic_inc_32) for atomic_inc_32
    eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped) refers to eventrecorder.o(.text.IncrementRecordsDumped) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc_32) refers to eventrecorder.o(.text.atomic_inc_32) for [Anonymous Symbol]
    eventrecorder.o(.ARM.exidx.text.atomic_inc_8) refers to eventrecorder.o(.text.atomic_inc_8) for [Anonymous Symbol]
    eventrecorder.o(.rodata.EventRecorderInfo) refers to eventrecorder.o(.bss.noinit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for HAL_NVIC_SetPriorityGrouping
    stm32f4xx_hal.o(.text.HAL_Init) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.text.HAL_Init) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for HAL_MspInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init) refers to stm32f4xx_hal.o(.text.HAL_Init) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for HAL_SYSTICK_Config
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal.o(.text.HAL_InitTick) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick) refers to stm32f4xx_hal.o(.text.HAL_InitTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for HAL_MspDeInit
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit) refers to stm32f4xx_hal.o(.text.HAL_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit) refers to stm32f4xx_hal.o(.text.HAL_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_IncTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick) refers to stm32f4xx_hal.o(.text.HAL_IncTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTick) refers to stm32f4xx_hal.o(.bss.uwTick) for uwTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick) refers to stm32f4xx_hal.o(.text.HAL_GetTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio) refers to stm32f4xx_hal.o(.text.HAL_GetTickPrio) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal.o(.text.HAL_SetTickFreq) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_SetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq) refers to stm32f4xx_hal.o(.text.HAL_GetTickFreq) for [Anonymous Symbol]
    stm32f4xx_hal.o(.text.HAL_Delay) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal.o(.text.HAL_Delay) refers to stm32f4xx_hal.o(.data.uwTickFreq) for uwTickFreq
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay) refers to stm32f4xx_hal.o(.text.HAL_Delay) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick) refers to stm32f4xx_hal.o(.text.HAL_SuspendTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick) refers to stm32f4xx_hal.o(.text.HAL_ResumeTick) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion) refers to stm32f4xx_hal.o(.text.HAL_GetHalVersion) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID) refers to stm32f4xx_hal.o(.text.HAL_GetREVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID) refers to stm32f4xx_hal.o(.text.HAL_GetDEVID) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode) refers to stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_EnableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell) refers to stm32f4xx_hal.o(.text.HAL_DisableCompensationCell) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw0) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw1) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2) refers to stm32f4xx_hal.o(.text.HAL_GetUIDw2) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank) refers to stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for __NVIC_DisableIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for __NVIC_SystemReset
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for SysTick_Config
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config) refers to stm32f4xx_hal_cortex.o(.text.SysTick_Config) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion) refers to stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for __NVIC_GetPriority
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for NVIC_DecodePriority
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority) refers to stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for __NVIC_SetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for __NVIC_GetPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for __NVIC_ClearPendingIRQ
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for __NVIC_GetActive
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive) refers to stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for HAL_SYSTICK_Callback
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback) refers to stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for DMA_CheckFifoParam
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Init) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam) refers to stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset) for DMA_CalcBaseAndBitshift.flagBitshiftOffset
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift) for DMA_CalcBaseAndBitshift
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.DMA_SetConfig) for DMA_SetConfig
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig) for DMA_MultiBufferSetConfig
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT) for [Anonymous Symbol]
    stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory) refers to stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) refers to main.o(.text.HAL_GPIO_EXTI_Callback) for HAL_GPIO_EXTI_Callback
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) for HAL_HCD_MspInit
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) refers to stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt) for USB_DisableGlobalInt
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) refers to stm32f4xx_ll_usb.o(.text.USB_CoreInit) for USB_CoreInit
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) refers to stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode) for USB_SetCurrentMode
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) refers to stm32f4xx_ll_usb.o(.text.USB_HostInit) for USB_HostInit
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Init) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_MspInit) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Init) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Init) for USB_HC_Init
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_Init) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Init) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Halt) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Halt) for USB_HC_Halt
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_Halt) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Halt) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_DeInit) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit) for HAL_HCD_MspDeInit
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_DeInit) refers to stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt) for USB_DisableGlobalInt
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_DeInit) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_MspDeInit) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_SubmitRequest) refers to stm32f4xx_ll_usb.o(.text.USB_HC_StartXfer) for USB_HC_StartXfer
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_SubmitRequest) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_SubmitRequest) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_GetMode) for USB_GetMode
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_ReadInterrupts) for USB_ReadInterrupts
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for USB_FlushTxFifo
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for USB_FlushRxFifo
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_InitFSLSPClkSel) for USB_InitFSLSPClkSel
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Disconnect_Callback) for HAL_HCD_Disconnect_Callback
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) for HCD_Port_IRQHandler
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_SOF_Callback) for HAL_HCD_SOF_Callback
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_RXQLVL_IRQHandler) for HCD_RXQLVL_IRQHandler
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_HC_ReadInterrupt) for USB_HC_ReadInterrupt
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_HC_IN_IRQHandler) for HCD_HC_IN_IRQHandler
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_HC_OUT_IRQHandler) for HCD_HC_OUT_IRQHandler
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Disconnect_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Disconnect_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Connect_Callback) for HAL_HCD_Connect_Callback
    stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_InitFSLSPClkSel) for USB_InitFSLSPClkSel
    stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortEnabled_Callback) for HAL_HCD_PortEnabled_Callback
    stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortDisabled_Callback) for HAL_HCD_PortDisabled_Callback
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_Port_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_SOF_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_SOF_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HCD_RXQLVL_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_ReadPacket) for USB_ReadPacket
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_RXQLVL_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_RXQLVL_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HCD_HC_IN_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Halt) for USB_HC_Halt
    stm32f4xx_hal_hcd.o(.text.HCD_HC_IN_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_NotifyURBChange_Callback) for HAL_HCD_HC_NotifyURBChange_Callback
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_HC_IN_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_HC_IN_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HCD_HC_OUT_IRQHandler) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Halt) for USB_HC_Halt
    stm32f4xx_hal_hcd.o(.text.HCD_HC_OUT_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_NotifyURBChange_Callback) for HAL_HCD_HC_NotifyURBChange_Callback
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_HC_OUT_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HCD_HC_OUT_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_WKUP_IRQHandler) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_WKUP_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Connect_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Connect_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_PortEnabled_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortEnabled_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_PortDisabled_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortDisabled_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_NotifyURBChange_Callback) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_NotifyURBChange_Callback) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Start) refers to stm32f4xx_ll_usb.o(.text.USB_DriveVbus) for USB_DriveVbus
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Start) refers to stm32f4xx_ll_usb.o(.text.USB_EnableGlobalInt) for USB_EnableGlobalInt
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Start) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Start) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_Stop) refers to stm32f4xx_ll_usb.o(.text.USB_StopHost) for USB_StopHost
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Stop) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_Stop) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_ResetPort) refers to stm32f4xx_ll_usb.o(.text.USB_ResetPort) for USB_ResetPort
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_ResetPort) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_ResetPort) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetState) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetURBState) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetURBState) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetXferCount) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetXferCount) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetState) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentFrame) refers to stm32f4xx_ll_usb.o(.text.USB_GetCurrentFrame) for USB_GetCurrentFrame
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetCurrentFrame) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentFrame) for [Anonymous Symbol]
    stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentSpeed) refers to stm32f4xx_ll_usb.o(.text.USB_GetHostSpeed) for USB_GetHostSpeed
    stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetCurrentSpeed) refers to stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentSpeed) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for HAL_PWR_PVDCallback
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend) refers to stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive) for [Anonymous Symbol]
    stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode) refers to stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for HAL_RCC_GetSysClockFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq) for HAL_RCC_GetHCLKFreq
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) refers to system_stm32f4xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for HAL_RCC_CSSCallback
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback) refers to stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI) for [Anonymous Symbol]
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to stm32f4xx_hal.o(.data.uwTickPrio) for uwTickPrio
    stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) refers to main.o(.text.HAL_InitTick) for HAL_InitTick
    stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit) refers to stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) refers to stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit) for HAL_SPI_MspInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Init) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) refers to stm32f4xx_hal_msp.o(.text.HAL_SPI_MspDeInit) for HAL_SPI_MspDeInit
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for HAL_SPI_TransmitReceive
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for SPI_WaitFlagStateUntilTimeout
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for SPI_TxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for SPI_TxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for SPI_CloseTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for HAL_SPI_TransmitReceive_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for SPI_RxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for SPI_RxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for SPI_2linesRxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for SPI_2linesTxISR_16BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for SPI_2linesRxISR_8BIT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for SPI_2linesTxISR_8BIT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for SPI_CloseRx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for SPI_CloseRxTx_ISR
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT) refers to stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for SPI_DMAHalfTransmitCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for SPI_DMATransmitCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for HAL_SPI_TxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for HAL_SPI_TransmitReceive_DMA
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for SPI_DMAHalfReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for SPI_DMAReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for SPI_DMAHalfTransmitReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for SPI_DMATransmitReceiveCplt
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAError) for SPI_DMAError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT) for HAL_DMA_Start_IT
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for HAL_SPI_RxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for HAL_SPI_TxRxHalfCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR) for SPI_AbortTx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR) for SPI_AbortRx_ISR
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for SPI_DMATxAbortCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for SPI_DMARxAbortCallback
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for HAL_SPI_AbortCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback) refers to stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort) for HAL_DMA_Abort
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for SPI_DMAAbortOnError
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT) for HAL_DMA_Abort_IT
    stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError) refers to stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback) for HAL_SPI_TxRxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction) for SPI_EndRxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback) for HAL_SPI_RxCpltCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction) for SPI_EndRxTxTransaction
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback) for HAL_SPI_ErrorCallback
    stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback) for HAL_SPI_TxCpltCallback
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR) refers to stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR) for [Anonymous Symbol]
    stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to main.o(.text.HAL_GetTick) for HAL_GetTick
    stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout) refers to stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_CoreInit) refers to stm32f4xx_ll_usb.o(.text.USB_CoreReset) for USB_CoreReset
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_CoreInit) refers to stm32f4xx_ll_usb.o(.text.USB_CoreInit) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_CoreReset) refers to stm32f4xx_ll_usb.o(.text.USB_CoreReset) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetTurnaroundTime) refers to stm32f4xx_ll_usb.o(.text.USB_SetTurnaroundTime) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EnableGlobalInt) refers to stm32f4xx_ll_usb.o(.text.USB_EnableGlobalInt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DisableGlobalInt) refers to stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode) refers to stm32f4xx_ll_usb.o(.text.USB_GetMode) for USB_GetMode
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetCurrentMode) refers to stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetMode) refers to stm32f4xx_ll_usb.o(.text.USB_GetMode) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_DevInit) refers to stm32f4xx_ll_usb.o(.text.USB_SetDevSpeed) for USB_SetDevSpeed
    stm32f4xx_ll_usb.o(.text.USB_DevInit) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for USB_FlushTxFifo
    stm32f4xx_ll_usb.o(.text.USB_DevInit) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for USB_FlushRxFifo
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevInit) refers to stm32f4xx_ll_usb.o(.text.USB_DevInit) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetDevSpeed) refers to stm32f4xx_ll_usb.o(.text.USB_SetDevSpeed) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_FlushTxFifo) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_FlushRxFifo) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetDevSpeed) refers to stm32f4xx_ll_usb.o(.text.USB_GetDevSpeed) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateEndpoint) refers to stm32f4xx_ll_usb.o(.text.USB_ActivateEndpoint) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateDedicatedEndpoint) refers to stm32f4xx_ll_usb.o(.text.USB_ActivateDedicatedEndpoint) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeactivateEndpoint) refers to stm32f4xx_ll_usb.o(.text.USB_DeactivateEndpoint) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeactivateDedicatedEndpoint) refers to stm32f4xx_ll_usb.o(.text.USB_DeactivateDedicatedEndpoint) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_EPStartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_WritePacket) for USB_WritePacket
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPStartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_EPStartXfer) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_WritePacket) refers to stm32f4xx_ll_usb.o(.text.USB_WritePacket) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EP0StartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_EP0StartXfer) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPStopXfer) refers to stm32f4xx_ll_usb.o(.text.USB_EPStopXfer) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadPacket) refers to stm32f4xx_ll_usb.o(.text.USB_ReadPacket) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPSetStall) refers to stm32f4xx_ll_usb.o(.text.USB_EPSetStall) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPClearStall) refers to stm32f4xx_ll_usb.o(.text.USB_EPClearStall) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_StopDevice) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for USB_FlushRxFifo
    stm32f4xx_ll_usb.o(.text.USB_StopDevice) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for USB_FlushTxFifo
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_StopDevice) refers to stm32f4xx_ll_usb.o(.text.USB_StopDevice) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetDevAddress) refers to stm32f4xx_ll_usb.o(.text.USB_SetDevAddress) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevConnect) refers to stm32f4xx_ll_usb.o(.text.USB_DevConnect) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevDisconnect) refers to stm32f4xx_ll_usb.o(.text.USB_DevDisconnect) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadInterrupts) refers to stm32f4xx_ll_usb.o(.text.USB_ReadInterrupts) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevAllOutEpInterrupt) refers to stm32f4xx_ll_usb.o(.text.USB_ReadDevAllOutEpInterrupt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevAllInEpInterrupt) refers to stm32f4xx_ll_usb.o(.text.USB_ReadDevAllInEpInterrupt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevOutEPInterrupt) refers to stm32f4xx_ll_usb.o(.text.USB_ReadDevOutEPInterrupt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevInEPInterrupt) refers to stm32f4xx_ll_usb.o(.text.USB_ReadDevInEPInterrupt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ClearInterrupts) refers to stm32f4xx_ll_usb.o(.text.USB_ClearInterrupts) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateSetup) refers to stm32f4xx_ll_usb.o(.text.USB_ActivateSetup) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EP0_OutStart) refers to stm32f4xx_ll_usb.o(.text.USB_EP0_OutStart) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_HostInit) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for USB_FlushTxFifo
    stm32f4xx_ll_usb.o(.text.USB_HostInit) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for USB_FlushRxFifo
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HostInit) refers to stm32f4xx_ll_usb.o(.text.USB_HostInit) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_InitFSLSPClkSel) refers to stm32f4xx_ll_usb.o(.text.USB_InitFSLSPClkSel) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_ResetPort) refers to stm32f4xx_hal.o(.text.HAL_Delay) for HAL_Delay
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ResetPort) refers to stm32f4xx_ll_usb.o(.text.USB_ResetPort) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DriveVbus) refers to stm32f4xx_ll_usb.o(.text.USB_DriveVbus) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetHostSpeed) refers to stm32f4xx_ll_usb.o(.text.USB_GetHostSpeed) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetCurrentFrame) refers to stm32f4xx_ll_usb.o(.text.USB_GetCurrentFrame) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_HC_Init) refers to stm32f4xx_ll_usb.o(.text.USB_GetHostSpeed) for USB_GetHostSpeed
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_Init) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Init) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_HC_StartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_DoPing) for USB_DoPing
    stm32f4xx_ll_usb.o(.text.USB_HC_StartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_WritePacket) for USB_WritePacket
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_StartXfer) refers to stm32f4xx_ll_usb.o(.text.USB_HC_StartXfer) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DoPing) refers to stm32f4xx_ll_usb.o(.text.USB_DoPing) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_ReadInterrupt) refers to stm32f4xx_ll_usb.o(.text.USB_HC_ReadInterrupt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_Halt) refers to stm32f4xx_ll_usb.o(.text.USB_HC_Halt) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.text.USB_StopHost) refers to stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt) for USB_DisableGlobalInt
    stm32f4xx_ll_usb.o(.text.USB_StopHost) refers to stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo) for USB_FlushTxFifo
    stm32f4xx_ll_usb.o(.text.USB_StopHost) refers to stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo) for USB_FlushRxFifo
    stm32f4xx_ll_usb.o(.text.USB_StopHost) refers to stm32f4xx_ll_usb.o(.text.USB_EnableGlobalInt) for USB_EnableGlobalInt
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_StopHost) refers to stm32f4xx_ll_usb.o(.text.USB_StopHost) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateRemoteWakeup) refers to stm32f4xx_ll_usb.o(.text.USB_ActivateRemoteWakeup) for [Anonymous Symbol]
    stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeActivateRemoteWakeup) refers to stm32f4xx_ll_usb.o(.text.USB_DeActivateRemoteWakeup) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit) refers to stm32f4xx_hal_msp.o(.text.HAL_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_SPI_MspInit) refers to stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_SPI_MspDeInit) refers to stm32f4xx_hal_msp.o(.text.HAL_SPI_MspDeInit) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init) for HAL_GPIO_Init
    stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority) for HAL_NVIC_SetPriority
    stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ) for HAL_NVIC_EnableIRQ
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_HCD_MspInit) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit) for [Anonymous Symbol]
    stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit) refers to stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit) for HAL_GPIO_DeInit
    stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit) refers to stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ) for HAL_NVIC_DisableIRQ
    stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_HCD_MspDeInit) refers to stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit) for [Anonymous Symbol]
    startup_stm32f429xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(STACK) for __initial_sp
    startup_stm32f429xx.o(RESET) refers to startup_stm32f429xx.o(.text) for Reset_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f429xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f429xx.o(RESET) refers to stm32f4xx_it.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f429xx.o(RESET) refers to otg_hs_stm32f4xx.o(.text.OTG_HS_IRQHandler) for OTG_HS_IRQHandler
    startup_stm32f429xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f429xx.o(.text) refers to system_stm32f4xx.o(.text.SystemInit) for SystemInit
    startup_stm32f429xx.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(HEAP) for Heap_Mem
    startup_stm32f429xx.o(.text) refers to startup_stm32f429xx.o(STACK) for Stack_Mem
    system_stm32f4xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f4xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f4xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f4xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_new) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    fs_config.o(.ARM.exidx.text.fs_mutex_new) refers to fs_config.o(.text.fs_mutex_new) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    fs_config.o(.ARM.exidx.text.fs_mutex_acquire) refers to fs_config.o(.text.fs_mutex_acquire) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    fs_config.o(.ARM.exidx.text.fs_mutex_release) refers to fs_config.o(.text.fs_mutex_release) for [Anonymous Symbol]
    fs_config.o(.text.fs_mutex_delete) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    fs_config.o(.ARM.exidx.text.fs_mutex_delete) refers to fs_config.o(.text.fs_mutex_delete) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_rtos_tick_freq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    fs_config.o(.ARM.exidx.text.fs_get_rtos_tick_freq) refers to fs_config.o(.text.fs_get_rtos_tick_freq) for [Anonymous Symbol]
    fs_config.o(.text.fs_set_rtos_delay) refers to fs_config.o(.bss.fs_ms_rtos_tick) for fs_ms_rtos_tick
    fs_config.o(.text.fs_set_rtos_delay) refers to rtx_delay.o(.text.osDelay) for osDelay
    fs_config.o(.ARM.exidx.text.fs_set_rtos_delay) refers to fs_config.o(.text.fs_set_rtos_delay) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_sys_tick) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for osKernelGetSysTimerCount
    fs_config.o(.ARM.exidx.text.fs_get_sys_tick) refers to fs_config.o(.text.fs_get_sys_tick) for [Anonymous Symbol]
    fs_config.o(.text.fs_get_sys_tick_us) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for osKernelGetSysTimerFreq
    fs_config.o(.text.fs_get_sys_tick_us) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fs_config.o(.ARM.exidx.text.fs_get_sys_tick_us) refers to fs_config.o(.text.fs_get_sys_tick_us) for [Anonymous Symbol]
    fs_config.o(.text.fs_config) refers to fs_config.o(.text.fs_config_usb) for fs_config_usb
    fs_config.o(.ARM.exidx.text.fs_config) refers to fs_config.o(.text.fs_config) for [Anonymous Symbol]
    fs_config.o(.text.fs_config_usb) refers to fs_config.o(.rodata.fs_usb0_mtx_at) for fs_usb0_mtx_at
    fs_config.o(.text.fs_config_usb) refers to fs_config.o(.text.fs_mutex_new) for fs_mutex_new
    fs_config.o(.text.fs_config_usb) refers to fs_config.o(.bss.fs_usb0_vol) for fs_usb0_vol
    fs_config.o(.text.fs_config_usb) refers to fs_config.o(.rodata.fs_usb0_drv) for fs_usb0_drv
    fs_config.o(.text.fs_config_usb) refers to fs_config.o(.bss.usb0_cache) for usb0_cache
    fs_config.o(.ARM.exidx.text.fs_config_usb) refers to fs_config.o(.text.fs_config_usb) for [Anonymous Symbol]
    fs_config.o(.text.fdelete) refers to fs_mapi.o(.text._fdelete) for _fdelete
    fs_config.o(.ARM.exidx.text.fdelete) refers to fs_config.o(.text.fdelete) for [Anonymous Symbol]
    fs_config.o(.text.$Sub$$fflush) refers to fflush_locked.o(.text) for $Super$$fflush
    fs_config.o(.text.$Sub$$fflush) refers to fs_sys.o(.text.__sys_ensure) for __sys_ensure
    fs_config.o(.ARM.exidx.text.$Sub$$fflush) refers to fs_config.o(.text.$Sub$$fflush) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_handle_get) refers to fs_config.o(.text.efs_handle_get) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_init) refers to fs_config.o(.text.efs_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_uninit) refers to fs_config.o(.text.efs_uninit) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_mount) refers to fs_config.o(.text.efs_mount) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_unmount) refers to fs_config.o(.text.efs_unmount) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_open) refers to fs_config.o(.text.efs_open) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_close) refers to fs_config.o(.text.efs_close) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_read) refers to fs_config.o(.text.efs_read) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_write) refers to fs_config.o(.text.efs_write) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_flush) refers to fs_config.o(.text.efs_flush) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_flen) refers to fs_config.o(.text.efs_flen) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_seek) refers to fs_config.o(.text.efs_seek) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_ffind) refers to fs_config.o(.text.efs_ffind) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_rename) refers to fs_config.o(.text.efs_rename) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_delete) refers to fs_config.o(.text.efs_delete) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_analyse) refers to fs_config.o(.text.efs_analyse) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_check) refers to fs_config.o(.text.efs_check) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_format) refers to fs_config.o(.text.efs_format) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_free) refers to fs_config.o(.text.efs_free) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_defrag) refers to fs_config.o(.text.efs_defrag) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.efs_info) refers to fs_config.o(.text.efs_info) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_jour_init) refers to fs_config.o(.text.fat_jour_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fat_jour_prep) refers to fs_config.o(.text.fat_jour_prep) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fsj_set_space) refers to fs_config.o(.text.fsj_set_space) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fsj_write) refers to fs_config.o(.text.fsj_write) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.fsj_init) refers to fs_config.o(.text.fsj_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_init) refers to fs_config.o(.text.elink_init) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_dir) refers to fs_config.o(.text.elink_dir) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_cmd) refers to fs_config.o(.text.elink_cmd) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_insert) refers to fs_config.o(.text.elink_insert) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_delete) refers to fs_config.o(.text.elink_delete) for [Anonymous Symbol]
    fs_config.o(.ARM.exidx.text.elink_scan) refers to fs_config.o(.text.elink_scan) for [Anonymous Symbol]
    fs_config.o(.text.usb0_Init) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize) for FS_USBH_MSC_Initialize
    fs_config.o(.ARM.exidx.text.usb0_Init) refers to fs_config.o(.text.usb0_Init) for [Anonymous Symbol]
    fs_config.o(.text.usb0_UnInit) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize) for FS_USBH_MSC_Uninitialize
    fs_config.o(.ARM.exidx.text.usb0_UnInit) refers to fs_config.o(.text.usb0_UnInit) for [Anonymous Symbol]
    fs_config.o(.text.usb0_RdSect) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors) for FS_USBH_MSC_ReadSectors
    fs_config.o(.ARM.exidx.text.usb0_RdSect) refers to fs_config.o(.text.usb0_RdSect) for [Anonymous Symbol]
    fs_config.o(.text.usb0_WrSect) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors) for FS_USBH_MSC_WriteSectors
    fs_config.o(.ARM.exidx.text.usb0_WrSect) refers to fs_config.o(.text.usb0_WrSect) for [Anonymous Symbol]
    fs_config.o(.text.usb0_RdInfo) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo) for FS_USBH_MSC_ReadInfo
    fs_config.o(.ARM.exidx.text.usb0_RdInfo) refers to fs_config.o(.text.usb0_RdInfo) for [Anonymous Symbol]
    fs_config.o(.text.usb0_DevCtrl) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl) for FS_USBH_MSC_DeviceCtrl
    fs_config.o(.ARM.exidx.text.usb0_DevCtrl) refers to fs_config.o(.text.usb0_DevCtrl) for [Anonymous Symbol]
    fs_config.o(.rodata.fs_DevPool) refers to fs_config.o(.bss.fs_usb0_vol) for [Anonymous Symbol]
    fs_config.o(.rodata.fs_usb0_mtx_at) refers to fs_config.o(.bss.os.mutex.cb) for [Anonymous Symbol]
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_Init) for usb0_Init
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_UnInit) for usb0_UnInit
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_RdSect) for usb0_RdSect
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_WrSect) for usb0_WrSect
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_RdInfo) for usb0_RdInfo
    fs_config.o(.rodata.fs_usb0_drv) refers to fs_config.o(.text.usb0_DevCtrl) for usb0_DevCtrl
    usbh_config_0.o(.text.USBH_ThreadCreate) refers to usbh_config_0.o(.rodata.usbh_core_thread_attr) for usbh_core_thread_attr
    usbh_config_0.o(.text.USBH_ThreadCreate) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for USBH_Core_Thread
    usbh_config_0.o(.text.USBH_ThreadCreate) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    usbh_config_0.o(.ARM.exidx.text.USBH_ThreadCreate) refers to usbh_config_0.o(.text.USBH_ThreadCreate) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_ThreadGetHandle) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    usbh_config_0.o(.ARM.exidx.text.USBH_ThreadGetHandle) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_ThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    usbh_config_0.o(.ARM.exidx.text.USBH_ThreadTerminate) refers to usbh_config_0.o(.text.USBH_ThreadTerminate) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_Delay) refers to usbh_config_0.o(.text.USBH_MsToTick) for USBH_MsToTick
    usbh_config_0.o(.text.USBH_Delay) refers to rtx_delay.o(.text.osDelay) for osDelay
    usbh_config_0.o(.ARM.exidx.text.USBH_Delay) refers to usbh_config_0.o(.text.USBH_Delay) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_MsToTick) refers to usbh_config_0.o(.bss.USBH_MsToTick.tick_freq_mul) for USBH_MsToTick.tick_freq_mul
    usbh_config_0.o(.text.USBH_MsToTick) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for osKernelGetTickFreq
    usbh_config_0.o(.text.USBH_MsToTick) refers to usbh_config_0.o(.bss.USBH_MsToTick.max_ms) for USBH_MsToTick.max_ms
    usbh_config_0.o(.ARM.exidx.text.USBH_MsToTick) refers to usbh_config_0.o(.text.USBH_MsToTick) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_TimerCreate) refers to usbh_config_0.o(.bss.os.timer.cb) for usbh_debounce_timer_cb_mem
    usbh_config_0.o(.text.USBH_TimerCreate) refers to usbh_lib_core.o(.text.USBH_ConnectDebounce) for USBH_ConnectDebounce
    usbh_config_0.o(.text.USBH_TimerCreate) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    usbh_config_0.o(.ARM.exidx.text.USBH_TimerCreate) refers to usbh_config_0.o(.text.USBH_TimerCreate) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_TimerStart) refers to usbh_config_0.o(.text.USBH_MsToTick) for USBH_MsToTick
    usbh_config_0.o(.text.USBH_TimerStart) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    usbh_config_0.o(.ARM.exidx.text.USBH_TimerStart) refers to usbh_config_0.o(.text.USBH_TimerStart) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_TimerStop) refers to rtx_timer.o(.text.osTimerIsRunning) for osTimerIsRunning
    usbh_config_0.o(.text.USBH_TimerStop) refers to rtx_timer.o(.text.osTimerStop) for osTimerStop
    usbh_config_0.o(.ARM.exidx.text.USBH_TimerStop) refers to usbh_config_0.o(.text.USBH_TimerStop) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_TimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for osTimerDelete
    usbh_config_0.o(.ARM.exidx.text.USBH_TimerDelete) refers to usbh_config_0.o(.text.USBH_TimerDelete) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_ThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    usbh_config_0.o(.ARM.exidx.text.USBH_ThreadFlagsSet) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_ThreadFlagsWait) refers to usbh_config_0.o(.text.USBH_MsToTick) for USBH_MsToTick
    usbh_config_0.o(.text.USBH_ThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    usbh_config_0.o(.text.USBH_ThreadFlagsWait) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    usbh_config_0.o(.text.USBH_ThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    usbh_config_0.o(.ARM.exidx.text.USBH_ThreadFlagsWait) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_MutexCreate) refers to usbh_config_0.o(.bss.os.mutex.cb) for usbh_def_pipe_mutex_cb_mem
    usbh_config_0.o(.text.USBH_MutexCreate) refers to usbh_config_0.o(.data.usbh_def_pipe_mutex_attr) for usbh_def_pipe_mutex_attr
    usbh_config_0.o(.text.USBH_MutexCreate) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    usbh_config_0.o(.ARM.exidx.text.USBH_MutexCreate) refers to usbh_config_0.o(.text.USBH_MutexCreate) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_MutexAcquire) refers to usbh_config_0.o(.text.USBH_MsToTick) for USBH_MsToTick
    usbh_config_0.o(.text.USBH_MutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    usbh_config_0.o(.ARM.exidx.text.USBH_MutexAcquire) refers to usbh_config_0.o(.text.USBH_MutexAcquire) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_MutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    usbh_config_0.o(.ARM.exidx.text.USBH_MutexRelease) refers to usbh_config_0.o(.text.USBH_MutexRelease) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_MutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    usbh_config_0.o(.ARM.exidx.text.USBH_MutexDelete) refers to usbh_config_0.o(.text.USBH_MutexDelete) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_SemaphoreCreate) refers to usbh_config_0.o(.bss.os.semaphore.cb) for usbh_driver_semaphore_cb_mem
    usbh_config_0.o(.text.USBH_SemaphoreCreate) refers to usbh_config_0.o(.data.usbh_driver_semaphore_attr) for usbh_driver_semaphore_attr
    usbh_config_0.o(.text.USBH_SemaphoreCreate) refers to rtx_semaphore.o(.text.osSemaphoreNew) for osSemaphoreNew
    usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreCreate) refers to usbh_config_0.o(.text.USBH_SemaphoreCreate) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_SemaphoreAcquire) refers to usbh_config_0.o(.text.USBH_MsToTick) for USBH_MsToTick
    usbh_config_0.o(.text.USBH_SemaphoreAcquire) refers to rtx_semaphore.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreAcquire) refers to usbh_config_0.o(.text.USBH_SemaphoreAcquire) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_SemaphoreRelease) refers to rtx_semaphore.o(.text.osSemaphoreRelease) for osSemaphoreRelease
    usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreRelease) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH_SemaphoreDelete) refers to rtx_semaphore.o(.text.osSemaphoreDelete) for osSemaphoreDelete
    usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreDelete) refers to usbh_config_0.o(.text.USBH_SemaphoreDelete) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH0_SignalPortEvent) refers to usbh_lib_drv.o(.text.USBH_SignalPortEvent) for USBH_SignalPortEvent
    usbh_config_0.o(.ARM.exidx.text.USBH0_SignalPortEvent) refers to usbh_config_0.o(.text.USBH0_SignalPortEvent) for [Anonymous Symbol]
    usbh_config_0.o(.text.USBH0_SignalPipeEvent) refers to usbh_lib_drv.o(.text.USBH_SignalPipeEvent) for USBH_SignalPipeEvent
    usbh_config_0.o(.ARM.exidx.text.USBH0_SignalPipeEvent) refers to usbh_config_0.o(.text.USBH0_SignalPipeEvent) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_HID_Configure) refers to usbh_config_0.o(.text.USBH_HID_Configure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_HID_Unconfigure) refers to usbh_config_0.o(.text.USBH_HID_Unconfigure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_HID_Initialize_Lib) refers to usbh_config_0.o(.text.USBH_HID_Initialize_Lib) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_HID_Uninitialize_Lib) refers to usbh_config_0.o(.text.USBH_HID_Uninitialize_Lib) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Configure) refers to usbh_config_0.o(.text.USBH_CDC_Configure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Unconfigure) refers to usbh_config_0.o(.text.USBH_CDC_Unconfigure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Initialize_Lib) refers to usbh_config_0.o(.text.USBH_CDC_Initialize_Lib) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Uninitialize_Lib) refers to usbh_config_0.o(.text.USBH_CDC_Uninitialize_Lib) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Configure) refers to usbh_config_0.o(.text.USBH_CustomClass_Configure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Unconfigure) refers to usbh_config_0.o(.text.USBH_CustomClass_Unconfigure) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Initialize) refers to usbh_config_0.o(.text.USBH_CustomClass_Initialize) for [Anonymous Symbol]
    usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Uninitialize) refers to usbh_config_0.o(.text.USBH_CustomClass_Uninitialize) for [Anonymous Symbol]
    usbh_config_0.o(.data.usbh0_hcd_ptr) refers to usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1) for Driver_USBH1
    usbh_config_0.o(.data.usbh0_hc_ptr) refers to usbh_config_0.o(.rodata.usbh0_hc) for usbh0_hc
    usbh_config_0.o(.rodata.usbh0_core_thread_attr) refers to usbh_config_0.o(.rodata.str1.1) for [Anonymous Symbol]
    usbh_config_0.o(.rodata.usbh0_core_thread_attr) refers to usbh_config_0.o(.bss.os.thread.cb) for [Anonymous Symbol]
    usbh_config_0.o(.rodata.usbh0_core_thread_attr) refers to usbh_config_0.o(.bss.os.thread.stack) for [Anonymous Symbol]
    usbh_config_0.o(.rodata.usbh_core_thread_attr) refers to usbh_config_0.o(.rodata.usbh0_core_thread_attr) for usbh0_core_thread_attr
    usbh_config_0.o(.data.usbh_def_pipe_mutex_attr) refers to usbh_config_0.o(.bss.os.mutex.cb) for [Anonymous Symbol]
    usbh_config_0.o(.data.usbh_driver_semaphore_attr) refers to usbh_config_0.o(.bss.os.semaphore.cb) for [Anonymous Symbol]
    usbh_config_0.o(.rodata.usbh_hcd_ptr) refers to usbh_config_0.o(.data.usbh0_hcd_ptr) for usbh0_hcd_ptr
    usbh_config_0.o(.rodata.usbh_hci_hcd_ptr) refers to usbh_config_0.o(.bss.usbh0_hci_hcd_ptr) for usbh0_hci_hcd_ptr
    usbh_config_0.o(.rodata.usbh_hc_ptr) refers to usbh_config_0.o(.data.usbh0_hc_ptr) for usbh0_hc_ptr
    usbh_config_0.o(.rodata.usbh_ohci_ptr) refers to usbh_config_0.o(.bss.usbh0_ohci_ptr) for usbh0_ohci_ptr
    usbh_config_0.o(.rodata.usbh_ehci_ptr) refers to usbh_config_0.o(.bss.usbh0_ehci_ptr) for usbh0_ehci_ptr
    usbh_config_0.o(.rodata.usbh_power_ptr) refers to usbh_config_0.o(.rodata.usbh0_power) for usbh0_power
    usbh_config_0.o(.rodata.usbh_mem_pool_reloc_ptr) refers to usbh_config_0.o(.rodata.usbh0_mem_pool_reloc) for usbh0_mem_pool_reloc
    usbh_config_0.o(.rodata.usbh_mem_pool_ptr) refers to usbh_config_0.o(.bss.usbh0_mem_pool) for usbh0_mem_pool
    usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr) refers to usbh_config_0.o(.rodata.usbh0_mem_pool_size) for usbh0_mem_pool_size
    usbh_config_0.o(.rodata.usbh_pipe_ptr) refers to usbh_config_0.o(.bss.usbh0_pipe) for usbh0_pipe
    usbh_config_0.o(.rodata.usbh_pipe_num_ptr) refers to usbh_config_0.o(.rodata.usbh0_pipe_num) for usbh0_pipe_num
    usbh_config_0.o(.rodata.usbh_cb_port_event_ptr) refers to usbh_config_0.o(.text.USBH0_SignalPortEvent) for USBH0_SignalPortEvent
    usbh_config_0.o(.rodata.usbh_cb_pipe_event_ptr) refers to usbh_config_0.o(.text.USBH0_SignalPipeEvent) for USBH0_SignalPipeEvent
    fs_mapi.o(.ARM.exidx.text.fs_config_evr) refers to fs_mapi.o(.text.fs_config_evr) for [Anonymous Symbol]
    fs_mapi.o(.text.fversion) refers to fs_version.o(.rodata.fs_lib_version) for fs_lib_version
    fs_mapi.o(.ARM.exidx.text.fversion) refers to fs_mapi.o(.text.fversion) for [Anonymous Symbol]
    fs_mapi.o(.text.finit) refers to fs_mapi.o(.text.fs_config_evr) for fs_config_evr
    fs_mapi.o(.text.finit) refers to fs_config.o(.text.fs_get_rtos_tick_freq) for fs_get_rtos_tick_freq
    fs_mapi.o(.text.finit) refers to fs_common.o(.text.fs_set_cdrive) for fs_set_cdrive
    fs_mapi.o(.text.finit) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.finit) refers to fs_common.o(.text.get_u32) for get_u32
    fs_mapi.o(.text.finit) refers to fs_config.o(.text.efs_init) for efs_init
    fs_mapi.o(.text.finit) refers to fs_fat.o(.text.fat_init) for fat_init
    fs_mapi.o(.text.finit) refers to fs_mapi.o(.bss.cfg_done) for [Anonymous Symbol]
    fs_mapi.o(.text.finit) refers to fs_config.o(.bss.fs_ms_rtos_tick) for fs_ms_rtos_tick
    fs_mapi.o(.text.finit) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_mapi.o(.text.finit) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_mapi.o(.text.finit) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_mapi.o(.text.finit) refers to fs_config.o(.rodata.fs_efs_fh_cnt) for fs_efs_fh_cnt
    fs_mapi.o(.text.finit) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_mapi.o(.text.finit) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.finit) refers to fs_mapi.o(.text.finit) for [Anonymous Symbol]
    fs_mapi.o(.text.funinit) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.funinit) refers to fs_config.o(.text.efs_uninit) for efs_uninit
    fs_mapi.o(.text.funinit) refers to fs_fat.o(.text.fat_uninit) for fat_uninit
    fs_mapi.o(.text.funinit) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.funinit) refers to fs_mapi.o(.text.funinit) for [Anonymous Symbol]
    fs_mapi.o(.text.fmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text.fmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text.fmount) refers to fs_config.o(.text.efs_mount) for efs_mount
    fs_mapi.o(.text.fmount) refers to fs_fat.o(.text.fat_mount) for fat_mount
    fs_mapi.o(.text.fmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text.fmount) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fmount) refers to fs_mapi.o(.text.fmount) for [Anonymous Symbol]
    fs_mapi.o(.text.funmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.funmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text.funmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text.funmount) refers to fs_config.o(.text.efs_unmount) for efs_unmount
    fs_mapi.o(.text.funmount) refers to fs_fat.o(.text.fat_unmount) for fat_unmount
    fs_mapi.o(.text.funmount) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text.funmount) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.funmount) refers to fs_mapi.o(.text.funmount) for [Anonymous Symbol]
    fs_mapi.o(.text.ffind) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.ffind) refers to fs_common.o(.text.fs_strpos) for fs_strpos
    fs_mapi.o(.text.ffind) refers to strcmpv7em.o(.text) for strcmp
    fs_mapi.o(.text.ffind) refers to strlen.o(.text) for strlen
    fs_mapi.o(.text.ffind) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.text.ffind) refers to fs_config.o(.text.efs_ffind) for efs_ffind
    fs_mapi.o(.text.ffind) refers to fs_fat.o(.text.fat_ffind) for fat_ffind
    fs_mapi.o(.text.ffind) refers to fs_common.o(.text.fs_strmatch) for fs_strmatch
    fs_mapi.o(.text.ffind) refers to fs_common.o(.text.fs_strncasecmp) for fs_strncasecmp
    fs_mapi.o(.text.ffind) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.text.ffind) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.ffind) refers to fs_mapi.o(.text.ffind) for [Anonymous Symbol]
    fs_mapi.o(.text._fdelete_legacy) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text._fdelete_legacy) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text._fdelete_legacy) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text._fdelete_legacy) refers to fs_config.o(.text.efs_delete) for efs_delete
    fs_mapi.o(.text._fdelete_legacy) refers to fs_fat.o(.text.fat_delete_l) for fat_delete_l
    fs_mapi.o(.text._fdelete_legacy) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text._fdelete_legacy) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text._fdelete_legacy) refers to fs_mapi.o(.text._fdelete_legacy) for [Anonymous Symbol]
    fs_mapi.o(.text._fdelete) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text._fdelete) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text._fdelete) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text._fdelete) refers to fs_config.o(.text.efs_delete) for efs_delete
    fs_mapi.o(.text._fdelete) refers to fs_fat.o(.text.fat_delete) for fat_delete
    fs_mapi.o(.text._fdelete) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text._fdelete) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text._fdelete) refers to fs_mapi.o(.text._fdelete) for [Anonymous Symbol]
    fs_mapi.o(.text.frename) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.frename) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text.frename) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.frename) refers to fs_config.o(.text.efs_rename) for efs_rename
    fs_mapi.o(.text.frename) refers to fs_fat.o(.text.fat_rename) for fat_rename
    fs_mapi.o(.text.frename) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.frename) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.frename) refers to fs_mapi.o(.text.frename) for [Anonymous Symbol]
    fs_mapi.o(.text.fanalyse) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fanalyse) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fanalyse) refers to fs_config.o(.text.efs_analyse) for efs_analyse
    fs_mapi.o(.text.fanalyse) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fanalyse) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fanalyse) refers to fs_mapi.o(.text.fanalyse) for [Anonymous Symbol]
    fs_mapi.o(.text.fcheck) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fcheck) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fcheck) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_mapi.o(.text.fcheck) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fcheck) refers to fs_config.o(.text.efs_check) for efs_check
    fs_mapi.o(.text.fcheck) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fcheck) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fcheck) refers to fs_mapi.o(.text.fcheck) for [Anonymous Symbol]
    fs_mapi.o(.text.fformat) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fformat) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text.fformat) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text.fformat) refers to fs_config.o(.text.efs_format) for efs_format
    fs_mapi.o(.text.fformat) refers to fs_fat.o(.text.fat_format) for fat_format
    fs_mapi.o(.text.fformat) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text.fformat) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fformat) refers to fs_mapi.o(.text.fformat) for [Anonymous Symbol]
    fs_mapi.o(.text.ffree) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.ffree) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text.ffree) refers to fs_config.o(.text.efs_free) for efs_free
    fs_mapi.o(.text.ffree) refers to fs_fat.o(.text.fat_free) for fat_free
    fs_mapi.o(.text.ffree) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text.ffree) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.ffree) refers to fs_mapi.o(.text.ffree) for [Anonymous Symbol]
    fs_mapi.o(.text.fdefrag) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fdefrag) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fdefrag) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_mapi.o(.text.fdefrag) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fdefrag) refers to fs_config.o(.text.efs_defrag) for efs_defrag
    fs_mapi.o(.text.fdefrag) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fdefrag) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fdefrag) refers to fs_mapi.o(.text.fdefrag) for [Anonymous Symbol]
    fs_mapi.o(.text.fattrib) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.fattrib) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fattrib) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fattrib) refers to fs_fat.o(.text.fat_attrib) for fat_attrib
    fs_mapi.o(.text.fattrib) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fattrib) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fattrib) refers to fs_mapi.o(.text.fattrib) for [Anonymous Symbol]
    fs_mapi.o(.text.fvol) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_8) for OUTLINED_FUNCTION_8
    fs_mapi.o(.text.fvol) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fvol) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.text.fvol) refers to fs_fat.o(.text.fat_vol) for fat_vol
    fs_mapi.o(.text.fvol) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.text.fvol) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fvol) refers to fs_mapi.o(.text.fvol) for [Anonymous Symbol]
    fs_mapi.o(.text.fmedia) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fmedia) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fmedia) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_mapi.o(.text.fmedia) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fmedia) refers to fs_fat.o(.text.fat_media) for fat_media
    fs_mapi.o(.text.fmedia) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fmedia) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fmedia) refers to fs_mapi.o(.text.fmedia) for [Anonymous Symbol]
    fs_mapi.o(.text.finfo) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.finfo) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_mapi.o(.text.finfo) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_mapi.o(.text.finfo) refers to fs_config.o(.text.efs_info) for efs_info
    fs_mapi.o(.text.finfo) refers to fs_fat.o(.text.fat_info) for fat_info
    fs_mapi.o(.text.finfo) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_mapi.o(.text.finfo) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.finfo) refers to fs_mapi.o(.text.finfo) for [Anonymous Symbol]
    fs_mapi.o(.text.fchdir) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.fchdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fchdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_mapi.o(.text.fchdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fchdir) refers to fs_fat.o(.text.fat_chdir) for fat_chdir
    fs_mapi.o(.text.fchdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fchdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fchdir) refers to fs_mapi.o(.text.fchdir) for [Anonymous Symbol]
    fs_mapi.o(.text.fchdrive) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_mapi.o(.text.fchdrive) refers to fs_common.o(.text.fs_set_cdrive) for fs_set_cdrive
    fs_mapi.o(.ARM.exidx.text.fchdrive) refers to fs_mapi.o(.text.fchdrive) for [Anonymous Symbol]
    fs_mapi.o(.text.fpwd) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_8) for OUTLINED_FUNCTION_8
    fs_mapi.o(.text.fpwd) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fpwd) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.text.fpwd) refers to fs_fat.o(.text.fat_pwd) for fat_pwd
    fs_mapi.o(.text.fpwd) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.text.fpwd) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fpwd) refers to fs_mapi.o(.text.fpwd) for [Anonymous Symbol]
    fs_mapi.o(.text.fmkdir) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.fmkdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.fmkdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_mapi.o(.text.fmkdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.fmkdir) refers to fs_fat.o(.text.fat_mkdir) for fat_mkdir
    fs_mapi.o(.text.fmkdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.fmkdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.fmkdir) refers to fs_mapi.o(.text.fmkdir) for [Anonymous Symbol]
    fs_mapi.o(.text.frmdir) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.frmdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.frmdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_mapi.o(.text.frmdir) refers to fs_fat.o(.text.fat_rmdir) for fat_rmdir
    fs_mapi.o(.text.frmdir) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_mapi.o(.text.frmdir) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.frmdir) refers to fs_mapi.o(.text.frmdir) for [Anonymous Symbol]
    fs_mapi.o(.text.ftime_set) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.ftime_set) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.ftime_set) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.text.ftime_set) refers to fs_fat.o(.text.fat_time_set) for fat_time_set
    fs_mapi.o(.text.ftime_set) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.text.ftime_set) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.ftime_set) refers to fs_mapi.o(.text.ftime_set) for [Anonymous Symbol]
    fs_mapi.o(.text.ftime_get) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.text.ftime_get) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_mapi.o(.text.ftime_get) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.text.ftime_get) refers to fs_fat.o(.text.fat_time_get) for fat_time_get
    fs_mapi.o(.text.ftime_get) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.text.ftime_get) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_mapi.o(.ARM.exidx.text.ftime_get) refers to fs_mapi.o(.text.ftime_get) for [Anonymous Symbol]
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_1) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_3) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_4) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_5) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_7) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_7) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_7) for [Anonymous Symbol]
    fs_mapi.o(.text.OUTLINED_FUNCTION_8) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_8) refers to fs_mapi.o(.text.OUTLINED_FUNCTION_8) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_open) refers to fs_sys.o(.text.fs_open) for fs_open
    fs_sys.o(.ARM.exidx.text.__sys_open) refers to fs_sys.o(.text.__sys_open) for [Anonymous Symbol]
    fs_sys.o(.text.fs_open) refers to fs_common.o(.text.fs_drive_id) for fs_drive_id
    fs_sys.o(.text.fs_open) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_open) refers to fs_config.o(.text.efs_handle_get) for efs_handle_get
    fs_sys.o(.text.fs_open) refers to fs_config.o(.text.efs_open) for efs_open
    fs_sys.o(.text.fs_open) refers to fs_fat.o(.text.fat_handle_get) for fat_handle_get
    fs_sys.o(.text.fs_open) refers to fs_fat.o(.text.fat_open) for fat_open
    fs_sys.o(.text.fs_open) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_open) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_open) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_sys.o(.text.fs_open) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_open) refers to fs_sys.o(.text.fs_open) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_close) refers to fs_sys.o(.text.fs_close) for fs_close
    fs_sys.o(.ARM.exidx.text.__sys_close) refers to fs_sys.o(.text.__sys_close) for [Anonymous Symbol]
    fs_sys.o(.text.fs_close) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_close) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_close) refers to fs_fat.o(.text.fat_close) for fat_close
    fs_sys.o(.text.fs_close) refers to fs_config.o(.text.efs_close) for efs_close
    fs_sys.o(.text.fs_close) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_close) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_close) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_close) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_close) refers to fs_sys.o(.text.fs_close) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_write) refers to fs_sys.o(.text.fs_write) for fs_write
    fs_sys.o(.ARM.exidx.text.__sys_write) refers to fs_sys.o(.text.__sys_write) for [Anonymous Symbol]
    fs_sys.o(.text.fs_write) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_write) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_write) refers to fs_fat.o(.text.fat_write) for fat_write
    fs_sys.o(.text.fs_write) refers to fs_config.o(.text.efs_write) for efs_write
    fs_sys.o(.text.fs_write) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_write) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_write) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_write) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_write) refers to fs_sys.o(.text.fs_write) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_read) refers to fs_sys.o(.text.fs_read) for fs_read
    fs_sys.o(.ARM.exidx.text.__sys_read) refers to fs_sys.o(.text.__sys_read) for [Anonymous Symbol]
    fs_sys.o(.text.fs_read) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_read) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_read) refers to fs_fat.o(.text.fat_read) for fat_read
    fs_sys.o(.text.fs_read) refers to fs_config.o(.text.efs_read) for efs_read
    fs_sys.o(.text.fs_read) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_read) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_read) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_read) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_read) refers to fs_sys.o(.text.fs_read) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_ensure) refers to fs_sys.o(.text.fs_flush) for fs_flush
    fs_sys.o(.ARM.exidx.text.__sys_ensure) refers to fs_sys.o(.text.__sys_ensure) for [Anonymous Symbol]
    fs_sys.o(.text.fs_flush) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_flush) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_flush) refers to fs_fat.o(.text.fat_flush) for fat_flush
    fs_sys.o(.text.fs_flush) refers to fs_config.o(.text.efs_flush) for efs_flush
    fs_sys.o(.text.fs_flush) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_flush) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_flush) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_flush) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_flush) refers to fs_sys.o(.text.fs_flush) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_flen) refers to fs_sys.o(.text.fs_size) for fs_size
    fs_sys.o(.ARM.exidx.text.__sys_flen) refers to fs_sys.o(.text.__sys_flen) for [Anonymous Symbol]
    fs_sys.o(.text.fs_size) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_size) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_size) refers to fs_fat.o(.text.fat_flen) for fat_flen
    fs_sys.o(.text.fs_size) refers to fs_config.o(.text.efs_flen) for efs_flen
    fs_sys.o(.text.fs_size) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_size) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_size) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_size) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_size) refers to fs_sys.o(.text.fs_size) for [Anonymous Symbol]
    fs_sys.o(.text.__sys_seek) refers to fs_sys.o(.text.fs_seek) for fs_seek
    fs_sys.o(.ARM.exidx.text.__sys_seek) refers to fs_sys.o(.text.__sys_seek) for [Anonymous Symbol]
    fs_sys.o(.text.fs_seek) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_sys.o(.text.fs_seek) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_sys.o(.text.fs_seek) refers to fs_fat.o(.text.fat_seek) for fat_seek
    fs_sys.o(.text.fs_seek) refers to fs_config.o(.text.efs_seek) for efs_seek
    fs_sys.o(.text.fs_seek) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fs_sys.o(.text.fs_seek) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_sys.o(.text.fs_seek) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_sys.o(.text.fs_seek) refers to fs_config.o(.bss.fs_efs_fh) for fs_efs_fh
    fs_sys.o(.ARM.exidx.text.fs_seek) refers to fs_sys.o(.text.fs_seek) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fopen) refers to fs_sys.o(.text.fs_open) for fs_open
    fs_sys.o(.ARM.exidx.text.fs_fopen) refers to fs_sys.o(.text.fs_fopen) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fclose) refers to fs_sys.o(.text.fs_close) for fs_close
    fs_sys.o(.ARM.exidx.text.fs_fclose) refers to fs_sys.o(.text.fs_fclose) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fwrite) refers to fs_sys.o(.text.fs_write) for fs_write
    fs_sys.o(.ARM.exidx.text.fs_fwrite) refers to fs_sys.o(.text.fs_fwrite) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fread) refers to fs_sys.o(.text.fs_read) for fs_read
    fs_sys.o(.ARM.exidx.text.fs_fread) refers to fs_sys.o(.text.fs_fread) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fflush) refers to fs_sys.o(.text.fs_flush) for fs_flush
    fs_sys.o(.ARM.exidx.text.fs_fflush) refers to fs_sys.o(.text.fs_fflush) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fseek) refers to fs_sys.o(.text.fs_seek) for fs_seek
    fs_sys.o(.ARM.exidx.text.fs_fseek) refers to fs_sys.o(.text.fs_fseek) for [Anonymous Symbol]
    fs_sys.o(.text.fs_fsize) refers to fs_sys.o(.text.fs_size) for fs_size
    fs_sys.o(.ARM.exidx.text.fs_fsize) refers to fs_sys.o(.text.fs_fsize) for [Anonymous Symbol]
    fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to fs_sys.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    fs_sys.o(.text.OUTLINED_FUNCTION_1) refers to fs_config.o(.text.fs_mutex_acquire) for fs_mutex_acquire
    fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to fs_sys.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    fs_sys.o(.text.OUTLINED_FUNCTION_2) refers to fs_config.o(.text.fs_mutex_release) for fs_mutex_release
    fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to fs_sys.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_GetVersion) refers to usb_lib_ver.o(__MW_USB_LIB_VERSION_6.17.0) for usb_lib_version
    usbh_lib_core.o(.ARM.exidx.text.USBH_GetVersion) refers to usbh_lib_core.o(.text.USBH_GetVersion) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_core.o(.text.CheckController) for CheckController
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverGetVersion) for USBH_DriverGetVersion
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverGetCapabilities) for USBH_DriverGetCapabilities
    usbh_lib_core.o(.text.USBH_Initialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usbh_lib_core.o(.text.USBH_Initialize) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_SemaphoreCreate) for USBH_SemaphoreCreate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_MutexCreate) for USBH_MutexCreate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_TimerCreate) for USBH_TimerCreate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_ThreadCreate) for USBH_ThreadCreate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_core.o(.text.USBH_MemoryInitialize) for USBH_MemoryInitialize
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverInitialize) for USBH_DriverInitialize
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverPowerControl) for USBH_DriverPowerControl
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_core.o(.text.USBH_GetFree_PIPE) for USBH_GetFree_PIPE
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverPipeCreate) for USBH_DriverPipeCreate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) for USBH_DriverPortVbusOnOff
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_ThreadTerminate) for USBH_ThreadTerminate
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_16) for OUTLINED_FUNCTION_16
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_TimerDelete) for USBH_TimerDelete
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_MutexDelete) for USBH_MutexDelete
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_SemaphoreDelete) for USBH_SemaphoreDelete
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_lib_mem.o(.text.USBH_MemoryGetPoolSize) for USBH_MemoryGetPoolSize
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_Initialize) refers to usb_lib_ver.o(__MW_USB_LIB_VERSION_6.17.0) for usb_lib_version
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_drv_version) for usbh_drv_version
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_capabilities) for usbh_capabilities
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.rodata.usbh_pipe_ptr) for usbh_pipe_ptr
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.rodata.usbh_pipe_num_ptr) for usbh_pipe_num_ptr
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_def_pipe_mutex_id) for usbh_def_pipe_mutex_id
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_debounce_timer_id) for usbh_debounce_timer_id
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.rodata.usbh_cb_port_event_ptr) for usbh_cb_port_event_ptr
    usbh_lib_core.o(.text.USBH_Initialize) refers to usbh_config_0.o(.rodata.usbh_cb_pipe_event_ptr) for usbh_cb_pipe_event_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_Initialize) refers to usbh_lib_core.o(.text.USBH_Initialize) for [Anonymous Symbol]
    usbh_lib_core.o(.text.CheckController) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_core.o(.text.CheckController) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_core.o(.ARM.exidx.text.CheckController) refers to usbh_lib_core.o(.text.CheckController) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_MemoryInitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_MemoryInitialize) refers to usbh_lib_mem.o(.text.USBH_MemoryInitializeLib) for USBH_MemoryInitializeLib
    usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryInitialize) refers to usbh_lib_core.o(.text.USBH_MemoryInitialize) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverPipeDelete) for USBH_DriverPipeDelete
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.USBH_UninitializeDevices) for USBH_UninitializeDevices
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) for USBH_DriverPortVbusOnOff
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverPowerControl) for USBH_DriverPowerControl
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverUninitialize) for USBH_DriverUninitialize
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.text.USBH_ThreadTerminate) for USBH_ThreadTerminate
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_16) for OUTLINED_FUNCTION_16
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.text.USBH_TimerDelete) for USBH_TimerDelete
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.text.USBH_MutexDelete) for USBH_MutexDelete
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.text.USBH_SemaphoreDelete) for USBH_SemaphoreDelete
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.USBH_MemoryUninitialize) for USBH_MemoryUninitialize
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_17) for OUTLINED_FUNCTION_17
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_capabilities) for usbh_capabilities
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_debounce_timer_id) for usbh_debounce_timer_id
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_def_pipe_mutex_id) for usbh_def_pipe_mutex_id
    usbh_lib_core.o(.text.USBH_Uninitialize) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_core.o(.ARM.exidx.text.USBH_Uninitialize) refers to usbh_lib_core.o(.text.USBH_Uninitialize) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_lib_core.o(.text.CheckController) for CheckController
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_CustomClass_Uninitialize) for USBH_CustomClass_Uninitialize
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_CustomClass_Unconfigure) for USBH_CustomClass_Unconfigure
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_lib_msc.o(.text.USBH_MSC_Uninitialize_Lib) for USBH_MSC_Uninitialize_Lib
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) for USBH_MSC_Unconfigure
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_CDC_Uninitialize_Lib) for USBH_CDC_Uninitialize_Lib
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_HID_Uninitialize_Lib) for USBH_HID_Uninitialize_Lib
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_CDC_Unconfigure) for USBH_CDC_Unconfigure
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.text.USBH_HID_Unconfigure) for USBH_HID_Unconfigure
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_UninitializeDevices) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.ARM.exidx.text.USBH_UninitializeDevices) refers to usbh_lib_core.o(.text.USBH_UninitializeDevices) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_MemoryUninitialize) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_MemoryUninitialize) refers to usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib) for USBH_MemoryUninitializeLib
    usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryUninitialize) refers to usbh_lib_core.o(.text.USBH_MemoryUninitialize) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Port_Suspend) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Port_Suspend) refers to usbh_lib_drv.o(.text.USBH_DriverPortSuspend) for USBH_DriverPortSuspend
    usbh_lib_core.o(.ARM.exidx.text.USBH_Port_Suspend) refers to usbh_lib_core.o(.text.USBH_Port_Suspend) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Port_Resume) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Port_Resume) refers to usbh_lib_drv.o(.text.USBH_DriverPortResume) for USBH_DriverPortResume
    usbh_lib_core.o(.ARM.exidx.text.USBH_Port_Resume) refers to usbh_lib_core.o(.text.USBH_Port_Resume) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetController) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetController) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetController) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetController) refers to usbh_lib_core.o(.text.USBH_Device_GetController) for [Anonymous Symbol]
    usbh_lib_core.o(.text.CheckDeviceInstanceConfigured) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.CheckDeviceInstanceConfigured) refers to usbh_lib_core.o(.text.CheckDeviceInstanceConfigured) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetPort) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetPort) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetPort) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetPort) refers to usbh_lib_core.o(.text.USBH_Device_GetPort) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetStatus) refers to usbh_lib_core.o(.text.CheckDeviceInstance) for CheckDeviceInstance
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetStatus) refers to usbh_lib_core.o(.text.USBH_Device_GetStatus) for [Anonymous Symbol]
    usbh_lib_core.o(.text.CheckDeviceInstance) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.CheckDeviceInstance) refers to usbh_lib_core.o(.text.CheckDeviceInstance) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetSpeed) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetSpeed) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetSpeed) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetSpeed) refers to usbh_lib_core.o(.text.USBH_Device_GetSpeed) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetAddress) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetAddress) refers to usbh_lib_core.o(.text.USBH_Device_GetAddress) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetVID) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetVID) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetVID) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetVID) refers to usbh_lib_core.o(.text.USBH_Device_GetVID) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetPID) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    usbh_lib_core.o(.text.USBH_Device_GetPID) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    usbh_lib_core.o(.text.USBH_Device_GetPID) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetPID) refers to usbh_lib_core.o(.text.USBH_Device_GetPID) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Device_GetStringDescriptor) refers to usbh_lib_core.o(.text.CheckDeviceInstance) for CheckDeviceInstance
    usbh_lib_core.o(.text.USBH_Device_GetStringDescriptor) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for USBH_DeviceRequest_GetDescriptor
    usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetStringDescriptor) refers to usbh_lib_core.o(.text.USBH_Device_GetStringDescriptor) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetDescriptor) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.USBH_Notify) refers to usbh_lib_core.o(.text.USBH_Notify) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_CustomClass_GetDevice) refers to usbh_config_0.o(.rodata.usbh_cls_num) for usbh_cls_num
    usbh_lib_core.o(.text.USBH_CustomClass_GetDevice) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.USBH_CustomClass_GetDevice) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_GetDevice) refers to usbh_lib_core.o(.text.USBH_CustomClass_GetDevice) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_CustomClass_GetStatus) refers to usbh_config_0.o(.rodata.usbh_cls_num) for usbh_cls_num
    usbh_lib_core.o(.text.USBH_CustomClass_GetStatus) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.USBH_CustomClass_GetStatus) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_GetStatus) refers to usbh_lib_core.o(.text.USBH_CustomClass_GetStatus) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Configure) refers to usbh_lib_core.o(.text.USBH_CustomClass_Configure) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Unconfigure) refers to usbh_lib_core.o(.text.USBH_CustomClass_Unconfigure) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Initialize) refers to usbh_lib_core.o(.text.USBH_CustomClass_Initialize) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Uninitialize) refers to usbh_lib_core.o(.text.USBH_CustomClass_Uninitialize) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeCreate) refers to usbh_lib_core.o(.text.USBH_GetFree_PIPE) for USBH_GetFree_PIPE
    usbh_lib_core.o(.text.USBH_PipeCreate) refers to usbh_lib_drv.o(.text.USBH_DriverPipeCreate) for USBH_DriverPipeCreate
    usbh_lib_core.o(.text.USBH_PipeCreate) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeCreate) refers to usbh_lib_core.o(.text.USBH_PipeCreate) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_GetFree_PIPE) refers to usbh_config_0.o(.rodata.usbh_pipe_ptr) for usbh_pipe_ptr
    usbh_lib_core.o(.text.USBH_GetFree_PIPE) refers to usbh_config_0.o(.rodata.usbh_pipe_num_ptr) for usbh_pipe_num_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_GetFree_PIPE) refers to usbh_lib_core.o(.text.USBH_GetFree_PIPE) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeRegisterCallback) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeRegisterCallback) refers to usbh_lib_core.o(.text.USBH_PipeRegisterCallback) for [Anonymous Symbol]
    usbh_lib_core.o(.text.CheckPipe) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.CheckPipe) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.CheckPipe) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_core.o(.ARM.exidx.text.CheckPipe) refers to usbh_lib_core.o(.text.CheckPipe) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeUpdate) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    usbh_lib_core.o(.text.USBH_PipeUpdate) refers to usbh_lib_drv.o(.text.USBH_DriverPipeModify) for USBH_DriverPipeModify
    usbh_lib_core.o(.text.USBH_PipeUpdate) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeUpdate) refers to usbh_lib_core.o(.text.USBH_PipeUpdate) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeDelete) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    usbh_lib_core.o(.text.USBH_PipeDelete) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    usbh_lib_core.o(.text.USBH_PipeDelete) refers to usbh_lib_drv.o(.text.USBH_DriverPipeDelete) for USBH_DriverPipeDelete
    usbh_lib_core.o(.text.USBH_PipeDelete) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_core.o(.text.USBH_PipeDelete) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeDelete) refers to usbh_lib_core.o(.text.USBH_PipeDelete) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeReset) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    usbh_lib_core.o(.text.USBH_PipeReset) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    usbh_lib_core.o(.text.USBH_PipeReset) refers to usbh_lib_drv.o(.text.USBH_DriverPipeReset) for USBH_DriverPipeReset
    usbh_lib_core.o(.text.USBH_PipeReset) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReset) refers to usbh_lib_core.o(.text.USBH_PipeReset) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) for USBH_DriverPipeTransfer
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_mem.o(.text.USBH_MemoryIsInPool) for USBH_MemoryIsInPool
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for USBH_ThreadGetHandle
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) for USBH_DriverPipeTransferGetResult
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.rodata.usbh_mem_pool_reloc_ptr) for usbh_mem_pool_reloc_ptr
    usbh_lib_core.o(.text.USBH_PipeReceive) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReceive) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_MemoryAllocate) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_MemoryAllocate) refers to usbh_lib_mem.o(.text.USBH_MemoryAllocateLib) for USBH_MemoryAllocateLib
    usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryAllocate) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_MemoryFree) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_MemoryFree) refers to usbh_lib_mem.o(.text.USBH_MemoryFreeLib) for USBH_MemoryFreeLib
    usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryFree) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeReceiveGetResult) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReceiveGetResult) refers to usbh_lib_core.o(.text.USBH_PipeReceiveGetResult) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) for USBH_DriverPipeTransfer
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_mem.o(.text.USBH_MemoryIsInPool) for USBH_MemoryIsInPool
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for USBH_ThreadGetHandle
    usbh_lib_core.o(.text.USBH_PipeSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) for USBH_DriverPipeTransferGetResult
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_core.o(.text.USBH_PipeDoPing) for USBH_PipeDoPing
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.rodata.usbh_mem_pool_reloc_ptr) for usbh_mem_pool_reloc_ptr
    usbh_lib_core.o(.text.USBH_PipeSend) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeSend) refers to usbh_lib_core.o(.text.USBH_PipeSend) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for USBH_ThreadGetHandle
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) for USBH_DriverPipeTransfer
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_PipeDoPing) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeDoPing) refers to usbh_lib_core.o(.text.USBH_PipeDoPing) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeSendGetResult) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeSendGetResult) refers to usbh_lib_core.o(.text.USBH_PipeSendGetResult) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_lib_drv.o(.text.USBH_SignalPipeEvent) for USBH_SignalPipeEvent
    usbh_lib_core.o(.text.USBH_PipeAbort) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_PipeAbort) refers to usbh_lib_core.o(.text.USBH_PipeAbort) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_MutexAcquire) for USBH_MutexAcquire
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_17) for OUTLINED_FUNCTION_17
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_27) for OUTLINED_FUNCTION_27
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_drv.o(.text.USBH_DriverPipeModify) for USBH_DriverPipeModify
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_mem.o(.text.USBH_MemoryIsInPool) for USBH_MemoryIsInPool
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for USBH_ThreadGetHandle
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) for USBH_DriverPipeTransfer
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) for USBH_DeviceRequest_ClearFeature
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.text.USBH_MutexRelease) for USBH_MutexRelease
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.bss.usbh_def_pipe_mutex_id) for usbh_def_pipe_mutex_id
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_ControlTransfer) refers to usbh_config_0.o(.rodata.usbh_mem_pool_reloc_ptr) for usbh_mem_pool_reloc_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_ControlTransfer) refers to usbh_lib_core.o(.text.USBH_ControlTransfer) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_ClearFeature) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetStatus) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetFeature) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_27) for OUTLINED_FUNCTION_27
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetAddress) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetDescriptor) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.USBH_ControlTransfer) for USBH_ControlTransfer
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetConfiguration) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_27) for OUTLINED_FUNCTION_27
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetConfiguration) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetInterface) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetInterface) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SynchFrame) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe) refers to usbh_config_0.o(.rodata.usbh_pipe_ptr) for usbh_pipe_ptr
    usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe) refers to usbh_config_0.o(.rodata.usbh_pipe_num_ptr) for usbh_pipe_num_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_Get_Thread_ID_of_Pipe) refers to usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe) refers to usbh_config_0.o(.rodata.usbh_pipe_ptr) for usbh_pipe_ptr
    usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe) refers to usbh_config_0.o(.rodata.usbh_pipe_num_ptr) for usbh_pipe_num_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_Get_PipeCallback_of_Pipe) refers to usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.text.USBH_ThreadGetHandle) for USBH_ThreadGetHandle
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_RecoverDevice) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_core.o(.ARM.exidx.text.USBH_RecoverDevice) refers to usbh_lib_core.o(.text.USBH_RecoverDevice) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_lib_drv.o(.text.USBH_DriverPortGetState) for USBH_DriverPortGetState
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.text.USBH_TimerStart) for USBH_TimerStart
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.bss.usbh_capabilities) for usbh_capabilities
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.rodata.usbh_debounce_in_ms) for usbh_debounce_in_ms
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.bss.usbh_debounce_timer_id) for usbh_debounce_timer_id
    usbh_lib_core.o(.text.USBH_ConnectDebounce) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_core.o(.ARM.exidx.text.USBH_ConnectDebounce) refers to usbh_lib_core.o(.text.USBH_ConnectDebounce) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.text.USBH_ThreadFlagsWait) for USBH_ThreadFlagsWait
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Notify) for USBH_Notify
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Engine) for USBH_Engine
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_23) for OUTLINED_FUNCTION_23
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_28) for OUTLINED_FUNCTION_28
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_22) for OUTLINED_FUNCTION_22
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_lib_drv.o(.text.USBH_DriverPortGetState) for USBH_DriverPortGetState
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.text.USBH_TimerStart) for USBH_TimerStart
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.bss.usbh_capabilities) for usbh_capabilities
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_Core_Thread) refers to usbh_config_0.o(.bss.usbh_debounce_timer_id) for usbh_debounce_timer_id
    usbh_lib_core.o(.ARM.exidx.text.USBH_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_drv.o(.text.USBH_DriverPortGetState) for USBH_DriverPortGetState
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_drv.o(.text.USBH_DriverPortReset) for USBH_DriverPortReset
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_drv.o(.text.USBH_DriverPortSuspend) for USBH_DriverPortSuspend
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_drv.o(.text.USBH_DriverPortResume) for USBH_DriverPortResume
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) for USBH_DeviceRequest_SetAddress
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_21) for OUTLINED_FUNCTION_21
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_24) for OUTLINED_FUNCTION_24
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_17) for OUTLINED_FUNCTION_17
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) for USBH_RecoveryEnumerateDevice
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for USBH_DeviceRequest_GetDescriptor
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_26) for OUTLINED_FUNCTION_26
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_Notify) for USBH_Notify
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CustomClass_Configure) for USBH_CustomClass_Configure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_HID_Configure) for USBH_HID_Configure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CDC_Configure) for USBH_CDC_Configure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_msc.o(.text.USBH_MSC_Configure) for USBH_MSC_Configure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_25) for OUTLINED_FUNCTION_25
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) for USBH_DeviceRequest_SetConfiguration
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CustomClass_Initialize) for USBH_CustomClass_Initialize
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CustomClass_Unconfigure) for USBH_CustomClass_Unconfigure
    usbh_lib_core.o(.text.USBH_Engine) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) for USBH_MSC_Initialize_Lib
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) for USBH_MSC_Unconfigure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CDC_Initialize_Lib) for USBH_CDC_Initialize_Lib
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_HID_Initialize_Lib) for USBH_HID_Initialize_Lib
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_CDC_Unconfigure) for USBH_CDC_Unconfigure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.text.USBH_HID_Unconfigure) for USBH_HID_Unconfigure
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_UninitializeDevices) for USBH_UninitializeDevices
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_Engine) refers to usbh_config_0.o(.rodata.usbh_power_ptr) for usbh_power_ptr
    usbh_lib_core.o(.ARM.exidx.text.USBH_Engine) refers to usbh_lib_core.o(.text.USBH_Engine) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH0_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for USBH_Core_Thread
    usbh_lib_core.o(.ARM.exidx.text.USBH0_Core_Thread) refers to usbh_lib_core.o(.text.USBH0_Core_Thread) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH1_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for USBH_Core_Thread
    usbh_lib_core.o(.ARM.exidx.text.USBH1_Core_Thread) refers to usbh_lib_core.o(.text.USBH1_Core_Thread) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH2_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for USBH_Core_Thread
    usbh_lib_core.o(.ARM.exidx.text.USBH2_Core_Thread) refers to usbh_lib_core.o(.text.USBH2_Core_Thread) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH3_Core_Thread) refers to usbh_lib_core.o(.text.USBH_Core_Thread) for USBH_Core_Thread
    usbh_lib_core.o(.ARM.exidx.text.USBH3_Core_Thread) refers to usbh_lib_core.o(.text.USBH3_Core_Thread) for [Anonymous Symbol]
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.CheckController) for CheckController
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_8) for OUTLINED_FUNCTION_8
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress) for USBH_DeviceRequest_SetAddress
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_21) for OUTLINED_FUNCTION_21
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for USBH_DeviceRequest_GetDescriptor
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration) for USBH_DeviceRequest_SetConfiguration
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_config_0.o(.rodata.usbh_dev_num) for usbh_dev_num
    usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_core.o(.ARM.exidx.text.USBH_RecoveryEnumerateDevice) refers to usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) refers to usbh_lib_core.o(.text.CheckController) for CheckController
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) refers to usbh_lib_core.o(.text.CheckController) for CheckController
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_7) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_7) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_8) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for USBH_DeviceRequest_GetDescriptor
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_8) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_8) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_9) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_9) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_10) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_10) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) refers to usbh_lib_core.o(.text.USBH_ControlTransfer) for USBH_ControlTransfer
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_11) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_11) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) refers to usbh_lib_core.o(.text.USBH_ControlTransfer) for USBH_ControlTransfer
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_12) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_12) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_13) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_13) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_14) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for USBH_DriverPipeTransferAbort
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_14) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_14) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_15) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_15) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_16) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_16) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_17) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_17) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_17) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_18) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_18) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) refers to usbh_lib_core.o(.text.CheckDeviceInstanceConfigured) for CheckDeviceInstanceConfigured
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_19) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_19) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_20) refers to usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) for USBH_DriverPortVbusOnOff
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_20) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_20) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_21) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_21) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_21) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_22) refers to usbh_lib_core.o(.text.USBH_Notify) for USBH_Notify
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_22) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_22) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_23) refers to usbh_lib_core.o(.text.USBH_Notify) for USBH_Notify
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_23) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_23) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_24) refers to usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor) for USBH_DeviceRequest_GetDescriptor
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_24) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_24) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_25) refers to usbh_lib_core.o(.text.USBH_Notify) for USBH_Notify
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_25) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_25) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_26) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_26) for [Anonymous Symbol]
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_27) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_27) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_28) refers to usbh_lib_core.o(.text.USBH_Engine) for USBH_Engine
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_28) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_28) for [Anonymous Symbol]
    usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) refers to usbh_lib_core.o(.text.CheckPipe) for CheckPipe
    usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_29) refers to usbh_lib_core.o(.text.OUTLINED_FUNCTION_29) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverGetVersion) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetVersion) refers to usbh_lib_drv.o(.text.USBH_DriverGetVersion) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverGetCapabilities) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetCapabilities) refers to usbh_lib_drv.o(.text.USBH_DriverGetCapabilities) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverInitialize) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverInitialize) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverInitialize) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverInitialize) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverInitialize) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverInitialize) refers to usbh_lib_drv.o(.text.USBH_DriverInitialize) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverUninitialize) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverUninitialize) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverUninitialize) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for USBH_SemaphoreRelease
    usbh_lib_drv.o(.text.USBH_DriverUninitialize) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverUninitialize) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverUninitialize) refers to usbh_lib_drv.o(.text.USBH_DriverUninitialize) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPowerControl) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPowerControl) refers to usbh_lib_drv.o(.text.USBH_DriverPowerControl) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortVbusOnOff) refers to usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_drv.o(.text.USBH_DriverPortReset) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortReset) refers to usbh_lib_drv.o(.text.USBH_DriverPortReset) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPortSuspend) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortSuspend) refers to usbh_lib_drv.o(.text.USBH_DriverPortSuspend) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPortResume) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortResume) refers to usbh_lib_drv.o(.text.USBH_DriverPortResume) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPortGetState) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.text.USBH_DriverPortGetState) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortGetState) refers to usbh_lib_drv.o(.text.USBH_DriverPortGetState) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeCreate) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverPipeCreate) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeCreate) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_drv.o(.text.USBH_DriverPipeCreate) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeCreate) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeCreate) refers to usbh_lib_drv.o(.text.USBH_DriverPipeCreate) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeModify) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverPipeModify) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeModify) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for USBH_SemaphoreRelease
    usbh_lib_drv.o(.text.USBH_DriverPipeModify) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeModify) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeModify) refers to usbh_lib_drv.o(.text.USBH_DriverPipeModify) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_config_0.o(.text.USBH_SemaphoreAcquire) for USBH_SemaphoreAcquire
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeDelete) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeDelete) refers to usbh_lib_drv.o(.text.USBH_DriverPipeDelete) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeReset) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeReset) refers to usbh_lib_drv.o(.text.USBH_DriverPipeReset) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for USBH_SemaphoreRelease
    usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransfer) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransfer) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransferGetResult) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransferAbort) refers to usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) refers to usbh_config_0.o(.bss.usbh_driver_semaphore_id) for usbh_driver_semaphore_id
    usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) refers to usbh_config_0.o(.rodata.usbh_hcd_ptr) for usbh_hcd_ptr
    usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetFrameNumber) refers to usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_SignalPortEvent) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_drv.o(.text.USBH_SignalPortEvent) refers to usbh_config_0.o(.bss.usbh_hci) for usbh_hci
    usbh_lib_drv.o(.text.USBH_SignalPortEvent) refers to usbh_config_0.o(.bss.usbh_core_thread_id) for usbh_core_thread_id
    usbh_lib_drv.o(.ARM.exidx.text.USBH_SignalPortEvent) refers to usbh_lib_drv.o(.text.USBH_SignalPortEvent) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.USBH_SignalPipeEvent) refers to usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe) for USBH_Get_PipeCallback_of_Pipe
    usbh_lib_drv.o(.text.USBH_SignalPipeEvent) refers to usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe) for USBH_Get_Thread_ID_of_Pipe
    usbh_lib_drv.o(.text.USBH_SignalPipeEvent) refers to usbh_config_0.o(.text.USBH_ThreadFlagsSet) for USBH_ThreadFlagsSet
    usbh_lib_drv.o(.ARM.exidx.text.USBH_SignalPipeEvent) refers to usbh_lib_drv.o(.text.USBH_SignalPipeEvent) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) refers to usbh_config_0.o(.text.USBH_SemaphoreAcquire) for USBH_SemaphoreAcquire
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for USBH_SemaphoreRelease
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) refers to usbh_config_0.o(.text.USBH_SemaphoreAcquire) for USBH_SemaphoreAcquire
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4) refers to usbh_config_0.o(.text.USBH_SemaphoreRelease) for USBH_SemaphoreRelease
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_7) refers to usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7) for [Anonymous Symbol]
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Initialize) refers to usbh_lib_msc.o(.text.USBH_MSC_Initialize) for [Anonymous Symbol]
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Uninitialize) refers to usbh_lib_msc.o(.text.USBH_MSC_Uninitialize) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_GetDevice) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_GetDevice) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.text.USBH_MSC_GetDevice) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_GetDevice) refers to usbh_lib_msc.o(.text.USBH_MSC_GetDevice) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.CheckInstance) refers to usbh_config_0.o(.rodata.usbh_msc_num) for usbh_msc_num
    usbh_lib_msc.o(.text.CheckInstance) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.text.CheckInstance) refers to usbh_config_0.o(.rodata.usbh_hc_num) for usbh_hc_num
    usbh_lib_msc.o(.ARM.exidx.text.CheckInstance) refers to usbh_lib_msc.o(.text.CheckInstance) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_GetStatus) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_GetStatus) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_GetStatus) refers to usbh_lib_msc.o(.text.USBH_MSC_GetStatus) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Read) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_Read) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) for USBH_MSC_SCSI_Read10
    usbh_lib_msc.o(.text.USBH_MSC_Read) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_msc.o(.text.USBH_MSC_Read) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Read) refers to usbh_lib_msc.o(.text.USBH_MSC_Read) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_Read10) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.USBH_MSC_Write) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Write) refers to usbh_lib_msc.o(.text.USBH_MSC_Write) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_ReadCapacity) refers to usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to usbh_lib_core.o(.text.USBH_PipeCreate) for USBH_PipeCreate
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to usbh_lib_core.o(.text.USBH_PipeDelete) for USBH_PipeDelete
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to usbh_config_0.o(.bss.usbh_dev) for usbh_dev
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to usbh_config_0.o(.rodata.usbh_msc_num) for usbh_msc_num
    usbh_lib_msc.o(.text.USBH_MSC_Configure) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Configure) refers to usbh_lib_msc.o(.text.USBH_MSC_Configure) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) refers to usbh_lib_core.o(.text.USBH_PipeAbort) for USBH_PipeAbort
    usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) refers to usbh_lib_core.o(.text.USBH_PipeDelete) for USBH_PipeDelete
    usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Unconfigure) refers to usbh_lib_msc.o(.text.USBH_MSC_Unconfigure) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_GetDevice) for USBH_MSC_GetDevice
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_core.o(.text.USBH_ControlTransfer) for USBH_ControlTransfer
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) for USBH_MSC_SCSI_TestUnitReady
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) for USBH_MSC_SCSI_RequestSense
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10) for USBH_MSC_SCSI_Read10
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_Initialize) for USBH_MSC_Initialize
    usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Initialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_TestUnitReady) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_core.o(.text.USBH_PipeSend) for USBH_PipeSend
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_core.o(.text.USBH_PipeReceive) for USBH_PipeReceive
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_RequestSense) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.USBH_MSC_Uninitialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_Uninitialize) for USBH_MSC_Uninitialize
    usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Uninitialize_Lib) refers to usbh_lib_msc.o(.text.USBH_MSC_Uninitialize_Lib) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize) refers to usbh_lib_msc.o(.text.USBH_MSC_GetStatus) for USBH_MSC_GetStatus
    usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_Initialize) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) for USBH_MSC_SCSI_TestUnitReady
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_Uninitialize) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors) refers to usbh_lib_msc.o(.text.USBH_MSC_Read) for USBH_MSC_Read
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_ReadSectors) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors) refers to usbh_lib_msc.o(.text.USBH_MSC_Write) for USBH_MSC_Write
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_WriteSectors) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo) refers to usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity) for USBH_MSC_ReadCapacity
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_ReadInfo) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl) refers to usbh_lib_msc.o(.text.USBH_MSC_GetStatus) for USBH_MSC_GetStatus
    usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl) refers to usbh_config_0.o(.bss.usbh_msc) for usbh_msc
    usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_DeviceCtrl) refers to usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_0) refers to usbh_lib_core.o(.text.USBH_MemoryFree) for USBH_MemoryFree
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1) refers to usbh_config_0.o(.text.USBH_Delay) for USBH_Delay
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) refers to usbh_lib_msc.o(.text.CheckInstance) for CheckInstance
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_3) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense) for USBH_MSC_SCSI_RequestSense
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_4) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) refers to usbh_lib_core.o(.text.USBH_MemoryAllocate) for USBH_MemoryAllocate
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    usbh_lib_msc.o(.text.OUTLINED_FUNCTION_6) refers to usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady) for USBH_MSC_SCSI_TestUnitReady
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_7) refers to usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7) for [Anonymous Symbol]
    fs_common.o(.text.fs_set_cdrive) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_common.o(.text.fs_set_cdrive) refers to fs_common.o(.bss.fs_cdrive_id) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.fs_set_cdrive) refers to fs_common.o(.text.fs_set_cdrive) for [Anonymous Symbol]
    fs_common.o(.text.fs_drive_id) refers to fs_config.o(.rodata.fs_ndrv) for fs_ndrv
    fs_common.o(.text.fs_drive_id) refers to fs_config.o(.rodata.fs_DevPool) for fs_DevPool
    fs_common.o(.text.fs_drive_id) refers to fs_common.o(.bss.fs_cdrive_id) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.fs_drive_id) refers to fs_common.o(.text.fs_drive_id) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.fs_strpos) refers to fs_common.o(.text.fs_strpos) for [Anonymous Symbol]
    fs_common.o(.text.fs_strncasecmp) refers to tolower.o(.text) for tolower
    fs_common.o(.ARM.exidx.text.fs_strncasecmp) refers to fs_common.o(.text.fs_strncasecmp) for [Anonymous Symbol]
    fs_common.o(.text.fs_strmatch) refers to fs_common.o(.text.fs_strncasecmp) for fs_strncasecmp
    fs_common.o(.text.fs_strmatch) refers to strlen.o(.text) for strlen
    fs_common.o(.ARM.exidx.text.fs_strmatch) refers to fs_common.o(.text.fs_strmatch) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.get_u16) refers to fs_common.o(.text.get_u16) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.set_u16) refers to fs_common.o(.text.set_u16) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.get_u32) refers to fs_common.o(.text.get_u32) for [Anonymous Symbol]
    fs_common.o(.ARM.exidx.text.set_u32) refers to fs_common.o(.text.set_u32) for [Anonymous Symbol]
    fs_fat.o(.text.fat_handle_get) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fs_fat.o(.text.fat_handle_get) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.text.fat_handle_get) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.ARM.exidx.text.fat_handle_get) refers to fs_fat.o(.text.fat_handle_get) for [Anonymous Symbol]
    fs_fat.o(.text.fat_jour_init) refers to fs_fat.o(.text.switch_fat) for switch_fat
    fs_fat.o(.text.fat_jour_init) refers to fs_fat.o(.text.j_find_rsvd) for j_find_rsvd
    fs_fat.o(.text.fat_jour_init) refers to fs_fat.o(.text.j_chk_rsvd) for j_chk_rsvd
    fs_fat.o(.text.fat_jour_init) refers to fs_fat.o(.text.j_mark_rsvd) for j_mark_rsvd
    fs_fat.o(.text.fat_jour_init) refers to fs_fat.o(.text.j_rep_space) for j_rep_space
    fs_fat.o(.text.fat_jour_init) refers to fs_config.o(.text.fat_jour_prep) for fat_jour_prep
    fs_fat.o(.text.fat_jour_init) refers to fs_config.o(.text.fsj_init) for fsj_init
    fs_fat.o(.ARM.exidx.text.fat_jour_init) refers to fs_fat.o(.text.fat_jour_init) for [Anonymous Symbol]
    fs_fat.o(.text.fat_jour_prep) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.fat_jour_prep) refers to fs_fat.o(.text.j_mark_rsvd) for j_mark_rsvd
    fs_fat.o(.text.fat_jour_prep) refers to fs_fat.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    fs_fat.o(.text.fat_jour_prep) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.text.fat_jour_prep) refers to fs_fat.o(.text.write_sector) for write_sector
    fs_fat.o(.text.fat_jour_prep) refers to fs_fat.o(.text.j_rep_space) for j_rep_space
    fs_fat.o(.ARM.exidx.text.fat_jour_prep) refers to fs_fat.o(.text.fat_jour_prep) for [Anonymous Symbol]
    fs_fat.o(.text.j_rep_space) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.j_rep_space) refers to fs_config.o(.text.fsj_set_space) for fsj_set_space
    fs_fat.o(.ARM.exidx.text.j_rep_space) refers to fs_fat.o(.text.j_rep_space) for [Anonymous Symbol]
    fs_fat.o(.text.j_mark_rsvd) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.j_mark_rsvd) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.j_mark_rsvd) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.text.j_mark_rsvd) refers to fs_fat.o(.rodata..Lswitch.table.j_chk_rsvd) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.j_mark_rsvd) refers to fs_fat.o(.text.j_mark_rsvd) for [Anonymous Symbol]
    fs_fat.o(.text.fat_init) refers to fs_config.o(.text.fs_config) for fs_config
    fs_fat.o(.ARM.exidx.text.fat_init) refers to fs_fat.o(.text.fat_init) for [Anonymous Symbol]
    fs_fat.o(.text.fat_uninit) refers to fs_config.o(.text.fs_mutex_delete) for fs_mutex_delete
    fs_fat.o(.text.fat_uninit) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fs_fat.o(.ARM.exidx.text.fat_uninit) refers to fs_fat.o(.text.fat_uninit) for [Anonymous Symbol]
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_mount) refers to fs_config.o(.text.elink_init) for elink_init
    fs_fat.o(.text.fat_mount) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.OUTLINED_FUNCTION_27) for OUTLINED_FUNCTION_27
    fs_fat.o(.text.fat_mount) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_mount) refers to fs_config.o(.text.fat_jour_init) for fat_jour_init
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.read_cache) for read_cache
    fs_fat.o(.text.fat_mount) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    fs_fat.o(.text.fat_mount) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.ARM.exidx.text.fat_mount) refers to fs_fat.o(.text.fat_mount) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_vol_chk) refers to fs_fat.o(.text.fat_vol_chk) for [Anonymous Symbol]
    fs_fat.o(.text.fsinfo_write) refers to rt_memclr.o(.text) for __aeabi_memclr
    fs_fat.o(.text.fsinfo_write) refers to fs_fat.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_fat.o(.text.fsinfo_write) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.text.fsinfo_write) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.ARM.exidx.text.fsinfo_write) refers to fs_fat.o(.text.fsinfo_write) for [Anonymous Symbol]
    fs_fat.o(.text.fat_unmount) refers to fs_fat.o(.text.fat_close) for fat_close
    fs_fat.o(.text.fat_unmount) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.text.fat_unmount) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.ARM.exidx.text.fat_unmount) refers to fs_fat.o(.text.fat_unmount) for [Anonymous Symbol]
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.fat_close) refers to fs_time.o(.text.fs_get_time) for fs_get_time
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.format_time) for format_time
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.fat_close) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.text.fat_close) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.fat_close) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.OUTLINED_FUNCTION_26) for OUTLINED_FUNCTION_26
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.OUTLINED_FUNCTION_28) for OUTLINED_FUNCTION_28
    fs_fat.o(.text.fat_close) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.text.fat_close) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_close) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_close) refers to fs_fat.o(.text.fat_close) for [Anonymous Symbol]
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_24) for OUTLINED_FUNCTION_24
    fs_fat.o(.text.fat_format) refers to aeabi_memset.o(.text) for __aeabi_memset
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.find_param) for find_param
    fs_fat.o(.text.fat_format) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    fs_fat.o(.text.fat_format) refers to rt_memclr.o(.text) for __aeabi_memclr
    fs_fat.o(.text.fat_format) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_format) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.write_sector) for write_sector
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.text.fat_format) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    fs_fat.o(.text.fat_format) refers to fs_time.o(.text.fs_get_time) for fs_get_time
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.format_time) for format_time
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    fs_fat.o(.text.fat_format) refers to fs_config.o(.text.fat_jour_prep) for fat_jour_prep
    fs_fat.o(.text.fat_format) refers to fs_config.o(.text.fat_jour_init) for fat_jour_init
    fs_fat.o(.text.fat_format) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.text.fat_format) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.text.fat_format) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.rodata.IniDevCfg) for [Anonymous Symbol]
    fs_fat.o(.text.fat_format) refers to fs_fat.o(.rodata.str1.4) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_format) refers to fs_fat.o(.text.fat_format) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.find_param) refers to fs_fat.o(.text.find_param) for [Anonymous Symbol]
    fs_fat.o(.text.write_cache) refers to fs_fat.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_fat.o(.text.write_cache) refers to fs_fat.o(.text.write_sector) for write_sector
    fs_fat.o(.ARM.exidx.text.write_cache) refers to fs_fat.o(.text.write_cache) for [Anonymous Symbol]
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.path_open) for path_open
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.file_locked) for file_locked
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.text.fat_open) refers to fs_time.o(.text.fs_get_time) for fs_get_time
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.format_time) for format_time
    fs_fat.o(.text.fat_open) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.unlink_clus) for unlink_clus
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.fsinfo_write) for fsinfo_write
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.path_create) for path_create
    fs_fat.o(.text.fat_open) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.fat_open) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.text.fat_open) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_open) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_open) refers to fs_fat.o(.text.fat_open) for [Anonymous Symbol]
    fs_fat.o(.text.path_validate) refers to fs_fat.o(.text.name_validate) for name_validate
    fs_fat.o(.text.path_validate) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.ARM.exidx.text.path_validate) refers to fs_fat.o(.text.path_validate) for [Anonymous Symbol]
    fs_fat.o(.text.path_init) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.ARM.exidx.text.path_init) refers to fs_fat.o(.text.path_init) for [Anonymous Symbol]
    fs_fat.o(.text.path_open) refers to fs_fat.o(.text.name_strip) for name_strip
    fs_fat.o(.text.path_open) refers to fs_fat.o(.text.name_analyse) for name_analyse
    fs_fat.o(.text.path_open) refers to fs_fat.o(.text.frec_find_elink) for frec_find_elink
    fs_fat.o(.text.path_open) refers to fs_fat.o(.text.frec_find) for frec_find
    fs_fat.o(.text.path_open) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.text.path_open) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.ARM.exidx.text.path_open) refers to fs_fat.o(.text.path_open) for [Anonymous Symbol]
    fs_fat.o(.text.entry_pos_inc) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.ARM.exidx.text.entry_pos_inc) refers to fs_fat.o(.text.entry_pos_inc) for [Anonymous Symbol]
    fs_fat.o(.text.file_locked) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.text.file_locked) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.ARM.exidx.text.file_locked) refers to fs_fat.o(.text.file_locked) for [Anonymous Symbol]
    fs_fat.o(.text.extract_clus) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.ARM.exidx.text.extract_clus) refers to fs_fat.o(.text.extract_clus) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.format_time) refers to fs_fat.o(.text.format_time) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.format_date) refers to fs_fat.o(.text.format_date) for [Anonymous Symbol]
    fs_fat.o(.text.entry_flush) refers to fs_fat.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    fs_fat.o(.text.entry_flush) refers to fs_fat.o(.text.write_sector) for write_sector
    fs_fat.o(.text.entry_flush) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.ARM.exidx.text.entry_flush) refers to fs_fat.o(.text.entry_flush) for [Anonymous Symbol]
    fs_fat.o(.text.unlink_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.unlink_clus) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.unlink_clus) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.unlink_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.unlink_clus) refers to fs_fat.o(.rodata..Lswitch.table.fat_seek) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.unlink_clus) refers to fs_fat.o(.text.unlink_clus) for [Anonymous Symbol]
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.name_strip) for name_strip
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.name_analyse) for name_analyse
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.char_validate) for char_validate
    fs_fat.o(.text.path_create) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.OUTLINED_FUNCTION_8) for OUTLINED_FUNCTION_8
    fs_fat.o(.text.path_create) refers to strlen.o(.text) for strlen
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.frec_find_elink) for frec_find_elink
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.frec_find) for frec_find
    fs_fat.o(.text.path_create) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.entry_pos_comp) for entry_pos_comp
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.entry_type) for entry_type
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.alloc_clus) for alloc_clus
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.clear_clus) for clear_clus
    fs_fat.o(.text.path_create) refers to fs_time.o(.text.fs_get_time) for fs_get_time
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.format_time) for format_time
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.name_hash) for name_hash
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.sn_chksum) for sn_chksum
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.short_ent_hash) for short_ent_hash
    fs_fat.o(.text.path_create) refers to fs_config.o(.text.elink_insert) for elink_insert
    fs_fat.o(.text.path_create) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.OUTLINED_FUNCTION_28) for OUTLINED_FUNCTION_28
    fs_fat.o(.text.path_create) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.text.path_create) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.path_create) refers to fs_fat.o(.rodata.ChIndex) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.path_create) refers to fs_fat.o(.text.path_create) for [Anonymous Symbol]
    fs_fat.o(.text.entry_read) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.entry_read) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.ARM.exidx.text.entry_read) refers to fs_fat.o(.text.entry_read) for [Anonymous Symbol]
    fs_fat.o(.text.cache_fat) refers to fs_config.o(.text.fsj_write) for fsj_write
    fs_fat.o(.text.cache_fat) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.ARM.exidx.text.cache_fat) refers to fs_fat.o(.text.cache_fat) for [Anonymous Symbol]
    fs_fat.o(.text.fat_read) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_read) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.fat_read) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.fat_read) refers to fs_fat.o(.text.read_cache) for read_cache
    fs_fat.o(.text.fat_read) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.text.fat_read) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_read) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_read) refers to fs_fat.o(.text.fat_read) for [Anonymous Symbol]
    fs_fat.o(.text.alloc_table_read) refers to fs_fat.o(.text.get_fat_sect) for get_fat_sect
    fs_fat.o(.text.alloc_table_read) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.text.alloc_table_read) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.text.alloc_table_read) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.ARM.exidx.text.alloc_table_read) refers to fs_fat.o(.text.alloc_table_read) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.clus_to_sect) refers to fs_fat.o(.text.clus_to_sect) for [Anonymous Symbol]
    fs_fat.o(.text.read_cache) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.read_cache) refers to fs_fat.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_fat.o(.ARM.exidx.text.read_cache) refers to fs_fat.o(.text.read_cache) for [Anonymous Symbol]
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.alloc_clus) for alloc_clus
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.fat_write) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.text.fat_write) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.text.fat_write) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_write) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_write) refers to fs_fat.o(.text.fat_write) for [Anonymous Symbol]
    fs_fat.o(.text.alloc_clus) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.alloc_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.alloc_clus) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.alloc_clus) refers to fs_fat.o(.rodata..Lswitch.table.fat_seek) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.alloc_clus) refers to fs_fat.o(.text.alloc_clus) for [Anonymous Symbol]
    fs_fat.o(.text.read_sector) refers to fs_fat.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    fs_fat.o(.text.read_sector) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.ARM.exidx.text.read_sector) refers to fs_fat.o(.text.read_sector) for [Anonymous Symbol]
    fs_fat.o(.text.fat_flush) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.text.fat_flush) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.text.fat_flush) refers to fs_fat.o(.text.OUTLINED_FUNCTION_26) for OUTLINED_FUNCTION_26
    fs_fat.o(.text.fat_flush) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_flush) refers to fs_fat.o(.text.fat_flush) for [Anonymous Symbol]
    fs_fat.o(.text.fat_flen) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.ARM.exidx.text.fat_flen) refers to fs_fat.o(.text.fat_flen) for [Anonymous Symbol]
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.alloc_clus) for alloc_clus
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.clear_clus) for clear_clus
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.fat_seek) refers to rt_memclr.o(.text) for __aeabi_memclr
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.text.alloc_table_write) for alloc_table_write
    fs_fat.o(.text.fat_seek) refers to fs_config.o(.rodata.fs_fat_fh_cnt) for fs_fat_fh_cnt
    fs_fat.o(.text.fat_seek) refers to fs_config.o(.bss.fs_fat_fh) for fs_fat_fh
    fs_fat.o(.text.fat_seek) refers to fs_fat.o(.rodata..Lswitch.table.fat_seek) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_seek) refers to fs_fat.o(.text.fat_seek) for [Anonymous Symbol]
    fs_fat.o(.text.clear_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_13) for OUTLINED_FUNCTION_13
    fs_fat.o(.text.clear_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    fs_fat.o(.text.clear_clus) refers to fs_fat.o(.text.OUTLINED_FUNCTION_10) for OUTLINED_FUNCTION_10
    fs_fat.o(.text.clear_clus) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.ARM.exidx.text.clear_clus) refers to fs_fat.o(.text.clear_clus) for [Anonymous Symbol]
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.frec_delete_elink) for frec_delete_elink
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_25) for OUTLINED_FUNCTION_25
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.unlink_clus) for unlink_clus
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.entry_type) for entry_type
    fs_fat.o(.text.fat_delete_l) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    fs_fat.o(.ARM.exidx.text.fat_delete_l) refers to fs_fat.o(.text.fat_delete_l) for [Anonymous Symbol]
    fs_fat.o(.text.frec_delete_elink) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.text.frec_delete_elink) refers to fs_fat.o(.text.entry_pos_comp) for entry_pos_comp
    fs_fat.o(.text.frec_delete_elink) refers to fs_config.o(.text.elink_delete) for elink_delete
    fs_fat.o(.ARM.exidx.text.frec_delete_elink) refers to fs_fat.o(.text.frec_delete_elink) for [Anonymous Symbol]
    fs_fat.o(.text.frec_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    fs_fat.o(.text.frec_delete) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.text.frec_delete) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.ARM.exidx.text.frec_delete) refers to fs_fat.o(.text.frec_delete) for [Anonymous Symbol]
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.find_param) for find_param
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_21) for OUTLINED_FUNCTION_21
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_16) for OUTLINED_FUNCTION_16
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.file_locked) for file_locked
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.unlink_clus) for unlink_clus
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.frec_delete_elink) for frec_delete_elink
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_25) for OUTLINED_FUNCTION_25
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.text.OUTLINED_FUNCTION_28) for OUTLINED_FUNCTION_28
    fs_fat.o(.text.fat_delete) refers to fs_fat.o(.rodata.str1.1) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_delete) refers to fs_fat.o(.text.fat_delete) for [Anonymous Symbol]
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.entry_type) for entry_type
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.sn_chksum) for sn_chksum
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.sfn_extract) for sfn_extract
    fs_fat.o(.text.frec_next) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.short_ent_hash) for short_ent_hash
    fs_fat.o(.text.frec_next) refers to fs_config.o(.text.elink_insert) for elink_insert
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.lfn_char_cnt) for lfn_char_cnt
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.OUTLINED_FUNCTION_17) for OUTLINED_FUNCTION_17
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.long_ent_hash) for long_ent_hash
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    fs_fat.o(.text.frec_next) refers to fs_fat.o(.rodata.ChIndex) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.frec_next) refers to fs_fat.o(.text.frec_next) for [Anonymous Symbol]
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.OUTLINED_FUNCTION_23) for OUTLINED_FUNCTION_23
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.path_open) for path_open
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_ffind) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.text.fat_ffind) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.text.fat_ffind) refers to fs_fat.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    fs_fat.o(.ARM.exidx.text.fat_ffind) refers to fs_fat.o(.text.fat_ffind) for [Anonymous Symbol]
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    fs_fat.o(.text.fat_rename) refers to strlen.o(.text) for strlen
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.name_validate) for name_validate
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_22) for OUTLINED_FUNCTION_22
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.name_hash) for name_hash
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.file_locked) for file_locked
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.path_create) for path_create
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    fs_fat.o(.text.fat_rename) refers to fs_time.o(.text.fs_get_time) for fs_get_time
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.fat_rename) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.text.fat_rename) refers to fs_config.o(.text.elink_scan) for elink_scan
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.frec_delete_elink) for frec_delete_elink
    fs_fat.o(.text.fat_rename) refers to fs_fat.o(.text.OUTLINED_FUNCTION_25) for OUTLINED_FUNCTION_25
    fs_fat.o(.ARM.exidx.text.fat_rename) refers to fs_fat.o(.text.fat_rename) for [Anonymous Symbol]
    fs_fat.o(.text.name_validate) refers to fs_fat.o(.text.char_validate) for char_validate
    fs_fat.o(.ARM.exidx.text.name_validate) refers to fs_fat.o(.text.name_validate) for [Anonymous Symbol]
    fs_fat.o(.text.name_hash) refers to fs_fat.o(.text.fat_crc32) for fat_crc32
    fs_fat.o(.ARM.exidx.text.name_hash) refers to fs_fat.o(.text.name_hash) for [Anonymous Symbol]
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.path_create) for path_create
    fs_fat.o(.text.fat_mkdir) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.ARM.exidx.text.fat_mkdir) refers to fs_fat.o(.text.fat_mkdir) for [Anonymous Symbol]
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.find_param) for find_param
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_21) for OUTLINED_FUNCTION_21
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.unlink_clus) for unlink_clus
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.frec_delete_elink) for frec_delete_elink
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_25) for OUTLINED_FUNCTION_25
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    fs_fat.o(.text.fat_rmdir) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for OUTLINED_FUNCTION_20
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for OUTLINED_FUNCTION_19
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_28) for OUTLINED_FUNCTION_28
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for OUTLINED_FUNCTION_7
    fs_fat.o(.text.fat_rmdir) refers to fs_fat.o(.rodata.str1.1) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_rmdir) refers to fs_fat.o(.text.fat_rmdir) for [Anonymous Symbol]
    fs_fat.o(.text.fat_media) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.ARM.exidx.text.fat_media) refers to fs_fat.o(.text.fat_media) for [Anonymous Symbol]
    fs_fat.o(.text.fat_info) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.ARM.exidx.text.fat_info) refers to fs_fat.o(.text.fat_info) for [Anonymous Symbol]
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.text.fat_chdir) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.text.fat_chdir) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.text.fat_chdir) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.ARM.exidx.text.fat_chdir) refers to fs_fat.o(.text.fat_chdir) for [Anonymous Symbol]
    fs_fat.o(.text.fat_pwd) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_pwd) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.fat_pwd) refers to fs_fat.o(.text.OUTLINED_FUNCTION_11) for OUTLINED_FUNCTION_11
    fs_fat.o(.text.fat_pwd) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.text.fat_pwd) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.text.fat_pwd) refers to strlen.o(.text) for strlen
    fs_fat.o(.text.fat_pwd) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.ARM.exidx.text.fat_pwd) refers to fs_fat.o(.text.fat_pwd) for [Anonymous Symbol]
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.OUTLINED_FUNCTION_22) for OUTLINED_FUNCTION_22
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.file_locked) for file_locked
    fs_fat.o(.text.fat_attrib) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.ARM.exidx.text.fat_attrib) refers to fs_fat.o(.text.fat_attrib) for [Anonymous Symbol]
    fs_fat.o(.text.fat_free) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_free) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.fat_free) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.ARM.exidx.text.fat_free) refers to fs_fat.o(.text.fat_free) for [Anonymous Symbol]
    fs_fat.o(.text.fat_vol) refers to fs_fat.o(.text.OUTLINED_FUNCTION_23) for OUTLINED_FUNCTION_23
    fs_fat.o(.text.fat_vol) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.fat_vol) refers to fs_fat.o(.text.entry_type) for entry_type
    fs_fat.o(.text.fat_vol) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_vol) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.fat_vol) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.ARM.exidx.text.fat_vol) refers to fs_fat.o(.text.fat_vol) for [Anonymous Symbol]
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.path_open) for path_open
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.file_locked) for file_locked
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.format_time) for format_time
    fs_fat.o(.text.fat_time_set) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.format_date) for format_date
    fs_fat.o(.text.fat_time_set) refers to fs_fat.o(.text.entry_flush) for entry_flush
    fs_fat.o(.ARM.exidx.text.fat_time_set) refers to fs_fat.o(.text.fat_time_set) for [Anonymous Symbol]
    fs_fat.o(.text.fat_time_get) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for OUTLINED_FUNCTION_18
    fs_fat.o(.text.fat_time_get) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.text.fat_time_get) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.text.fat_time_get) refers to fs_fat.o(.text.path_open) for path_open
    fs_fat.o(.text.fat_time_get) refers to fs_fat.o(.text.OUTLINED_FUNCTION_9) for OUTLINED_FUNCTION_9
    fs_fat.o(.ARM.exidx.text.fat_time_get) refers to fs_fat.o(.text.fat_time_get) for [Anonymous Symbol]
    fs_fat.o(.text.switch_fat) refers to fs_fat.o(.text.OUTLINED_FUNCTION_29) for OUTLINED_FUNCTION_29
    fs_fat.o(.ARM.exidx.text.switch_fat) refers to fs_fat.o(.text.switch_fat) for [Anonymous Symbol]
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.text.read_sector) for read_sector
    fs_fat.o(.text.j_find_rsvd) refers to fs_common.o(.text.get_u32) for get_u32
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.text.j_chk_rsvd) for j_chk_rsvd
    fs_fat.o(.text.j_find_rsvd) refers to fs_fat.o(.rodata..Lswitch.table.j_chk_rsvd) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.j_find_rsvd) refers to fs_fat.o(.text.j_find_rsvd) for [Anonymous Symbol]
    fs_fat.o(.text.j_chk_rsvd) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for OUTLINED_FUNCTION_12
    fs_fat.o(.text.j_chk_rsvd) refers to fs_fat.o(.text.alloc_table_read) for alloc_table_read
    fs_fat.o(.text.j_chk_rsvd) refers to fs_fat.o(.rodata..Lswitch.table.j_chk_rsvd) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.j_chk_rsvd) refers to fs_fat.o(.text.j_chk_rsvd) for [Anonymous Symbol]
    fs_fat.o(.text.alloc_table_write) refers to fs_fat.o(.text.get_fat_sect) for get_fat_sect
    fs_fat.o(.text.alloc_table_write) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.text.alloc_table_write) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    fs_fat.o(.text.alloc_table_write) refers to fs_common.o(.text.set_u32) for set_u32
    fs_fat.o(.text.alloc_table_write) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.text.alloc_table_write) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.ARM.exidx.text.alloc_table_write) refers to fs_fat.o(.text.alloc_table_write) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.get_fat_sect) refers to fs_fat.o(.text.get_fat_sect) for [Anonymous Symbol]
    fs_fat.o(.text.write_sector) refers to fs_config.o(.text.fsj_write) for fsj_write
    fs_fat.o(.ARM.exidx.text.write_sector) refers to fs_fat.o(.text.write_sector) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.name_strip) refers to fs_fat.o(.text.name_strip) for [Anonymous Symbol]
    fs_fat.o(.text.name_analyse) refers to fs_fat.o(.text.char_validate) for char_validate
    fs_fat.o(.ARM.exidx.text.name_analyse) refers to fs_fat.o(.text.name_analyse) for [Anonymous Symbol]
    fs_fat.o(.text.frec_find_elink) refers to fs_fat.o(.text.name_hash) for name_hash
    fs_fat.o(.text.frec_find_elink) refers to fs_config.o(.text.elink_scan) for elink_scan
    fs_fat.o(.text.frec_find_elink) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for OUTLINED_FUNCTION_15
    fs_fat.o(.text.frec_find_elink) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for OUTLINED_FUNCTION_14
    fs_fat.o(.ARM.exidx.text.frec_find_elink) refers to fs_fat.o(.text.frec_find_elink) for [Anonymous Symbol]
    fs_fat.o(.text.frec_find) refers to fs_config.o(.text.elink_cmd) for elink_cmd
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.entry_pos_comp) for entry_pos_comp
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.entry_type) for entry_type
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.lfn_char_cnt) for lfn_char_cnt
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.long_ent_hash) for long_ent_hash
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.sn_chksum) for sn_chksum
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.sfn_extract) for sfn_extract
    fs_fat.o(.text.frec_find) refers to fs_common.o(.text.fs_strncasecmp) for fs_strncasecmp
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.text.short_ent_hash) for short_ent_hash
    fs_fat.o(.text.frec_find) refers to fs_config.o(.text.elink_insert) for elink_insert
    fs_fat.o(.text.frec_find) refers to fs_fat.o(.rodata.ChIndex) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.frec_find) refers to fs_fat.o(.text.frec_find) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.char_validate) refers to fs_fat.o(.text.char_validate) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.entry_pos_comp) refers to fs_fat.o(.text.entry_pos_comp) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.entry_type) refers to fs_fat.o(.text.entry_type) for [Anonymous Symbol]
    fs_fat.o(.text.lfn_char_cnt) refers to fs_fat.o(.rodata.ChIndex) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.lfn_char_cnt) refers to fs_fat.o(.text.lfn_char_cnt) for [Anonymous Symbol]
    fs_fat.o(.text.long_ent_hash) refers to fs_fat.o(.text.fat_crc32) for fat_crc32
    fs_fat.o(.text.long_ent_hash) refers to fs_fat.o(.rodata.ChIndex) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.long_ent_hash) refers to fs_fat.o(.text.long_ent_hash) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.sn_chksum) refers to fs_fat.o(.text.sn_chksum) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.sfn_extract) refers to fs_fat.o(.text.sfn_extract) for [Anonymous Symbol]
    fs_fat.o(.text.short_ent_hash) refers to fs_fat.o(.text.sfn_extract) for sfn_extract
    fs_fat.o(.text.short_ent_hash) refers to fs_fat.o(.text.fat_crc32) for fat_crc32
    fs_fat.o(.ARM.exidx.text.short_ent_hash) refers to fs_fat.o(.text.short_ent_hash) for [Anonymous Symbol]
    fs_fat.o(.text.fat_crc32) refers to fs_fat.o(.rodata.fat_crc32.crc32_table) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.fat_crc32) refers to fs_fat.o(.text.fat_crc32) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to fs_fat.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_1) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to fs_fat.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_2) refers to fs_common.o(.text.set_u16) for set_u16
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to fs_fat.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_3) refers to rt_memclr.o(.text) for __aeabi_memclr
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to fs_fat.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_4) refers to fs_fat.o(.text.frec_next) for frec_next
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to fs_fat.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_5) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to fs_fat.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_6) refers to fs_fat.o(.text.path_open) for path_open
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to fs_fat.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_7) refers to fs_fat.o(.text.OUTLINED_FUNCTION_7) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_8) refers to fs_fat.o(.text.OUTLINED_FUNCTION_8) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_9) refers to fs_fat.o(.text.OUTLINED_FUNCTION_9) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_10) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_10) refers to fs_fat.o(.text.OUTLINED_FUNCTION_10) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_11) refers to fs_fat.o(.text.extract_clus) for extract_clus
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_11) refers to fs_fat.o(.text.OUTLINED_FUNCTION_11) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_12) refers to fs_fat.o(.text.OUTLINED_FUNCTION_12) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_13) refers to fs_fat.o(.text.clus_to_sect) for clus_to_sect
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_13) refers to fs_fat.o(.text.OUTLINED_FUNCTION_13) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_14) refers to fs_fat.o(.text.entry_read) for entry_read
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_14) refers to fs_fat.o(.text.OUTLINED_FUNCTION_14) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_15) refers to fs_fat.o(.text.entry_pos_inc) for entry_pos_inc
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_15) refers to fs_fat.o(.text.OUTLINED_FUNCTION_15) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_16) refers to fs_config.o(.text.elink_dir) for elink_dir
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_16) refers to fs_fat.o(.text.OUTLINED_FUNCTION_16) for [Anonymous Symbol]
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_17) refers to fs_fat.o(.text.OUTLINED_FUNCTION_17) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_18) refers to fs_fat.o(.text.path_validate) for path_validate
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_18) refers to fs_fat.o(.text.OUTLINED_FUNCTION_18) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_19) refers to fs_fat.o(.text.write_cache) for write_cache
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_19) refers to fs_fat.o(.text.OUTLINED_FUNCTION_19) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_20) refers to fs_fat.o(.text.fsinfo_write) for fsinfo_write
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_20) refers to fs_fat.o(.text.OUTLINED_FUNCTION_20) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_21) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_21) refers to fs_fat.o(.text.OUTLINED_FUNCTION_21) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_22) refers to fs_fat.o(.text.path_init) for path_init
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_22) refers to fs_fat.o(.text.OUTLINED_FUNCTION_22) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_23) refers to fs_fat.o(.text.fat_vol_chk) for fat_vol_chk
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_23) refers to fs_fat.o(.text.OUTLINED_FUNCTION_23) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_24) refers to fs_fat.o(.text.find_param) for find_param
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_24) refers to fs_fat.o(.text.OUTLINED_FUNCTION_24) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_25) refers to fs_fat.o(.text.frec_delete) for frec_delete
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_25) refers to fs_fat.o(.text.OUTLINED_FUNCTION_25) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_26) refers to fs_fat.o(.text.fsinfo_write) for fsinfo_write
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_26) refers to fs_fat.o(.text.OUTLINED_FUNCTION_26) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_27) refers to fs_common.o(.text.get_u16) for get_u16
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_27) refers to fs_fat.o(.text.OUTLINED_FUNCTION_27) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_28) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_28) refers to fs_fat.o(.text.OUTLINED_FUNCTION_28) for [Anonymous Symbol]
    fs_fat.o(.text.OUTLINED_FUNCTION_29) refers to fs_fat.o(.text.cache_fat) for cache_fat
    fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_29) refers to fs_fat.o(.text.OUTLINED_FUNCTION_29) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryInitializeLib) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_mem.o(.text.USBH_MemoryInitializeLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_ptr) for usbh_mem_pool_ptr
    usbh_lib_mem.o(.text.USBH_MemoryInitializeLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr) for usbh_mem_pool_size_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryInitializeLib) refers to usbh_lib_mem.o(.text.USBH_MemoryInitializeLib) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib) refers to rt_memclr.o(.text) for __aeabi_memclr
    usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_ptr) for usbh_mem_pool_ptr
    usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr) for usbh_mem_pool_size_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryUninitializeLib) refers to usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryGetPoolSize) refers to usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr) for usbh_mem_pool_size_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryGetPoolSize) refers to usbh_lib_mem.o(.text.USBH_MemoryGetPoolSize) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryIsInPool) refers to usbh_config_0.o(.rodata.usbh_mem_pool_ptr) for usbh_mem_pool_ptr
    usbh_lib_mem.o(.text.USBH_MemoryIsInPool) refers to usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr) for usbh_mem_pool_size_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryIsInPool) refers to usbh_lib_mem.o(.text.USBH_MemoryIsInPool) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryAllocateLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_ptr) for usbh_mem_pool_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryAllocateLib) refers to usbh_lib_mem.o(.text.USBH_MemoryAllocateLib) for [Anonymous Symbol]
    usbh_lib_mem.o(.text.USBH_MemoryFreeLib) refers to usbh_config_0.o(.rodata.usbh_mem_pool_ptr) for usbh_mem_pool_ptr
    usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryFreeLib) refers to usbh_lib_mem.o(.text.USBH_MemoryFreeLib) for [Anonymous Symbol]
    fs_time.o(.ARM.exidx.text.fs_get_time) refers to fs_time.o(.text.fs_get_time) for [Anonymous Symbol]
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    tolower.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fread.o(.text) refers to fgetc_locked.o(.text) for fgetc
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_threads.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fclose_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fclose_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fclose_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fgetc.o(i.fgetc) refers to filbuf.o(.text) for __filbuf_byte
    fseek.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(.text._sys_write) for _sys_write
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fgetc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fgetc_locked.o(.text) refers to fgetc.o(i.fgetc) for _fgetc$unlocked
    fgetc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    filbuf.o(.text) refers to retarget_io.o(.text._sys_read) for _sys_read
    filbuf.o(.text) refers to stdio.o(.text) for _seterr
    filbuf.o(.text) refers to flushlinebuffered_locked.o(.text) for _flushlinebuffered
    filbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    filbuf.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_threads.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_threads.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    filbuf_fwide.o(.text) refers to filbuf.o(.text) for __filbuf
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f429xx.o(.text) for __user_initial_stackheap
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    freadfast.o(.text) refers to filbuf.o(.text) for _readbuf
    freadfast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fread_bytes_avail.o(.text) refers to filbuf.o(.text) for __filbuf_byte
    fread_bytes_avail.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    flushlinebuffered.o(.text) refers to fflush_locked.o(.text) for _do_fflush
    flushlinebuffered.o(.text) refers to stdio_streams.o(.bss) for __stdin
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    freadfast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    freadfast_locked.o(.text) refers to filbuf.o(.text) for _readbuf
    freadfast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    freadfast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fread_bytes_avail_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fread_bytes_avail_locked.o(.text) refers to filbuf.o(.text) for __filbuf_byte
    fread_bytes_avail_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fread_bytes_avail_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers to fflush_locked.o(.text) for _do_fflush
    flushlinebuffered_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    flushlinebuffered_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    flushlinebuffered_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    fs_time.o(.ARM.RL_ARM1) refers to fs_time.o(.ARM.RL_ARM2) for .ARM.RL_ARM2
    fs_time.o(.ARM.RL_ARM2) refers to fs_time.o(.ARM.RL_ARM3) for .ARM.RL_ARM3
    fs_time.o(.ARM.RL_ARM3) refers to fs_time.o(.ARM.RL_ARM4) for .ARM.RL_ARM4
    fs_time.o(.ARM.RL_ARM4) refers to fs_time.o(.ARM.RL_ARM5) for .ARM.RL_ARM5
    fs_time.o(.ARM.RL_ARM5) refers to fs_time.o(.ARM.RL_ARM6) for .ARM.RL_ARM6
    fs_time.o(.ARM.RL_ARM6) refers to fs_time.o(.ARM.RL_ARM1) for .ARM.RL_ARM1


==============================================================================

Removing Unused input sections from the image.

    Removing timer.o(.text), (0 bytes).
    Removing timer.o(.ARM.exidx.text.Init_Timers), (8 bytes).
    Removing timer.o(.ARM.exidx.text.Timer1_Callback), (8 bytes).
    Removing timer.o(.ARM.exidx.text.Timer2_Callback), (8 bytes).
    Removing thread.o(.text), (0 bytes).
    Removing thread.o(.ARM.exidx.text.Init_Thread), (8 bytes).
    Removing thread.o(.ARM.exidx.text.Thread), (8 bytes).
    Removing usbh_msc.o(.text), (0 bytes).
    Removing usbh_msc.o(.text.USBH_MSC_DriveGetMediaStatus), (56 bytes).
    Removing usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveGetMediaStatus), (8 bytes).
    Removing usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveMount), (8 bytes).
    Removing usbh_msc.o(.text.USBH_MSC_DriveUnmount), (70 bytes).
    Removing usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveUnmount), (8 bytes).
    Removing usbh_msc.o(.text.USBH_MSC_DriveGetCapacity), (98 bytes).
    Removing usbh_msc.o(.ARM.exidx.text.USBH_MSC_DriveGetCapacity), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing main.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_SPI5_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.MX_USB_OTG_HS_HCD_Init), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing stm32f4xx_it.o(.text), (0 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f4xx_it.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing irq_armv7m.o(.rodata), (2 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (84 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (106 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_evflags.o(.text), (0 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsNew), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsException), (20 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_evflags.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGetName), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGetName), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsSet), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsSet), (106 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsClear), (94 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsClear), (96 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsGet), (72 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsGet), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsWait), (126 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.isrRtxEventFlagsWait), (138 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.isrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osEventFlagsDelete), (86 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsNew), (320 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsNew), (8 bytes).
    Removing rtx_evflags.o(.text.IsEventFlagsPtrValid), (34 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.IsEventFlagsPtrValid), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsPostProcess), (92 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsPostProcess), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsCheck), (124 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsCheck), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_all), (56 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_chk32_any), (52 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsId), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsId), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsSet), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxObject), (10 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_set32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsSet), (216 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsSet), (8 bytes).
    Removing rtx_evflags.o(.text.EventFlagsClear), (26 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.EventFlagsClear), (8 bytes).
    Removing rtx_evflags.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsWait), (214 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsWait), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_evflags.o(.text.svcRtxEventFlagsDelete), (124 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.svcRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evflags.o(.text.osRtxEventFlagsDestroy), (90 bytes).
    Removing rtx_evflags.o(.ARM.exidx.text.osRtxEventFlagsDestroy), (8 bytes).
    Removing rtx_evr.o(.text), (0 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockInit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockAlloc), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryBlockFree), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialize), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInitialized), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetInfo), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetInfo), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelInfoRetrieved), (64 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelInfoRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLocked), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlock), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelUnlocked), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelUnlocked), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelRestoreLock), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelRestoreLock), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelLockRestored), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelLockRestored), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspend), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelSuspended), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResume), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelResumed), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtect), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtect), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelProtected), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelProtected), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerCount), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelGetSysTimerFreq), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelErrorNotify), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxKernelDestroyClass), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxKernelDestroyClass), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetClass), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetZone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetZone), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetId), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetState), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetState), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetStackSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSetPriority), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPriorityUpdated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPriorityUpdated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetPriority), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetPriority), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadYield), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadYield), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspend), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspend), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspended), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspended), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResume), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResume), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetach), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetach), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadDetached), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDetached), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoin), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoin), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadJoinPending), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoinPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadJoined), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadBlocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadUnblocked), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPreempted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSwitched), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadExit), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminate), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdog), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFeedWatchdogDone), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFeedWatchdogDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadProtectPrivileged), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadPrivilegedProtected), (20 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadPrivilegedProtected), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadGetCount), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadEnumerate), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadEnumerate), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadSuspendClass), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadSuspendClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadResumeClass), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadResumeClass), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadTerminateZone), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadTerminateZone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadWatchdogExpired), (22 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadWatchdogExpired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClear), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsClearDone), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxThreadFlagsGet), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWait), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxThreadFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelay), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntil), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntil), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxDelayUntilStarted), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayUntilStarted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxDelayCompleted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCallback), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStart), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStarted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStop), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStop), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerStopped), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerStopped), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxTimerIsRunning), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerIsRunning), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxTimerDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsNew), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSet), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsSetDone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsSetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClear), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClear), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsClearDone), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsClearDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsGet), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsGet), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWait), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWait), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitPending), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitCompleted), (42 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsWaitNotCompleted), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsWaitNotCompleted), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxEventFlagsDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxEventFlagsDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMutexGetOwner), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexGetOwner), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMutexDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreError), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquirePending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquireTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreNotAcquired), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreReleased), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxSemaphoreGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDelete), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxSemaphoreDestroyed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolError), (24 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolNew), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolCreated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAlloc), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocPending), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocTimeout), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolAllocFailed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolAllocFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFree), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDeallocated), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDeallocated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolFreeFailed), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolFreeFailed), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCapacity), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetBlockSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolGetSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMemoryPoolDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMemoryPoolDestroyed), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueError), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueNew), (40 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNew), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueCreated), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetName), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetName), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePut), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueuePutTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInsertPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotInserted), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGet), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetPending), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetTimeout), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueRetrieved), (8 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueNotRetrieved), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCapacity), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetMsgSize), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetCount), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueGetSpace), (28 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueReset), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueReset), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueResetDone), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueResetDone), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDelete), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDelete), (8 bytes).
    Removing rtx_evr.o(.text.EvrRtxMessageQueueDestroyed), (26 bytes).
    Removing rtx_evr.o(.ARM.exidx.text.EvrRtxMessageQueueDestroyed), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.text.osRtxKernelBeforeInit), (2 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (118 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPrivileged), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (108 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (70 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (138 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.IsFault), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsFault), (8 bytes).
    Removing rtx_kernel.o(.text.IsSVCallIrq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsSVCallIrq), (8 bytes).
    Removing rtx_kernel.o(.text.IsPendSvIrq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsPendSvIrq), (8 bytes).
    Removing rtx_kernel.o(.text.IsTickIrq), (28 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.IsTickIrq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (132 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (68 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (72 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (130 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (76 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (58 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (22 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (94 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (74 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.KernelBlock), (50 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelBlock), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (80 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.GetPendSV), (18 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.ClrPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.ClrPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (238 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.KernelUnblock), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.KernelUnblock), (8 bytes).
    Removing rtx_kernel.o(.text.SetPendSV), (16 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.evr_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.user_perthread_libspace_free), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemHeadPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.MemBlockPtr), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_get), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_link_put), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.atomic_dec32), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsException), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mempool.o(.text.IsIrqMasked), (46 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (94 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.isrRtxMemoryPoolFree), (114 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.isrRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (80 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (86 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (640 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.IsMemoryPoolPtrValid), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.IsMemoryPoolPtrValid), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (68 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxObject), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolId), (10 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolId), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (158 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxThreadGetRunning), (12 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (162 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolDestroy), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolDestroy), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueId), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (114 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.isrRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (72 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (80 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (86 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (86 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.IsMessageQueuePtrValid), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_inc32), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_dec32_nz), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.atomic_wr8), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (298 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (124 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text.osRtxMessageQueueDestroy), (122 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueDestroy), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (72 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (72 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (78 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.IsMutexPtrValid), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexId), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (96 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerUnlock), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexDestroy), (8 bytes).
    Removing rtx_semaphore.o(.text), (0 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetName), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetName), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetName), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.isrRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.text.osSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.text.svcRtxSemaphoreGetCount), (72 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreGetCount), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreNew), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.IsSemaphorePtrValid), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphorePostProcess), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenDecrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreId), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreAcquire), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.SemaphoreTokenIncrement), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreRelease), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.svcRtxSemaphoreDelete), (8 bytes).
    Removing rtx_semaphore.o(.ARM.exidx.text.osRtxSemaphoreDestroy), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_get), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxEventFlagsObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSemaphoreObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMemoryPoolObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxMessageObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.isr_queue_put), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.SetPendSV), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_dec16_nz), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lim), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.atomic_inc16_lt), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxMutexObject), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.StackOffsetR0), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.SetPrivileged), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxKernelGetState), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (78 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (100 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.IsTickIrq), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsTickIrq), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (132 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (126 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.IsFault), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsFault), (8 bytes).
    Removing rtx_thread.o(.text.IsSVCallIrq), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsSVCallIrq), (8 bytes).
    Removing rtx_thread.o(.text.IsPendSvIrq), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsPendSvIrq), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminateZone), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.isrRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (86 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsThreadPtrValid), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.xPSR_InitVal), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_all), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_chk32_any), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadState), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (164 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadPriority), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (90 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (252 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (120 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (144 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (62 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (234 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (14 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (10 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (310 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_set32), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.ThreadFlagsClear), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.atomic_clr32), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.atomic_clr32), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsException), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (86 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (78 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadGetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerUnlink), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxThreadSetRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.IsTimerPtrValid), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerId), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (110 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (104 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerDestroy), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing otg_hs_stm32f4xx.o(.text), (0 bytes).
    Removing otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_IRQHandler), (8 bytes).
    Removing otg_hs_stm32f4xx.o(.text.OTG_HS_PinsConfigure), (10 bytes).
    Removing otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinsConfigure), (8 bytes).
    Removing otg_hs_stm32f4xx.o(.text.OTG_HS_PinsUnconfigure), (10 bytes).
    Removing otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinsUnconfigure), (8 bytes).
    Removing otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinVbusOnOff), (8 bytes).
    Removing otg_hs_stm32f4xx.o(.text.OTG_HS_PinGetOC), (4 bytes).
    Removing otg_hs_stm32f4xx.o(.ARM.exidx.text.OTG_HS_PinGetOC), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.text), (0 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_HS_IRQ), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_HW_StartTransfer), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_GetAddressFromIndex), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetVersion), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetCapabilities), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_Initialize), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_Uninitialize), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PowerControl), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortVbusOnOff), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortReset), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortSuspend), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortResume), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PortGetState), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeCreate), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeModify), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeDelete), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeReset), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransfer), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransferGetResult), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_PipeTransferAbort), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_GetFrameNumber), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_GetIndexFromAddress), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_FindFree), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.ARM.exidx.text.USBH_CH_Disable), (8 bytes).
    Removing usbh_hs_stm32f4xx.o(.rodata.usbh_driver_version), (4 bytes).
    Removing usbh_hs_stm32f4xx.o(.rodata.usbh_driver_capabilities), (4 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_mdk-fs.o(.text), (0 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_open), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.fs_to_rt_rval), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_close), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_write), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_read), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_seek), (8 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_size), (8 bytes).
    Removing retarget_mdk-fs.o(.text.rt_fs_stat), (14 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_stat), (8 bytes).
    Removing retarget_mdk-fs.o(.text.rt_fs_remove), (50 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_remove), (8 bytes).
    Removing retarget_mdk-fs.o(.text.rt_fs_rename), (52 bytes).
    Removing retarget_mdk-fs.o(.ARM.exidx.text.rt_fs_rename), (8 bytes).
    Removing eventrecorder.o(.text), (0 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerSetup), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetFreq), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderTimerGetCount), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderInitialize), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.crc16_ccitt), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderEnable), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventGetTS), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordItem), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStart), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderDisable), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderStop), (74 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderStop), (8 bytes).
    Removing eventrecorder.o(.text.EventRecorderClockUpdate), (54 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecorderClockUpdate), (8 bytes).
    Removing eventrecorder.o(.text.EventRecordData), (388 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecordData), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventCheckFilter), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetContext), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord2), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.EventRecord4), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_cmp_xch_32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.GetRecordIndex), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.LockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.UnlockRecord), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsWritten), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.IncrementRecordsDumped), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc_32), (8 bytes).
    Removing eventrecorder.o(.ARM.exidx.text.atomic_inc_8), (8 bytes).
    Removing stm32f4xx_hal.o(.text), (0 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Init), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_InitTick), (112 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_InitTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DeInit), (82 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_MspDeInit), (2 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_IncTick), (26 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_IncTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTick), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickPrio), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickPrio), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SetTickFreq), (106 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetTickFreq), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetTickFreq), (8 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_Delay), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_SuspendTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_SuspendTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_ResumeTick), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_ResumeTick), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetHalVersion), (10 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetHalVersion), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetREVID), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetREVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetDEVID), (16 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetDEVID), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGSleepMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGSleepMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStopMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStopMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_EnableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_EnableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DBGMCU_DisableDBGStandbyMode), (18 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DBGMCU_DisableDBGStandbyMode), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableCompensationCell), (14 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableCompensationCell), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw0), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw0), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw1), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw1), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_GetUIDw2), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_GetUIDw2), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_EnableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_EnableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.text.HAL_DisableMemorySwappingBank), (12 bytes).
    Removing stm32f4xx_hal.o(.ARM.exidx.text.HAL_DisableMemorySwappingBank), (8 bytes).
    Removing stm32f4xx_hal.o(.bss.uwTick), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_DisableIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SystemReset), (4 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SystemReset), (38 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SystemReset), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Config), (16 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.SysTick_Config), (82 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.SysTick_Config), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Disable), (34 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Disable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_Enable), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_Enable), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_MPU_ConfigRegion), (158 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_MPU_ConfigRegion), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriorityGrouping), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPriority), (36 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.NVIC_DecodePriority), (118 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.NVIC_DecodePriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriority), (66 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPriority), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_SetPendingIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_SetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetPendingIRQ), (64 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_ClearPendingIRQ), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_ClearPendingIRQ), (48 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_ClearPendingIRQ), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_NVIC_GetActive), (20 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.__NVIC_GetActive), (64 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.__NVIC_GetActive), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_CLKSourceConfig), (52 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_CLKSourceConfig), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_cortex.o(.text.HAL_SYSTICK_Callback), (2 bytes).
    Removing stm32f4xx_hal_cortex.o(.ARM.exidx.text.HAL_SYSTICK_Callback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Init), (366 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Init), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CheckFifoParam), (240 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CheckFifoParam), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_CalcBaseAndBitshift), (86 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_CalcBaseAndBitshift), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_DeInit), (180 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_DeInit), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start), (142 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.DMA_SetConfig), (80 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.DMA_SetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Start_IT), (194 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Start_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort), (236 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_Abort_IT), (68 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_PollForTransfer), (506 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_PollForTransfer), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_IRQHandler), (798 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_RegisterCallback), (182 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_RegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_UnRegisterCallback), (210 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_UnRegisterCallback), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetState), (14 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetState), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.text.HAL_DMA_GetError), (12 bytes).
    Removing stm32f4xx_hal_dma.o(.ARM.exidx.text.HAL_DMA_GetError), (8 bytes).
    Removing stm32f4xx_hal_dma.o(.rodata.DMA_CalcBaseAndBitshift.flagBitshiftOffset), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart), (176 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.DMA_MultiBufferSetConfig), (68 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.DMA_MultiBufferSetConfig), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_MultiBufferStart_IT), (8244 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_MultiBufferStart_IT), (8 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.text.HAL_DMAEx_ChangeMemory), (44 bytes).
    Removing stm32f4xx_hal_dma_ex.o(.ARM.exidx.text.HAL_DMAEx_ChangeMemory), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text), (0 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_Init), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_DeInit), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_ReadPin), (46 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_ReadPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_WritePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_TogglePin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_LockPin), (86 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_LockPin), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_Callback), (10 bytes).
    Removing stm32f4xx_hal_gpio.o(.ARM.exidx.text.HAL_GPIO_EXTI_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text), (0 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Init), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_MspInit), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_MspInit), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Init), (336 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_Init), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_Halt), (92 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_Halt), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_DeInit), (64 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_DeInit), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_SubmitRequest), (684 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_SubmitRequest), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_IRQHandler), (472 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_Disconnect_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Disconnect_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HCD_Port_IRQHandler), (228 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_Port_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_SOF_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_SOF_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HCD_RXQLVL_IRQHandler), (328 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_RXQLVL_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HCD_HC_IN_IRQHandler), (1446 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_HC_IN_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HCD_HC_OUT_IRQHandler), (1460 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HCD_HC_OUT_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_WKUP_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_WKUP_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_Connect_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Connect_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortEnabled_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_PortEnabled_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_PortDisabled_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_PortDisabled_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_NotifyURBChange_Callback), (16 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_NotifyURBChange_Callback), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_Start), (86 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Start), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_Stop), (76 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_Stop), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_ResetPort), (18 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_ResetPort), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetState), (14 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetState), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetURBState), (28 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetURBState), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetXferCount), (26 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetXferCount), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_HC_GetState), (28 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_HC_GetState), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentFrame), (18 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetCurrentFrame), (8 bytes).
    Removing stm32f4xx_hal_hcd.o(.text.HAL_HCD_GetCurrentSpeed), (18 bytes).
    Removing stm32f4xx_hal_hcd.o(.ARM.exidx.text.HAL_HCD_GetCurrentSpeed), (8 bytes).
    Removing stm32f4xx_hal_pcd.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pcd_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DeInit), (26 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DeInit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableBkUpAccess), (30 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableBkUpAccess), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_ConfigPVD), (210 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_ConfigPVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisablePVD), (12 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisablePVD), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableWakeUpPin), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableWakeUpPin), (24 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableWakeUpPin), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSLEEPMode), (50 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSLEEPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTOPMode), (86 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnterSTANDBYMode), (36 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnterSTANDBYMode), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVD_IRQHandler), (42 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVD_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_PVDCallback), (2 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_PVDCallback), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSleepOnExit), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSleepOnExit), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_EnableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_EnableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr.o(.text.HAL_PWR_DisableSEVOnPend), (18 bytes).
    Removing stm32f4xx_hal_pwr.o(.ARM.exidx.text.HAL_PWR_DisableSEVOnPend), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableBkUpReg), (92 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableBkUpReg), (90 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableBkUpReg), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableFlashPowerDown), (12 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableFlashPowerDown), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_GetVoltageRange), (16 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_GetVoltageRange), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_ControlVoltageScaling), (318 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_ControlVoltageScaling), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnableOverDrive), (190 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_DisableOverDrive), (182 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_DisableOverDrive), (8 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.text.HAL_PWREx_EnterUnderDriveSTOPMode), (160 bytes).
    Removing stm32f4xx_hal_pwr_ex.o(.ARM.exidx.text.HAL_PWREx_EnterUnderDriveSTOPMode), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DeInit), (4 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_OscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_ClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetSysClockFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_MCOConfig), (208 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_MCOConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_EnableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_EnableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_DisableCSS), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_DisableCSS), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetHCLKFreq), (12 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetHCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK1Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK1Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetPCLK2Freq), (34 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetPCLK2Freq), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetOscConfig), (320 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetOscConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetClockConfig), (84 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_GetClockConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_NMI_IRQHandler), (40 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_NMI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_rcc.o(.text.HAL_RCC_CSSCallback), (2 bytes).
    Removing stm32f4xx_hal_rcc.o(.ARM.exidx.text.HAL_RCC_CSSCallback), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text), (0 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_PeriphCLKConfig), (1056 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_PeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKConfig), (196 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKConfig), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_GetPeriphCLKFreq), (194 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_GetPeriphCLKFreq), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLI2S), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLI2S), (80 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLI2S), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_EnablePLLSAI), (182 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_EnablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCCEx_DisablePLLSAI), (86 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCCEx_DisablePLLSAI), (8 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.text.HAL_RCC_DeInit), (604 bytes).
    Removing stm32f4xx_hal_rcc_ex.o(.ARM.exidx.text.HAL_RCC_DeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text), (0 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Init), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DeInit), (86 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit), (644 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_EndRxTxTransaction), (164 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive), (560 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive), (870 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_EndRxTransaction), (228 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_EndRxTransaction), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_IT), (292 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_16BIT), (52 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_TxISR_8BIT), (52 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_TxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_IT), (342 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_IT), (348 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_16BIT), (54 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_RxISR_8BIT), (54 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_RxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_16BIT), (76 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_16BIT), (74 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_16BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesRxISR_8BIT), (76 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesRxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_2linesTxISR_8BIT), (74 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_2linesTxISR_8BIT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Transmit_DMA), (368 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Transmit_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitCplt), (166 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAError), (52 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Receive_DMA), (412 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Receive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TransmitReceive_DMA), (530 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TransmitReceive_DMA), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfReceiveCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAReceiveCplt), (162 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAHalfTransmitReceiveCplt), (22 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAHalfTransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATransmitReceiveCplt), (134 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATransmitReceiveCplt), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort), (496 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortTx_ISR), (40 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_AbortRx_ISR), (140 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_AbortRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_Abort_IT), (548 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_Abort_IT), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMATxAbortCallback), (232 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMATxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMARxAbortCallback), (192 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMARxAbortCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_AbortCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAPause), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAPause), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAResume), (78 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAResume), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_DMAStop), (120 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_DMAStop), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_IRQHandler), (560 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_IRQHandler), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_DMAAbortOnError), (32 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_DMAAbortOnError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_ErrorCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_RxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_TxRxHalfCpltCallback), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetState), (14 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetState), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.HAL_SPI_GetError), (12 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.HAL_SPI_GetError), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRxTx_ISR), (246 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRxTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseRx_ISR), (124 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseRx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_CloseTx_ISR), (208 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_CloseTx_ISR), (8 bytes).
    Removing stm32f4xx_hal_spi.o(.text.SPI_WaitFlagStateUntilTimeout), (298 bytes).
    Removing stm32f4xx_hal_spi.o(.ARM.exidx.text.SPI_WaitFlagStateUntilTimeout), (8 bytes).
    Removing stm32f4xx_hal_tim.o(.text), (0 bytes).
    Removing stm32f4xx_hal_tim_ex.o(.text), (0 bytes).
    Removing stm32f4xx_ll_usb.o(.text), (0 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_CoreInit), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_CoreReset), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_SetTurnaroundTime), (442 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetTurnaroundTime), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EnableGlobalInt), (20 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EnableGlobalInt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DisableGlobalInt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetCurrentMode), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetMode), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DevInit), (706 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevInit), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_SetDevSpeed), (34 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetDevSpeed), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_FlushTxFifo), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_FlushRxFifo), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_GetDevSpeed), (76 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetDevSpeed), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ActivateEndpoint), (222 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateEndpoint), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ActivateDedicatedEndpoint), (220 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateDedicatedEndpoint), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DeactivateEndpoint), (312 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeactivateEndpoint), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DeactivateDedicatedEndpoint), (250 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeactivateDedicatedEndpoint), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EPStartXfer), (872 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPStartXfer), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_WritePacket), (130 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_WritePacket), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EP0StartXfer), (502 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EP0StartXfer), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EPStopXfer), (284 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPStopXfer), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadPacket), (180 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadPacket), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EPSetStall), (168 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPSetStall), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EPClearStall), (160 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EPClearStall), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_StopDevice), (158 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_StopDevice), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_SetDevAddress), (54 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_SetDevAddress), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DevConnect), (42 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevConnect), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DevDisconnect), (42 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DevDisconnect), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadInterrupts), (26 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadInterrupts), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadDevAllOutEpInterrupt), (36 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevAllOutEpInterrupt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadDevAllInEpInterrupt), (36 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevAllInEpInterrupt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadDevOutEPInterrupt), (46 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevOutEPInterrupt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ReadDevInEPInterrupt), (78 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ReadDevInEPInterrupt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ClearInterrupts), (20 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ClearInterrupts), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ActivateSetup), (44 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateSetup), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_EP0_OutStart), (158 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_EP0_OutStart), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HostInit), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_InitFSLSPClkSel), (100 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_InitFSLSPClkSel), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ResetPort), (74 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ResetPort), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DriveVbus), (104 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DriveVbus), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_GetHostSpeed), (30 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetHostSpeed), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_GetCurrentFrame), (20 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_GetCurrentFrame), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_HC_Init), (546 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_Init), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_HC_StartXfer), (630 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_StartXfer), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DoPing), (94 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DoPing), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_HC_ReadInterrupt), (20 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_ReadInterrupt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_HC_Halt), (416 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_HC_Halt), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_StopHost), (288 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_StopHost), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_ActivateRemoteWakeup), (42 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_ActivateRemoteWakeup), (8 bytes).
    Removing stm32f4xx_ll_usb.o(.text.USB_DeActivateRemoteWakeup), (28 bytes).
    Removing stm32f4xx_ll_usb.o(.ARM.exidx.text.USB_DeActivateRemoteWakeup), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.text), (0 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_MspInit), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_SPI_MspInit), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.text.HAL_SPI_MspDeInit), (62 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_SPI_MspDeInit), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_HCD_MspInit), (8 bytes).
    Removing stm32f4xx_hal_msp.o(.ARM.exidx.text.HAL_HCD_MspDeInit), (8 bytes).
    Removing system_stm32f4xx.o(.text), (0 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f4xx.o(.text.SystemCoreClockUpdate), (302 bytes).
    Removing system_stm32f4xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f4xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing fs_config.o(.text), (0 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_new), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_acquire), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_release), (8 bytes).
    Removing fs_config.o(.text.fs_mutex_delete), (32 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_mutex_delete), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_rtos_tick_freq), (8 bytes).
    Removing fs_config.o(.text.fs_set_rtos_delay), (30 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_set_rtos_delay), (8 bytes).
    Removing fs_config.o(.text.fs_get_sys_tick), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_sys_tick), (8 bytes).
    Removing fs_config.o(.text.fs_get_sys_tick_us), (40 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_get_sys_tick_us), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_config), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fs_config_usb), (8 bytes).
    Removing fs_config.o(.text.fdelete), (20 bytes).
    Removing fs_config.o(.ARM.exidx.text.fdelete), (8 bytes).
    Removing fs_config.o(.text.$Sub$$fflush), (44 bytes).
    Removing fs_config.o(.ARM.exidx.text.$Sub$$fflush), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_handle_get), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_init), (8 bytes).
    Removing fs_config.o(.text.efs_uninit), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_uninit), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_mount), (8 bytes).
    Removing fs_config.o(.text.efs_unmount), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_unmount), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_open), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_close), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_read), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_write), (8 bytes).
    Removing fs_config.o(.text.efs_flush), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_flush), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_flen), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_seek), (8 bytes).
    Removing fs_config.o(.text.efs_ffind), (12 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_ffind), (8 bytes).
    Removing fs_config.o(.text.efs_rename), (14 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_rename), (8 bytes).
    Removing fs_config.o(.text.efs_delete), (12 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_delete), (8 bytes).
    Removing fs_config.o(.text.efs_analyse), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_analyse), (8 bytes).
    Removing fs_config.o(.text.efs_check), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_check), (8 bytes).
    Removing fs_config.o(.text.efs_format), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_format), (8 bytes).
    Removing fs_config.o(.text.efs_free), (14 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_free), (8 bytes).
    Removing fs_config.o(.text.efs_defrag), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_defrag), (8 bytes).
    Removing fs_config.o(.text.efs_info), (12 bytes).
    Removing fs_config.o(.ARM.exidx.text.efs_info), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_jour_init), (8 bytes).
    Removing fs_config.o(.text.fat_jour_prep), (10 bytes).
    Removing fs_config.o(.ARM.exidx.text.fat_jour_prep), (8 bytes).
    Removing fs_config.o(.text.fsj_set_space), (14 bytes).
    Removing fs_config.o(.ARM.exidx.text.fsj_set_space), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.fsj_write), (8 bytes).
    Removing fs_config.o(.text.fsj_init), (12 bytes).
    Removing fs_config.o(.ARM.exidx.text.fsj_init), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_init), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_dir), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_cmd), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_insert), (8 bytes).
    Removing fs_config.o(.text.elink_delete), (12 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_delete), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.elink_scan), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_Init), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_UnInit), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_RdSect), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_WrSect), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_RdInfo), (8 bytes).
    Removing fs_config.o(.ARM.exidx.text.usb0_DevCtrl), (8 bytes).
    Removing usbh_config_0.o(.text), (0 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_ThreadCreate), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_ThreadGetHandle), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_ThreadTerminate), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_Delay), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_MsToTick), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_TimerCreate), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_TimerStart), (8 bytes).
    Removing usbh_config_0.o(.text.USBH_TimerStop), (52 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_TimerStop), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_TimerDelete), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_ThreadFlagsSet), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_ThreadFlagsWait), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_MutexCreate), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_MutexAcquire), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_MutexRelease), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_MutexDelete), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreCreate), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreAcquire), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreRelease), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_SemaphoreDelete), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH0_SignalPortEvent), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH0_SignalPipeEvent), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_HID_Configure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_HID_Unconfigure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_HID_Initialize_Lib), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_HID_Uninitialize_Lib), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Configure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Unconfigure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Initialize_Lib), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CDC_Uninitialize_Lib), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Configure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Unconfigure), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Initialize), (8 bytes).
    Removing usbh_config_0.o(.ARM.exidx.text.USBH_CustomClass_Uninitialize), (8 bytes).
    Removing usbh_config_0.o(.bss.usbh0_hci_hcd_ptr), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh0_transfer_num), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh0_hc), (2 bytes).
    Removing usbh_config_0.o(.data.usbh0_hc_ptr), (4 bytes).
    Removing usbh_config_0.o(.bss.usbh0_ohci_ptr), (4 bytes).
    Removing usbh_config_0.o(.bss.usbh0_ehci_ptr), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh_hc_msk), (1 bytes).
    Removing usbh_config_0.o(.rodata.usbh_dcd_num), (1 bytes).
    Removing usbh_config_0.o(.rodata.usbh_hid_num), (1 bytes).
    Removing usbh_config_0.o(.rodata.usbh_cdc_num), (1 bytes).
    Removing usbh_config_0.o(.rodata.usbh_cls_num), (1 bytes).
    Removing usbh_config_0.o(.rodata.usbh_hci_hcd_ptr), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh_hc_ptr), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh_ohci_ptr), (4 bytes).
    Removing usbh_config_0.o(.rodata.usbh_ehci_ptr), (4 bytes).
    Removing fs_mapi.o(.text), (0 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fs_config_evr), (8 bytes).
    Removing fs_mapi.o(.text.fversion), (12 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fversion), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.finit), (8 bytes).
    Removing fs_mapi.o(.text.funinit), (60 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.funinit), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fmount), (8 bytes).
    Removing fs_mapi.o(.text.funmount), (76 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.funmount), (8 bytes).
    Removing fs_mapi.o(.text.ffind), (240 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.ffind), (8 bytes).
    Removing fs_mapi.o(.text._fdelete_legacy), (84 bytes).
    Removing fs_mapi.o(.ARM.exidx.text._fdelete_legacy), (8 bytes).
    Removing fs_mapi.o(.text._fdelete), (88 bytes).
    Removing fs_mapi.o(.ARM.exidx.text._fdelete), (8 bytes).
    Removing fs_mapi.o(.text.frename), (88 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.frename), (8 bytes).
    Removing fs_mapi.o(.text.fanalyse), (64 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fanalyse), (8 bytes).
    Removing fs_mapi.o(.text.fcheck), (60 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fcheck), (8 bytes).
    Removing fs_mapi.o(.text.fformat), (80 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fformat), (8 bytes).
    Removing fs_mapi.o(.text.ffree), (84 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.ffree), (8 bytes).
    Removing fs_mapi.o(.text.fdefrag), (60 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fdefrag), (8 bytes).
    Removing fs_mapi.o(.text.fattrib), (156 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fattrib), (8 bytes).
    Removing fs_mapi.o(.text.fvol), (72 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fvol), (8 bytes).
    Removing fs_mapi.o(.text.fmedia), (60 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fmedia), (8 bytes).
    Removing fs_mapi.o(.text.finfo), (80 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.finfo), (8 bytes).
    Removing fs_mapi.o(.text.fchdir), (68 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fchdir), (8 bytes).
    Removing fs_mapi.o(.text.fchdrive), (34 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fchdrive), (8 bytes).
    Removing fs_mapi.o(.text.fpwd), (72 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fpwd), (8 bytes).
    Removing fs_mapi.o(.text.fmkdir), (68 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.fmkdir), (8 bytes).
    Removing fs_mapi.o(.text.frmdir), (72 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.frmdir), (8 bytes).
    Removing fs_mapi.o(.text.ftime_set), (88 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.ftime_set), (8 bytes).
    Removing fs_mapi.o(.text.ftime_get), (88 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.ftime_get), (8 bytes).
    Removing fs_mapi.o(.text.OUTLINED_FUNCTION_0), (10 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing fs_mapi.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing fs_mapi.o(.text.OUTLINED_FUNCTION_5), (6 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing fs_mapi.o(.text.OUTLINED_FUNCTION_6), (10 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_7), (8 bytes).
    Removing fs_mapi.o(.text.OUTLINED_FUNCTION_8), (10 bytes).
    Removing fs_mapi.o(.ARM.exidx.text.OUTLINED_FUNCTION_8), (8 bytes).
    Removing fs_sys.o(.text), (0 bytes).
    Removing fs_sys.o(.text.__sys_open), (50 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_open), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_open), (8 bytes).
    Removing fs_sys.o(.text.__sys_close), (4 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_close), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_close), (8 bytes).
    Removing fs_sys.o(.text.__sys_write), (24 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_write), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_write), (8 bytes).
    Removing fs_sys.o(.text.__sys_read), (32 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_read), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_read), (8 bytes).
    Removing fs_sys.o(.text.__sys_ensure), (4 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_ensure), (8 bytes).
    Removing fs_sys.o(.text.fs_flush), (104 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_flush), (8 bytes).
    Removing fs_sys.o(.text.__sys_flen), (16 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_flen), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_size), (8 bytes).
    Removing fs_sys.o(.text.__sys_seek), (18 bytes).
    Removing fs_sys.o(.ARM.exidx.text.__sys_seek), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_seek), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fopen), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fclose), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fwrite), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fread), (8 bytes).
    Removing fs_sys.o(.text.fs_fflush), (4 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fflush), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fseek), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.fs_fsize), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing fs_sys.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing usbh_lib_core.o(.text), (0 bytes).
    Removing usbh_lib_core.o(.text.USBH_GetVersion), (12 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_GetVersion), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Initialize), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.CheckController), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryInitialize), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Uninitialize), (400 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Uninitialize), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_UninitializeDevices), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_MemoryUninitialize), (30 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryUninitialize), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Port_Suspend), (26 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Port_Suspend), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Port_Resume), (26 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Port_Resume), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetController), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetController), (8 bytes).
    Removing usbh_lib_core.o(.text.CheckDeviceInstanceConfigured), (48 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.CheckDeviceInstanceConfigured), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetPort), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetPort), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetStatus), (4 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetStatus), (8 bytes).
    Removing usbh_lib_core.o(.text.CheckDeviceInstance), (52 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.CheckDeviceInstance), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetSpeed), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetSpeed), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetAddress), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetAddress), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetVID), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetVID), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetPID), (28 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetPID), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_Device_GetStringDescriptor), (40 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Device_GetStringDescriptor), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetDescriptor), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Notify), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_GetDevice), (72 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_GetDevice), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_GetStatus), (88 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_GetStatus), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_Configure), (4 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Configure), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_Unconfigure), (4 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Unconfigure), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_Initialize), (4 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Initialize), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_CustomClass_Uninitialize), (4 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_CustomClass_Uninitialize), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeCreate), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_GetFree_PIPE), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_PipeRegisterCallback), (34 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeRegisterCallback), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.CheckPipe), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_PipeUpdate), (52 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeUpdate), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeDelete), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_PipeReset), (36 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReset), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReceive), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryAllocate), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_MemoryFree), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_PipeReceiveGetResult), (26 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeReceiveGetResult), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeSend), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeDoPing), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_PipeSendGetResult), (24 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeSendGetResult), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_PipeAbort), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_ControlTransfer), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_ClearFeature), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_GetStatus), (152 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetStatus), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_SetFeature), (84 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetFeature), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetAddress), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_SetDescriptor), (104 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetDescriptor), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_GetConfiguration), (84 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetConfiguration), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetConfiguration), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_GetInterface), (76 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_GetInterface), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_SetInterface), (108 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SetInterface), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_DeviceRequest_SynchFrame), (116 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_DeviceRequest_SynchFrame), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Get_Thread_ID_of_Pipe), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Get_PipeCallback_of_Pipe), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH_RecoverDevice), (116 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_RecoverDevice), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_ConnectDebounce), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Core_Thread), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_Engine), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH0_Core_Thread), (6 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH0_Core_Thread), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH1_Core_Thread), (6 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH1_Core_Thread), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH2_Core_Thread), (6 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH2_Core_Thread), (8 bytes).
    Removing usbh_lib_core.o(.text.USBH3_Core_Thread), (6 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH3_Core_Thread), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.USBH_RecoveryEnumerateDevice), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing usbh_lib_core.o(.text.OUTLINED_FUNCTION_2), (44 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_7), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_8), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_9), (8 bytes).
    Removing usbh_lib_core.o(.text.OUTLINED_FUNCTION_10), (10 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_10), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_11), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_12), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_13), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_14), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_15), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_16), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_17), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_18), (8 bytes).
    Removing usbh_lib_core.o(.text.OUTLINED_FUNCTION_19), (18 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_19), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_20), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_21), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_22), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_23), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_24), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_25), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_26), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_27), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_28), (8 bytes).
    Removing usbh_lib_core.o(.ARM.exidx.text.OUTLINED_FUNCTION_29), (8 bytes).
    Removing usbh_lib_drv.o(.text), (0 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetVersion), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetCapabilities), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverInitialize), (8 bytes).
    Removing usbh_lib_drv.o(.text.USBH_DriverUninitialize), (84 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverUninitialize), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPowerControl), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortVbusOnOff), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortReset), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortSuspend), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortResume), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPortGetState), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeCreate), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeModify), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeDelete), (8 bytes).
    Removing usbh_lib_drv.o(.text.USBH_DriverPipeReset), (80 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeReset), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransfer), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransferGetResult), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverPipeTransferAbort), (8 bytes).
    Removing usbh_lib_drv.o(.text.USBH_DriverGetFrameNumber), (64 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_DriverGetFrameNumber), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_SignalPortEvent), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.USBH_SignalPipeEvent), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing usbh_lib_drv.o(.ARM.exidx.text.OUTLINED_FUNCTION_7), (8 bytes).
    Removing usbh_lib_msc.o(.text), (0 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Initialize), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Uninitialize), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_GetDevice), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.CheckInstance), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_GetStatus), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Read), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_Read10), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Write), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_ReadCapacity), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Configure), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Unconfigure), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Initialize_Lib), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_TestUnitReady), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_SCSI_RequestSense), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.USBH_MSC_Uninitialize_Lib), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_Initialize), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_Uninitialize), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_ReadSectors), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_WriteSectors), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_ReadInfo), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.FS_USBH_MSC_DeviceCtrl), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing usbh_lib_msc.o(.ARM.exidx.text.OUTLINED_FUNCTION_7), (8 bytes).
    Removing fs_common.o(.text), (0 bytes).
    Removing fs_common.o(.ARM.exidx.text.fs_set_cdrive), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.fs_drive_id), (8 bytes).
    Removing fs_common.o(.text.fs_strpos), (22 bytes).
    Removing fs_common.o(.ARM.exidx.text.fs_strpos), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.fs_strncasecmp), (8 bytes).
    Removing fs_common.o(.text.fs_strmatch), (90 bytes).
    Removing fs_common.o(.ARM.exidx.text.fs_strmatch), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.get_u16), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.set_u16), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.get_u32), (8 bytes).
    Removing fs_common.o(.ARM.exidx.text.set_u32), (8 bytes).
    Removing fs_fat.o(.text), (0 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_handle_get), (8 bytes).
    Removing fs_fat.o(.text.fat_jour_init), (186 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_jour_init), (8 bytes).
    Removing fs_fat.o(.text.fat_jour_prep), (188 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_jour_prep), (8 bytes).
    Removing fs_fat.o(.text.j_rep_space), (50 bytes).
    Removing fs_fat.o(.ARM.exidx.text.j_rep_space), (8 bytes).
    Removing fs_fat.o(.text.j_mark_rsvd), (68 bytes).
    Removing fs_fat.o(.ARM.exidx.text.j_mark_rsvd), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_init), (8 bytes).
    Removing fs_fat.o(.text.fat_uninit), (40 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_uninit), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_mount), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_vol_chk), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fsinfo_write), (8 bytes).
    Removing fs_fat.o(.text.fat_unmount), (88 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_unmount), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_close), (8 bytes).
    Removing fs_fat.o(.text.fat_format), (1944 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_format), (8 bytes).
    Removing fs_fat.o(.text.find_param), (88 bytes).
    Removing fs_fat.o(.ARM.exidx.text.find_param), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.write_cache), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_open), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.path_validate), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.path_init), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.path_open), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.entry_pos_inc), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.file_locked), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.extract_clus), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.format_time), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.format_date), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.entry_flush), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.unlink_clus), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.path_create), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.entry_read), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.cache_fat), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_read), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.alloc_table_read), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.clus_to_sect), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.read_cache), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_write), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.alloc_clus), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.read_sector), (8 bytes).
    Removing fs_fat.o(.text.fat_flush), (60 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_flush), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_flen), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_seek), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.clear_clus), (8 bytes).
    Removing fs_fat.o(.text.fat_delete_l), (206 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_delete_l), (8 bytes).
    Removing fs_fat.o(.text.frec_delete_elink), (42 bytes).
    Removing fs_fat.o(.ARM.exidx.text.frec_delete_elink), (8 bytes).
    Removing fs_fat.o(.text.frec_delete), (114 bytes).
    Removing fs_fat.o(.ARM.exidx.text.frec_delete), (8 bytes).
    Removing fs_fat.o(.text.fat_delete), (472 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_delete), (8 bytes).
    Removing fs_fat.o(.text.frec_next), (528 bytes).
    Removing fs_fat.o(.ARM.exidx.text.frec_next), (8 bytes).
    Removing fs_fat.o(.text.fat_ffind), (232 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_ffind), (8 bytes).
    Removing fs_fat.o(.text.fat_rename), (388 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_rename), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.name_validate), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.name_hash), (8 bytes).
    Removing fs_fat.o(.text.fat_mkdir), (102 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_mkdir), (8 bytes).
    Removing fs_fat.o(.text.fat_rmdir), (408 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_rmdir), (8 bytes).
    Removing fs_fat.o(.text.fat_media), (34 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_media), (8 bytes).
    Removing fs_fat.o(.text.fat_info), (64 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_info), (8 bytes).
    Removing fs_fat.o(.text.fat_chdir), (192 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_chdir), (8 bytes).
    Removing fs_fat.o(.text.fat_pwd), (298 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_pwd), (8 bytes).
    Removing fs_fat.o(.text.fat_attrib), (132 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_attrib), (8 bytes).
    Removing fs_fat.o(.text.fat_free), (82 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_free), (8 bytes).
    Removing fs_fat.o(.text.fat_vol), (188 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_vol), (8 bytes).
    Removing fs_fat.o(.text.fat_time_set), (234 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_time_set), (8 bytes).
    Removing fs_fat.o(.text.fat_time_get), (192 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_time_get), (8 bytes).
    Removing fs_fat.o(.text.switch_fat), (36 bytes).
    Removing fs_fat.o(.ARM.exidx.text.switch_fat), (8 bytes).
    Removing fs_fat.o(.text.j_find_rsvd), (196 bytes).
    Removing fs_fat.o(.ARM.exidx.text.j_find_rsvd), (8 bytes).
    Removing fs_fat.o(.text.j_chk_rsvd), (76 bytes).
    Removing fs_fat.o(.ARM.exidx.text.j_chk_rsvd), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.alloc_table_write), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.get_fat_sect), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.write_sector), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.name_strip), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.name_analyse), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.frec_find_elink), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.frec_find), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.char_validate), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.entry_pos_comp), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.entry_type), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.lfn_char_cnt), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.long_ent_hash), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.sn_chksum), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.sfn_extract), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.short_ent_hash), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.fat_crc32), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_4), (12 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_6), (6 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_7), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_8), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_9), (10 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_9), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_10), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_11), (6 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_11), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_12), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_13), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_14), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_15), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_16), (12 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_16), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_17), (16 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_17), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_18), (6 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_18), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_19), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_20), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_21), (10 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_21), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_22), (10 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_22), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_23), (10 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_23), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_24), (6 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_24), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_25), (6 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_25), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_26), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_27), (8 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_28), (8 bytes).
    Removing fs_fat.o(.text.OUTLINED_FUNCTION_29), (10 bytes).
    Removing fs_fat.o(.ARM.exidx.text.OUTLINED_FUNCTION_29), (8 bytes).
    Removing fs_fat.o(.rodata.IniDevCfg), (130 bytes).
    Removing fs_fat.o(.rodata.str1.1), (3 bytes).
    Removing fs_fat.o(.rodata.str1.4), (12 bytes).
    Removing fs_fat.o(.rodata..Lswitch.table.j_chk_rsvd), (12 bytes).
    Removing fs_version.o(.text), (0 bytes).
    Removing fs_version.o(.rodata.fs_lib_version), (4 bytes).
    Removing usb_lib_ver.o(.text), (0 bytes).
    Removing usbh_lib_mem.o(.text), (0 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryInitializeLib), (8 bytes).
    Removing usbh_lib_mem.o(.text.USBH_MemoryUninitializeLib), (36 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryUninitializeLib), (8 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryGetPoolSize), (8 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryIsInPool), (8 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryAllocateLib), (8 bytes).
    Removing usbh_lib_mem.o(.ARM.exidx.text.USBH_MemoryFreeLib), (8 bytes).
    Removing fs_time.o(.text), (0 bytes).
    Removing fs_time.o(.ARM.exidx.text.fs_get_time), (8 bytes).
    Removing fs_time.o(.ARM.RL_ARM1), (82 bytes).
    Removing fs_time.o(.ARM.RL_ARM2), (76 bytes).
    Removing fs_time.o(.ARM.RL_ARM3), (45 bytes).
    Removing fs_time.o(.ARM.RL_ARM4), (65 bytes).
    Removing fs_time.o(.ARM.RL_ARM5), (82 bytes).
    Removing fs_time.o(.ARM.RL_ARM6), (77 bytes).

2141 unused section(s) (total 84085 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/ctype.c                          0x00000000   Number         0  tolower.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fread.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fgetc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fgetc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  filbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  freadfast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fread_bytes_avail.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flushlinebuffered.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  freadfast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fread_bytes_avail_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flushlinebuffered_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  filbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    EventRecorder.c                          0x00000000   Number         0  eventrecorder.o ABSOLUTE
    FS_Config.c                              0x00000000   Number         0  fs_config.o ABSOLUTE
    OTG_HS_STM32F4xx.c                       0x00000000   Number         0  otg_hs_stm32f4xx.o ABSOLUTE
    RTE/Device/STM32F429ZITx/startup_stm32f429xx.s 0x00000000   Number         0  startup_stm32f429xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    Thread.c                                 0x00000000   Number         0  thread.o ABSOLUTE
    Timer.c                                  0x00000000   Number         0  timer.o ABSOLUTE
    USBH_Config_0.c                          0x00000000   Number         0  usbh_config_0.o ABSOLUTE
    USBH_HS_STM32F4xx.c                      0x00000000   Number         0  usbh_hs_stm32f4xx.o ABSOLUTE
    USBH_MSC.c                               0x00000000   Number         0  usbh_msc.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_mapi.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_sys.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  usbh_lib_core.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  usbh_lib_drv.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  usbh_lib_msc.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_common.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_fat.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_version.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  usb_lib_ver.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  usbh_lib_mem.o ABSOLUTE
    c:\jenkins\workspace\MDK-Middleware\release\MW\Build\RL_ARM.s 0x00000000   Number         0  fs_time.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fs_common.c                              0x00000000   Number         0  fs_common.o ABSOLUTE
    fs_fat.c                                 0x00000000   Number         0  fs_fat.o ABSOLUTE
    fs_mapi.c                                0x00000000   Number         0  fs_mapi.o ABSOLUTE
    fs_sys.c                                 0x00000000   Number         0  fs_sys.o ABSOLUTE
    fs_time.c                                0x00000000   Number         0  fs_time.o ABSOLUTE
    fs_version.c                             0x00000000   Number         0  fs_version.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    retarget_mdk-fs.c                        0x00000000   Number         0  retarget_mdk-fs.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_evflags.c                            0x00000000   Number         0  rtx_evflags.o ABSOLUTE
    rtx_evr.c                                0x00000000   Number         0  rtx_evr.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_semaphore.c                          0x00000000   Number         0  rtx_semaphore.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    stm32f4xx_hal.c                          0x00000000   Number         0  stm32f4xx_hal.o ABSOLUTE
    stm32f4xx_hal_cortex.c                   0x00000000   Number         0  stm32f4xx_hal_cortex.o ABSOLUTE
    stm32f4xx_hal_dma.c                      0x00000000   Number         0  stm32f4xx_hal_dma.o ABSOLUTE
    stm32f4xx_hal_dma_ex.c                   0x00000000   Number         0  stm32f4xx_hal_dma_ex.o ABSOLUTE
    stm32f4xx_hal_gpio.c                     0x00000000   Number         0  stm32f4xx_hal_gpio.o ABSOLUTE
    stm32f4xx_hal_hcd.c                      0x00000000   Number         0  stm32f4xx_hal_hcd.o ABSOLUTE
    stm32f4xx_hal_msp.c                      0x00000000   Number         0  stm32f4xx_hal_msp.o ABSOLUTE
    stm32f4xx_hal_pcd.c                      0x00000000   Number         0  stm32f4xx_hal_pcd.o ABSOLUTE
    stm32f4xx_hal_pcd_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pcd_ex.o ABSOLUTE
    stm32f4xx_hal_pwr.c                      0x00000000   Number         0  stm32f4xx_hal_pwr.o ABSOLUTE
    stm32f4xx_hal_pwr_ex.c                   0x00000000   Number         0  stm32f4xx_hal_pwr_ex.o ABSOLUTE
    stm32f4xx_hal_rcc.c                      0x00000000   Number         0  stm32f4xx_hal_rcc.o ABSOLUTE
    stm32f4xx_hal_rcc_ex.c                   0x00000000   Number         0  stm32f4xx_hal_rcc_ex.o ABSOLUTE
    stm32f4xx_hal_spi.c                      0x00000000   Number         0  stm32f4xx_hal_spi.o ABSOLUTE
    stm32f4xx_hal_tim.c                      0x00000000   Number         0  stm32f4xx_hal_tim.o ABSOLUTE
    stm32f4xx_hal_tim_ex.c                   0x00000000   Number         0  stm32f4xx_hal_tim_ex.o ABSOLUTE
    stm32f4xx_it.c                           0x00000000   Number         0  stm32f4xx_it.o ABSOLUTE
    stm32f4xx_ll_usb.c                       0x00000000   Number         0  stm32f4xx_ll_usb.o ABSOLUTE
    system_stm32f4xx.c                       0x00000000   Number         0  system_stm32f4xx.o ABSOLUTE
    usb_lib_ver.c                            0x00000000   Number         0  usb_lib_ver.o ABSOLUTE
    usbh_lib_core.c                          0x00000000   Number         0  usbh_lib_core.o ABSOLUTE
    usbh_lib_drv.c                           0x00000000   Number         0  usbh_lib_drv.o ABSOLUTE
    usbh_lib_mem.c                           0x00000000   Number         0  usbh_lib_mem.o ABSOLUTE
    usbh_lib_msc.c                           0x00000000   Number         0  usbh_lib_msc.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    RESET                                    0x08000000   Section      428  startup_stm32f429xx.o(RESET)
    !!!main                                  0x080001ac   Section        8  __main.o(!!!main)
    !!!scatter                               0x080001b4   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000210   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x0800022c   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x08000230   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x0800024c   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800024e   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x08000252   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x08000252   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x08000252   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x0800025a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800025a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800025a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000011          0x0800025a   Section        6  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000260   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000014          0x08000260   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000014)
    .ARM.Collect$$libinit$$00000015          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800026c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000026          0x0800026c   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000026)
    .ARM.Collect$$libinit$$00000027          0x08000270   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x08000270   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000270   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000270   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x08000270   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x08000270   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000272   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000274   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x08000274   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x08000278   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000278   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000278   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000278   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x08000278   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x0800027c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800027c   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800027e   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800027e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800027e   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000284   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800028c   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000290   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000290   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000298   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800029a   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800029a   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800029e   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    [Anonymous Symbol]                       0x080002a4   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x080002cc   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x080002dc   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x080002ee   Number         0  irq_armv7m.o(.text)
    SVC_ContextSaveRegs                      0x08000326   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0800033c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x08000356   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x08000358   Number         0  irq_armv7m.o(.text)
    $v0                                      0x080003a4   Number         0  startup_stm32f429xx.o(.text)
    .text                                    0x080003a4   Section       64  startup_stm32f429xx.o(.text)
    .text                                    0x080003e4   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x080003e8   Section      240  lludivv7m.o(.text)
    .text                                    0x080004d8   Section        0  tolower.o(.text)
    .text                                    0x080004f2   Section        0  fclose.o(.text)
    .text                                    0x08000540   Section        0  fclose_locked.o(.text)
    .text                                    0x08000574   Section        0  fflush_locked.o(.text)
    _freopen_locked                          0x08000605   Thumb Code   180  fopen_locked.o(.text)
    .text                                    0x08000604   Section        0  fopen_locked.o(.text)
    .text                                    0x08000750   Section        0  strlen.o(.text)
    .text                                    0x0800078e   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000818   Section       68  rt_memclr.o(.text)
    .text                                    0x0800085c   Section       78  rt_memclr_w.o(.text)
    .text                                    0x080008b0   Section      124  strcmpv7em.o(.text)
    .text                                    0x0800092c   Section        0  heapauxi.o(.text)
    .text                                    0x08000934   Section        8  libspace.o(.text)
    .text                                    0x0800093c   Section       16  rt_ctype_table.o(.text)
    AlignUp                                  0x0800094d   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x0800094c   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x08000957   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x080009f2   Section        0  h1_free_threads.o(.text)
    .text                                    0x08000a68   Section        0  fseek.o(.text)
    .text                                    0x08000b60   Section        0  stdio.o(.text)
    .text                                    0x08000c68   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000ccc   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x08000cd6   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x08000ce0   Section        0  hguard.o(.text)
    .text                                    0x08000ce4   Section        0  init_alloc.o(.text)
    .text                                    0x08000d6e   Section        0  h1_init_threads.o(.text)
    .text                                    0x08000d80   Section        0  filbuf.o(.text)
    .text                                    0x08000fca   Section        0  ftell.o(.text)
    .text                                    0x0800100c   Section        0  initio_locked.o(.text)
    .text                                    0x080011d4   Section       74  sys_stackheap_outer.o(.text)
    AlignUpOffset                            0x0800121f   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x0800121e   Section        0  maybetermalloc2.o(.text)
    .text                                    0x0800121e   Section        0  h1_extend_threads.o(.text)
    .text                                    0x08001270   Section        0  setvbuf_locked.o(.text)
    .text                                    0x080012d8   Section        0  freadfast_locked.o(.text)
    .text                                    0x08001404   Section        0  flushlinebuffered_locked.o(.text)
    .text                                    0x08001470   Section        0  exit.o(.text)
    .text                                    0x08001482   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x08001490   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x0800149e   Section        2  use_no_semi.o(.text)
    .text                                    0x080014a0   Section        0  indicate_semi.o(.text)
    .text                                    0x080014a0   Section        0  term_alloc.o(.text)
    .text                                    0x080014b0   Section        0  defsig_exit.o(.text)
    .text                                    0x080014bc   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x080014f0   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x08001540   Section        0  sys_exit.o(.text)
    .text                                    0x0800154c   Section        0  h1_final_threads.o(.text)
    .text                                    0x08001556   Section        0  defsig_general.o(.text)
    .text                                    0x08001588   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08001598   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x080015b0   Section        0  stm32f4xx_it.o(.text.BusFault_Handler)
    CheckController                          0x080015b5   Thumb Code    32  usbh_lib_core.o(.text.CheckController)
    [Anonymous Symbol]                       0x080015b4   Section        0  usbh_lib_core.o(.text.CheckController)
    __arm_cp.2_1                             0x080015d4   Number         4  usbh_lib_core.o(.text.CheckController)
    CheckInstance                            0x080015d9   Thumb Code    52  usbh_lib_msc.o(.text.CheckInstance)
    [Anonymous Symbol]                       0x080015d8   Section        0  usbh_lib_msc.o(.text.CheckInstance)
    __arm_cp.3_0                             0x0800160c   Number         4  usbh_lib_msc.o(.text.CheckInstance)
    __arm_cp.3_1                             0x08001610   Number         4  usbh_lib_msc.o(.text.CheckInstance)
    CheckPipe                                0x08001615   Thumb Code    60  usbh_lib_core.o(.text.CheckPipe)
    [Anonymous Symbol]                       0x08001614   Section        0  usbh_lib_core.o(.text.CheckPipe)
    __arm_cp.30_0                            0x08001650   Number         4  usbh_lib_core.o(.text.CheckPipe)
    __arm_cp.30_1                            0x08001654   Number         4  usbh_lib_core.o(.text.CheckPipe)
    __arm_cp.30_2                            0x08001658   Number         4  usbh_lib_core.o(.text.CheckPipe)
    [Anonymous Symbol]                       0x0800165c   Section        0  stm32f4xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08001660   Section        0  stm32f4xx_it.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x0800166c   Section        0  main.o(.text.Error_Handler)
    EventCheckFilter                         0x08001675   Thumb Code    60  eventrecorder.o(.text.EventCheckFilter)
    [Anonymous Symbol]                       0x08001674   Section        0  eventrecorder.o(.text.EventCheckFilter)
    EventGetTS                               0x080016b1   Thumb Code   154  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x080016b0   Section        0  eventrecorder.o(.text.EventGetTS)
    [Anonymous Symbol]                       0x0800174c   Section        0  eventrecorder.o(.text.EventRecord2)
    [Anonymous Symbol]                       0x080017a8   Section        0  eventrecorder.o(.text.EventRecord4)
    EventRecordItem                          0x08001841   Thumb Code   240  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08001840   Section        0  eventrecorder.o(.text.EventRecordItem)
    [Anonymous Symbol]                       0x08001930   Section        0  eventrecorder.o(.text.EventRecorderDisable)
    [Anonymous Symbol]                       0x080019c4   Section        0  eventrecorder.o(.text.EventRecorderEnable)
    [Anonymous Symbol]                       0x08001a58   Section        0  eventrecorder.o(.text.EventRecorderInitialize)
    [Anonymous Symbol]                       0x08001c10   Section        0  eventrecorder.o(.text.EventRecorderStart)
    [Anonymous Symbol]                       0x08001c5c   Section        0  eventrecorder.o(.text.EventRecorderTimerGetCount)
    [Anonymous Symbol]                       0x08001c68   Section        0  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    [Anonymous Symbol]                       0x08001c74   Section        0  eventrecorder.o(.text.EventRecorderTimerSetup)
    [Anonymous Symbol]                       0x08001c98   Section        0  rtx_evr.o(.text.EvrRtxDelay)
    [Anonymous Symbol]                       0x08001cb4   Section        0  rtx_evr.o(.text.EvrRtxDelayCompleted)
    [Anonymous Symbol]                       0x08001cd0   Section        0  rtx_evr.o(.text.EvrRtxDelayError)
    [Anonymous Symbol]                       0x08001ce8   Section        0  rtx_evr.o(.text.EvrRtxDelayStarted)
    [Anonymous Symbol]                       0x08001d04   Section        0  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    [Anonymous Symbol]                       0x08001d20   Section        0  rtx_evr.o(.text.EvrRtxKernelError)
    [Anonymous Symbol]                       0x08001d38   Section        0  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x08001d50   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x08001d6c   Section        0  rtx_evr.o(.text.EvrRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x08001d88   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001d9c   Section        0  rtx_evr.o(.text.EvrRtxKernelInitialized)
    [Anonymous Symbol]                       0x08001db0   Section        0  rtx_evr.o(.text.EvrRtxKernelStart)
    [Anonymous Symbol]                       0x08001dc4   Section        0  rtx_evr.o(.text.EvrRtxKernelStarted)
    [Anonymous Symbol]                       0x08001dd8   Section        0  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08001e04   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    [Anonymous Symbol]                       0x08001e20   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    [Anonymous Symbol]                       0x08001e48   Section        0  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    [Anonymous Symbol]                       0x08001e74   Section        0  rtx_evr.o(.text.EvrRtxMemoryFree)
    [Anonymous Symbol]                       0x08001e9c   Section        0  rtx_evr.o(.text.EvrRtxMemoryInit)
    [Anonymous Symbol]                       0x08001ec0   Section        0  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    [Anonymous Symbol]                       0x08001edc   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    [Anonymous Symbol]                       0x08001ef8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueError)
    [Anonymous Symbol]                       0x08001f10   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001f3c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    [Anonymous Symbol]                       0x08001f64   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    [Anonymous Symbol]                       0x08001f80   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    [Anonymous Symbol]                       0x08001f9c   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    [Anonymous Symbol]                       0x08001fb8   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    [Anonymous Symbol]                       0x08001fd4   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    [Anonymous Symbol]                       0x08001ff0   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08002020   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    [Anonymous Symbol]                       0x08002048   Section        0  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    [Anonymous Symbol]                       0x08002064   Section        0  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    [Anonymous Symbol]                       0x08002080   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquire)
    [Anonymous Symbol]                       0x0800209c   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    [Anonymous Symbol]                       0x080020b8   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    [Anonymous Symbol]                       0x080020d4   Section        0  rtx_evr.o(.text.EvrRtxMutexAcquired)
    [Anonymous Symbol]                       0x080020f0   Section        0  rtx_evr.o(.text.EvrRtxMutexCreated)
    [Anonymous Symbol]                       0x0800210c   Section        0  rtx_evr.o(.text.EvrRtxMutexDelete)
    [Anonymous Symbol]                       0x08002128   Section        0  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    [Anonymous Symbol]                       0x08002144   Section        0  rtx_evr.o(.text.EvrRtxMutexError)
    [Anonymous Symbol]                       0x0800215c   Section        0  rtx_evr.o(.text.EvrRtxMutexNew)
    [Anonymous Symbol]                       0x08002178   Section        0  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    [Anonymous Symbol]                       0x08002194   Section        0  rtx_evr.o(.text.EvrRtxMutexRelease)
    [Anonymous Symbol]                       0x080021b0   Section        0  rtx_evr.o(.text.EvrRtxMutexReleased)
    [Anonymous Symbol]                       0x080021cc   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x080021e8   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    [Anonymous Symbol]                       0x08002204   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    [Anonymous Symbol]                       0x08002220   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    [Anonymous Symbol]                       0x0800223c   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    [Anonymous Symbol]                       0x08002258   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreDelete)
    [Anonymous Symbol]                       0x08002274   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreDestroyed)
    [Anonymous Symbol]                       0x08002290   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreError)
    [Anonymous Symbol]                       0x080022a8   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    [Anonymous Symbol]                       0x080022d0   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    [Anonymous Symbol]                       0x080022ec   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x08002308   Section        0  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    [Anonymous Symbol]                       0x08002324   Section        0  rtx_evr.o(.text.EvrRtxThreadBlocked)
    [Anonymous Symbol]                       0x08002340   Section        0  rtx_evr.o(.text.EvrRtxThreadCreated)
    [Anonymous Symbol]                       0x08002378   Section        0  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    [Anonymous Symbol]                       0x08002394   Section        0  rtx_evr.o(.text.EvrRtxThreadError)
    [Anonymous Symbol]                       0x080023ac   Section        0  rtx_evr.o(.text.EvrRtxThreadExit)
    [Anonymous Symbol]                       0x080023c0   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    [Anonymous Symbol]                       0x080023d8   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x080023f4   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    [Anonymous Symbol]                       0x08002410   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08002438   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    [Anonymous Symbol]                       0x08002464   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    [Anonymous Symbol]                       0x08002480   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    [Anonymous Symbol]                       0x080024a8   Section        0  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    [Anonymous Symbol]                       0x080024c4   Section        0  rtx_evr.o(.text.EvrRtxThreadGetId)
    [Anonymous Symbol]                       0x080024e0   Section        0  rtx_evr.o(.text.EvrRtxThreadJoined)
    [Anonymous Symbol]                       0x080024fc   Section        0  rtx_evr.o(.text.EvrRtxThreadNew)
    [Anonymous Symbol]                       0x08002524   Section        0  rtx_evr.o(.text.EvrRtxThreadPreempted)
    [Anonymous Symbol]                       0x08002540   Section        0  rtx_evr.o(.text.EvrRtxThreadSwitched)
    [Anonymous Symbol]                       0x0800255c   Section        0  rtx_evr.o(.text.EvrRtxThreadTerminate)
    [Anonymous Symbol]                       0x08002578   Section        0  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    [Anonymous Symbol]                       0x08002594   Section        0  rtx_evr.o(.text.EvrRtxTimerCallback)
    [Anonymous Symbol]                       0x080025b0   Section        0  rtx_evr.o(.text.EvrRtxTimerCreated)
    [Anonymous Symbol]                       0x080025cc   Section        0  rtx_evr.o(.text.EvrRtxTimerDelete)
    [Anonymous Symbol]                       0x080025e8   Section        0  rtx_evr.o(.text.EvrRtxTimerDestroyed)
    [Anonymous Symbol]                       0x08002604   Section        0  rtx_evr.o(.text.EvrRtxTimerError)
    [Anonymous Symbol]                       0x0800261c   Section        0  rtx_evr.o(.text.EvrRtxTimerNew)
    [Anonymous Symbol]                       0x0800264c   Section        0  rtx_evr.o(.text.EvrRtxTimerStart)
    [Anonymous Symbol]                       0x08002668   Section        0  rtx_evr.o(.text.EvrRtxTimerStarted)
    [Anonymous Symbol]                       0x08002684   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl)
    [Anonymous Symbol]                       0x080026cc   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize)
    __arm_cp.15_0                            0x08002708   Number         4  usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize)
    [Anonymous Symbol]                       0x0800270c   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo)
    [Anonymous Symbol]                       0x0800273a   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors)
    [Anonymous Symbol]                       0x08002762   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize)
    [Anonymous Symbol]                       0x0800278e   Section        0  usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors)
    GetContext                               0x080027b9   Thumb Code    18  eventrecorder.o(.text.GetContext)
    [Anonymous Symbol]                       0x080027b8   Section        0  eventrecorder.o(.text.GetContext)
    GetRecordIndex                           0x080027cd   Thumb Code    18  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x080027cc   Section        0  eventrecorder.o(.text.GetRecordIndex)
    [Anonymous Symbol]                       0x080027e0   Section        0  stm32f4xx_hal.o(.text.HAL_Delay)
    [Anonymous Symbol]                       0x08002824   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    [Anonymous Symbol]                       0x08002a80   Section        0  main.o(.text.HAL_GPIO_EXTI_Callback)
    [Anonymous Symbol]                       0x08002aa8   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    [Anonymous Symbol]                       0x08002ae0   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    [Anonymous Symbol]                       0x08002ed0   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x08002ef8   Section        0  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    [Anonymous Symbol]                       0x08002f28   Section        0  main.o(.text.HAL_GetTick)
    [Anonymous Symbol]                       0x08002f90   Section        0  stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init)
    [Anonymous Symbol]                       0x080030d8   Section        0  stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit)
    [Anonymous Symbol]                       0x08003128   Section        0  stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit)
    [Anonymous Symbol]                       0x080031f0   Section        0  stm32f4xx_hal.o(.text.HAL_Init)
    [Anonymous Symbol]                       0x08003228   Section        0  main.o(.text.HAL_InitTick)
    [Anonymous Symbol]                       0x08003234   Section        0  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    [Anonymous Symbol]                       0x08003280   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08003294   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x080032a8   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    [Anonymous Symbol]                       0x080032dc   Section        0  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080032ec   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    [Anonymous Symbol]                       0x08003550   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    [Anonymous Symbol]                       0x08003638   Section        0  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    [Anonymous Symbol]                       0x08003cf8   Section        0  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    [Anonymous Symbol]                       0x08003dfc   Section        0  stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit)
    [Anonymous Symbol]                       0x08003e90   Section        0  stm32f4xx_it.o(.text.HardFault_Handler)
    IncrementRecordsDumped                   0x08003e95   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsDumped)
    [Anonymous Symbol]                       0x08003e94   Section        0  eventrecorder.o(.text.IncrementRecordsDumped)
    IncrementRecordsWritten                  0x08003ea9   Thumb Code    18  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x08003ea8   Section        0  eventrecorder.o(.text.IncrementRecordsWritten)
    [Anonymous Symbol]                       0x08003ebc   Section        0  thread.o(.text.Init_Thread)
    [Anonymous Symbol]                       0x08003ef8   Section        0  timer.o(.text.Init_Timers)
    IsException                              0x08003fad   Thumb Code    20  rtx_delay.o(.text.IsException)
    [Anonymous Symbol]                       0x08003fac   Section        0  rtx_delay.o(.text.IsException)
    IsException                              0x08003fc1   Thumb Code    20  rtx_kernel.o(.text.IsException)
    [Anonymous Symbol]                       0x08003fc0   Section        0  rtx_kernel.o(.text.IsException)
    IsException                              0x08003fd5   Thumb Code    20  rtx_msgqueue.o(.text.IsException)
    [Anonymous Symbol]                       0x08003fd4   Section        0  rtx_msgqueue.o(.text.IsException)
    IsException                              0x08003fe9   Thumb Code    20  rtx_mutex.o(.text.IsException)
    [Anonymous Symbol]                       0x08003fe8   Section        0  rtx_mutex.o(.text.IsException)
    IsException                              0x08003ffd   Thumb Code    20  rtx_semaphore.o(.text.IsException)
    [Anonymous Symbol]                       0x08003ffc   Section        0  rtx_semaphore.o(.text.IsException)
    IsException                              0x08004011   Thumb Code    20  rtx_thread.o(.text.IsException)
    [Anonymous Symbol]                       0x08004010   Section        0  rtx_thread.o(.text.IsException)
    IsException                              0x08004025   Thumb Code    20  rtx_timer.o(.text.IsException)
    [Anonymous Symbol]                       0x08004024   Section        0  rtx_timer.o(.text.IsException)
    IsIrqMasked                              0x08004039   Thumb Code    46  rtx_delay.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08004038   Section        0  rtx_delay.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08004069   Thumb Code    46  rtx_kernel.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08004068   Section        0  rtx_kernel.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08004099   Thumb Code    46  rtx_msgqueue.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08004098   Section        0  rtx_msgqueue.o(.text.IsIrqMasked)
    IsIrqMasked                              0x080040c9   Thumb Code    46  rtx_mutex.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x080040c8   Section        0  rtx_mutex.o(.text.IsIrqMasked)
    IsIrqMasked                              0x080040f9   Thumb Code    46  rtx_semaphore.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x080040f8   Section        0  rtx_semaphore.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08004129   Thumb Code    46  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08004128   Section        0  rtx_thread.o(.text.IsIrqMasked)
    IsIrqMasked                              0x08004159   Thumb Code    46  rtx_timer.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x08004158   Section        0  rtx_timer.o(.text.IsIrqMasked)
    IsMessageQueuePtrValid                   0x08004189   Thumb Code    34  rtx_msgqueue.o(.text.IsMessageQueuePtrValid)
    [Anonymous Symbol]                       0x08004188   Section        0  rtx_msgqueue.o(.text.IsMessageQueuePtrValid)
    IsMutexPtrValid                          0x080041ad   Thumb Code    34  rtx_mutex.o(.text.IsMutexPtrValid)
    [Anonymous Symbol]                       0x080041ac   Section        0  rtx_mutex.o(.text.IsMutexPtrValid)
    IsPrivileged                             0x080041d1   Thumb Code    20  rtx_kernel.o(.text.IsPrivileged)
    [Anonymous Symbol]                       0x080041d0   Section        0  rtx_kernel.o(.text.IsPrivileged)
    IsSemaphorePtrValid                      0x080041e5   Thumb Code    34  rtx_semaphore.o(.text.IsSemaphorePtrValid)
    [Anonymous Symbol]                       0x080041e4   Section        0  rtx_semaphore.o(.text.IsSemaphorePtrValid)
    IsThreadPtrValid                         0x08004209   Thumb Code    34  rtx_thread.o(.text.IsThreadPtrValid)
    [Anonymous Symbol]                       0x08004208   Section        0  rtx_thread.o(.text.IsThreadPtrValid)
    IsTimerPtrValid                          0x0800422d   Thumb Code    34  rtx_timer.o(.text.IsTimerPtrValid)
    [Anonymous Symbol]                       0x0800422c   Section        0  rtx_timer.o(.text.IsTimerPtrValid)
    LockRecord                               0x08004251   Thumb Code   140  eventrecorder.o(.text.LockRecord)
    [Anonymous Symbol]                       0x08004250   Section        0  eventrecorder.o(.text.LockRecord)
    MX_GPIO_Init                             0x080042dd   Thumb Code   368  main.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x080042dc   Section        0  main.o(.text.MX_GPIO_Init)
    MX_SPI5_Init                             0x0800444d   Thumb Code    78  main.o(.text.MX_SPI5_Init)
    [Anonymous Symbol]                       0x0800444c   Section        0  main.o(.text.MX_SPI5_Init)
    MX_USB_OTG_HS_HCD_Init                   0x0800449d   Thumb Code    64  main.o(.text.MX_USB_OTG_HS_HCD_Init)
    [Anonymous Symbol]                       0x0800449c   Section        0  main.o(.text.MX_USB_OTG_HS_HCD_Init)
    MemBlockPtr                              0x080044dd   Thumb Code    24  rtx_memory.o(.text.MemBlockPtr)
    [Anonymous Symbol]                       0x080044dc   Section        0  rtx_memory.o(.text.MemBlockPtr)
    MemHeadPtr                               0x080044f5   Thumb Code    10  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x080044f4   Section        0  rtx_memory.o(.text.MemHeadPtr)
    [Anonymous Symbol]                       0x08004500   Section        0  stm32f4xx_it.o(.text.MemManage_Handler)
    MessageQueueGet                          0x08004505   Thumb Code    82  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x08004504   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x08004559   Thumb Code   172  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x08004558   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x08004605   Thumb Code    66  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08004604   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x08004648   Section        0  stm32f4xx_it.o(.text.NMI_Handler)
    NVIC_EncodePriority                      0x0800464d   Thumb Code   108  stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0800464c   Section        0  stm32f4xx_hal_cortex.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x080046b8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x080046c4   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x08004700   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x08004708   Section        0  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x08004788   Section        0  otg_hs_stm32f4xx.o(.text.OTG_HS_IRQHandler)
    [Anonymous Symbol]                       0x080047ac   Section        0  otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff)
    OUTLINED_FUNCTION_0                      0x080047e3   Thumb Code    10  fs_sys.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x080047e2   Section        0  fs_sys.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x080047ed   Thumb Code    24  usbh_lib_core.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x080047ec   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08004805   Thumb Code     6  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08004804   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x0800480b   Thumb Code    10  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0800480a   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x08004815   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x08004814   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x0800481d   Thumb Code     6  fs_mapi.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x0800481c   Section        0  fs_mapi.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08004823   Thumb Code     6  fs_sys.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08004822   Section        0  fs_sys.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08004829   Thumb Code    48  usbh_lib_core.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08004828   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08004859   Thumb Code    10  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08004858   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x08004863   Thumb Code     8  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x08004862   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_10                     0x0800486b   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_10)
    [Anonymous Symbol]                       0x0800486a   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_10)
    OUTLINED_FUNCTION_11                     0x08004873   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_11)
    [Anonymous Symbol]                       0x08004872   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_11)
    OUTLINED_FUNCTION_12                     0x0800487b   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_12)
    [Anonymous Symbol]                       0x0800487a   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_12)
    OUTLINED_FUNCTION_12                     0x08004883   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_12)
    [Anonymous Symbol]                       0x08004882   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_12)
    OUTLINED_FUNCTION_13                     0x0800488b   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_13)
    [Anonymous Symbol]                       0x0800488a   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_13)
    OUTLINED_FUNCTION_13                     0x08004893   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_13)
    [Anonymous Symbol]                       0x08004892   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_13)
    OUTLINED_FUNCTION_14                     0x0800489b   Thumb Code    14  usbh_lib_core.o(.text.OUTLINED_FUNCTION_14)
    [Anonymous Symbol]                       0x0800489a   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_14)
    OUTLINED_FUNCTION_14                     0x080048a9   Thumb Code     6  fs_fat.o(.text.OUTLINED_FUNCTION_14)
    [Anonymous Symbol]                       0x080048a8   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_14)
    OUTLINED_FUNCTION_15                     0x080048af   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_15)
    [Anonymous Symbol]                       0x080048ae   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_15)
    OUTLINED_FUNCTION_15                     0x080048b7   Thumb Code     6  fs_fat.o(.text.OUTLINED_FUNCTION_15)
    [Anonymous Symbol]                       0x080048b6   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_15)
    OUTLINED_FUNCTION_16                     0x080048bd   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_16)
    [Anonymous Symbol]                       0x080048bc   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_16)
    OUTLINED_FUNCTION_17                     0x080048c5   Thumb Code     6  usbh_lib_core.o(.text.OUTLINED_FUNCTION_17)
    [Anonymous Symbol]                       0x080048c4   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_17)
    OUTLINED_FUNCTION_18                     0x080048cb   Thumb Code    10  usbh_lib_core.o(.text.OUTLINED_FUNCTION_18)
    [Anonymous Symbol]                       0x080048ca   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_18)
    OUTLINED_FUNCTION_19                     0x080048d5   Thumb Code     6  fs_fat.o(.text.OUTLINED_FUNCTION_19)
    [Anonymous Symbol]                       0x080048d4   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_19)
    OUTLINED_FUNCTION_2                      0x080048db   Thumb Code    10  fs_mapi.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x080048da   Section        0  fs_mapi.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_2                      0x080048e5   Thumb Code     6  fs_sys.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x080048e4   Section        0  fs_sys.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_2                      0x080048eb   Thumb Code     8  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x080048ea   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_2                      0x080048f3   Thumb Code    16  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x080048f2   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_2                      0x08004903   Thumb Code    14  fs_fat.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x08004902   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_20                     0x08004911   Thumb Code    12  usbh_lib_core.o(.text.OUTLINED_FUNCTION_20)
    [Anonymous Symbol]                       0x08004910   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_20)
    OUTLINED_FUNCTION_20                     0x0800491d   Thumb Code     6  fs_fat.o(.text.OUTLINED_FUNCTION_20)
    [Anonymous Symbol]                       0x0800491c   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_20)
    OUTLINED_FUNCTION_21                     0x08004923   Thumb Code     6  usbh_lib_core.o(.text.OUTLINED_FUNCTION_21)
    [Anonymous Symbol]                       0x08004922   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_21)
    OUTLINED_FUNCTION_22                     0x08004929   Thumb Code    12  usbh_lib_core.o(.text.OUTLINED_FUNCTION_22)
    [Anonymous Symbol]                       0x08004928   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_22)
    OUTLINED_FUNCTION_23                     0x08004935   Thumb Code    12  usbh_lib_core.o(.text.OUTLINED_FUNCTION_23)
    [Anonymous Symbol]                       0x08004934   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_23)
    OUTLINED_FUNCTION_24                     0x08004941   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_24)
    [Anonymous Symbol]                       0x08004940   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_24)
    OUTLINED_FUNCTION_25                     0x08004949   Thumb Code    10  usbh_lib_core.o(.text.OUTLINED_FUNCTION_25)
    [Anonymous Symbol]                       0x08004948   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_25)
    OUTLINED_FUNCTION_26                     0x08004953   Thumb Code    14  usbh_lib_core.o(.text.OUTLINED_FUNCTION_26)
    [Anonymous Symbol]                       0x08004952   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_26)
    OUTLINED_FUNCTION_26                     0x08004961   Thumb Code    10  fs_fat.o(.text.OUTLINED_FUNCTION_26)
    [Anonymous Symbol]                       0x08004960   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_26)
    OUTLINED_FUNCTION_27                     0x0800496b   Thumb Code    10  usbh_lib_core.o(.text.OUTLINED_FUNCTION_27)
    [Anonymous Symbol]                       0x0800496a   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_27)
    OUTLINED_FUNCTION_27                     0x08004975   Thumb Code    10  fs_fat.o(.text.OUTLINED_FUNCTION_27)
    [Anonymous Symbol]                       0x08004974   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_27)
    OUTLINED_FUNCTION_28                     0x0800497f   Thumb Code    10  usbh_lib_core.o(.text.OUTLINED_FUNCTION_28)
    [Anonymous Symbol]                       0x0800497e   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_28)
    OUTLINED_FUNCTION_28                     0x08004989   Thumb Code     6  fs_fat.o(.text.OUTLINED_FUNCTION_28)
    [Anonymous Symbol]                       0x08004988   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_28)
    OUTLINED_FUNCTION_29                     0x0800498f   Thumb Code    18  usbh_lib_core.o(.text.OUTLINED_FUNCTION_29)
    [Anonymous Symbol]                       0x0800498e   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_29)
    OUTLINED_FUNCTION_3                      0x080049a1   Thumb Code     6  fs_mapi.o(.text.OUTLINED_FUNCTION_3)
    [Anonymous Symbol]                       0x080049a0   Section        0  fs_mapi.o(.text.OUTLINED_FUNCTION_3)
    OUTLINED_FUNCTION_3                      0x080049a7   Thumb Code    44  usbh_lib_core.o(.text.OUTLINED_FUNCTION_3)
    [Anonymous Symbol]                       0x080049a6   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_3)
    OUTLINED_FUNCTION_3                      0x080049d3   Thumb Code     6  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3)
    [Anonymous Symbol]                       0x080049d2   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_3)
    OUTLINED_FUNCTION_3                      0x080049d9   Thumb Code    10  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_3)
    [Anonymous Symbol]                       0x080049d8   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_3)
    OUTLINED_FUNCTION_3                      0x080049e3   Thumb Code    10  fs_fat.o(.text.OUTLINED_FUNCTION_3)
    [Anonymous Symbol]                       0x080049e2   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_3)
    OUTLINED_FUNCTION_4                      0x080049ed   Thumb Code    42  usbh_lib_core.o(.text.OUTLINED_FUNCTION_4)
    [Anonymous Symbol]                       0x080049ec   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_4)
    OUTLINED_FUNCTION_4                      0x08004a17   Thumb Code    10  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4)
    [Anonymous Symbol]                       0x08004a16   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_4)
    OUTLINED_FUNCTION_4                      0x08004a21   Thumb Code    10  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_4)
    [Anonymous Symbol]                       0x08004a20   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_4)
    OUTLINED_FUNCTION_5                      0x08004a2b   Thumb Code    16  usbh_lib_core.o(.text.OUTLINED_FUNCTION_5)
    [Anonymous Symbol]                       0x08004a2a   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_5)
    OUTLINED_FUNCTION_5                      0x08004a3b   Thumb Code     8  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5)
    [Anonymous Symbol]                       0x08004a3a   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_5)
    OUTLINED_FUNCTION_5                      0x08004a43   Thumb Code     6  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5)
    [Anonymous Symbol]                       0x08004a42   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_5)
    OUTLINED_FUNCTION_5                      0x08004a49   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_5)
    [Anonymous Symbol]                       0x08004a48   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_5)
    OUTLINED_FUNCTION_6                      0x08004a51   Thumb Code    10  usbh_lib_core.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x08004a50   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_6)
    OUTLINED_FUNCTION_6                      0x08004a5b   Thumb Code     6  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x08004a5a   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_6)
    OUTLINED_FUNCTION_6                      0x08004a61   Thumb Code     8  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x08004a60   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_6)
    OUTLINED_FUNCTION_7                      0x08004a69   Thumb Code     6  fs_mapi.o(.text.OUTLINED_FUNCTION_7)
    [Anonymous Symbol]                       0x08004a68   Section        0  fs_mapi.o(.text.OUTLINED_FUNCTION_7)
    OUTLINED_FUNCTION_7                      0x08004a6f   Thumb Code     8  usbh_lib_core.o(.text.OUTLINED_FUNCTION_7)
    [Anonymous Symbol]                       0x08004a6e   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_7)
    OUTLINED_FUNCTION_7                      0x08004a77   Thumb Code     8  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7)
    [Anonymous Symbol]                       0x08004a76   Section        0  usbh_lib_drv.o(.text.OUTLINED_FUNCTION_7)
    OUTLINED_FUNCTION_7                      0x08004a7f   Thumb Code     8  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7)
    [Anonymous Symbol]                       0x08004a7e   Section        0  usbh_lib_msc.o(.text.OUTLINED_FUNCTION_7)
    OUTLINED_FUNCTION_7                      0x08004a87   Thumb Code     8  fs_fat.o(.text.OUTLINED_FUNCTION_7)
    [Anonymous Symbol]                       0x08004a86   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_7)
    OUTLINED_FUNCTION_8                      0x08004a8f   Thumb Code    26  usbh_lib_core.o(.text.OUTLINED_FUNCTION_8)
    [Anonymous Symbol]                       0x08004a8e   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_8)
    OUTLINED_FUNCTION_8                      0x08004aa9   Thumb Code    12  fs_fat.o(.text.OUTLINED_FUNCTION_8)
    [Anonymous Symbol]                       0x08004aa8   Section        0  fs_fat.o(.text.OUTLINED_FUNCTION_8)
    OUTLINED_FUNCTION_9                      0x08004ab5   Thumb Code     6  usbh_lib_core.o(.text.OUTLINED_FUNCTION_9)
    [Anonymous Symbol]                       0x08004ab4   Section        0  usbh_lib_core.o(.text.OUTLINED_FUNCTION_9)
    SVC_Setup                                0x08004abd   Thumb Code    80  rtx_kernel.o(.text.SVC_Setup)
    [Anonymous Symbol]                       0x08004abc   Section        0  rtx_kernel.o(.text.SVC_Setup)
    SemaphoreTokenDecrement                  0x08004b0d   Thumb Code    36  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    [Anonymous Symbol]                       0x08004b0c   Section        0  rtx_semaphore.o(.text.SemaphoreTokenDecrement)
    SemaphoreTokenIncrement                  0x08004b31   Thumb Code    46  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    [Anonymous Symbol]                       0x08004b30   Section        0  rtx_semaphore.o(.text.SemaphoreTokenIncrement)
    SetPendSV                                0x08004b61   Thumb Code    16  rtx_system.o(.text.SetPendSV)
    [Anonymous Symbol]                       0x08004b60   Section        0  rtx_system.o(.text.SetPendSV)
    SetPrivileged                            0x08004b71   Thumb Code    52  rtx_thread.o(.text.SetPrivileged)
    [Anonymous Symbol]                       0x08004b70   Section        0  rtx_thread.o(.text.SetPrivileged)
    StackOffsetR0                            0x08004ba5   Thumb Code    24  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x08004ba4   Section        0  rtx_thread.o(.text.StackOffsetR0)
    [Anonymous Symbol]                       0x08004bbc   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08004c7c   Section        0  system_stm32f4xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08004c90   Section        0  thread.o(.text.Thread)
    ThreadFlagsCheck                         0x08004d15   Thumb Code   124  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x08004d14   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsSet                           0x08004d91   Thumb Code    26  rtx_thread.o(.text.ThreadFlagsSet)
    [Anonymous Symbol]                       0x08004d90   Section        0  rtx_thread.o(.text.ThreadFlagsSet)
    Timer1_Callback                          0x08004dad   Thumb Code     8  timer.o(.text.Timer1_Callback)
    [Anonymous Symbol]                       0x08004dac   Section        0  timer.o(.text.Timer1_Callback)
    Timer2_Callback                          0x08004db5   Thumb Code    26  timer.o(.text.Timer2_Callback)
    [Anonymous Symbol]                       0x08004db4   Section        0  timer.o(.text.Timer2_Callback)
    TimerInsert                              0x08004dd1   Thumb Code   158  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x08004dd0   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerRemove                              0x08004e71   Thumb Code    72  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x08004e70   Section        0  rtx_timer.o(.text.TimerRemove)
    TimerUnlink                              0x08004eb9   Thumb Code    40  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x08004eb8   Section        0  rtx_timer.o(.text.TimerUnlink)
    [Anonymous Symbol]                       0x08004ee0   Section        0  usbh_config_0.o(.text.USBH0_SignalPipeEvent)
    [Anonymous Symbol]                       0x08004ef8   Section        0  usbh_config_0.o(.text.USBH0_SignalPortEvent)
    [Anonymous Symbol]                       0x08004f14   Section        0  usbh_config_0.o(.text.USBH_CDC_Configure)
    [Anonymous Symbol]                       0x08004f24   Section        0  usbh_config_0.o(.text.USBH_CDC_Initialize_Lib)
    [Anonymous Symbol]                       0x08004f30   Section        0  usbh_config_0.o(.text.USBH_CDC_Unconfigure)
    [Anonymous Symbol]                       0x08004f3c   Section        0  usbh_config_0.o(.text.USBH_CDC_Uninitialize_Lib)
    USBH_CH_Disable                          0x08004f49   Thumb Code   198  usbh_hs_stm32f4xx.o(.text.USBH_CH_Disable)
    [Anonymous Symbol]                       0x08004f48   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_CH_Disable)
    USBH_CH_FindFree                         0x08005011   Thumb Code    70  usbh_hs_stm32f4xx.o(.text.USBH_CH_FindFree)
    [Anonymous Symbol]                       0x08005010   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_CH_FindFree)
    USBH_CH_GetAddressFromIndex              0x08005059   Thumb Code    22  usbh_hs_stm32f4xx.o(.text.USBH_CH_GetAddressFromIndex)
    [Anonymous Symbol]                       0x08005058   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_CH_GetAddressFromIndex)
    USBH_CH_GetIndexFromAddress              0x08005071   Thumb Code    22  usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress)
    [Anonymous Symbol]                       0x08005070   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_CH_GetIndexFromAddress)
    [Anonymous Symbol]                       0x08005088   Section        0  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    __arm_cp.56_1                            0x080051b4   Number         4  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    __arm_cp.56_3                            0x080051b8   Number         4  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    __arm_cp.56_4                            0x080051bc   Number         4  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    __arm_cp.56_5                            0x080051c0   Number         4  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    [Anonymous Symbol]                       0x080051c4   Section        0  usbh_lib_core.o(.text.USBH_ControlTransfer)
    __arm_cp.42_0                            0x0800546c   Number         4  usbh_lib_core.o(.text.USBH_ControlTransfer)
    __arm_cp.42_1                            0x08005470   Number         4  usbh_lib_core.o(.text.USBH_ControlTransfer)
    __arm_cp.42_2                            0x08005474   Number         4  usbh_lib_core.o(.text.USBH_ControlTransfer)
    __arm_cp.42_3                            0x08005478   Number         4  usbh_lib_core.o(.text.USBH_ControlTransfer)
    __arm_cp.42_4                            0x0800547c   Number         4  usbh_lib_core.o(.text.USBH_ControlTransfer)
    [Anonymous Symbol]                       0x08005480   Section        0  usbh_lib_core.o(.text.USBH_Core_Thread)
    __arm_cp.57_0                            0x080056c4   Number         4  usbh_lib_core.o(.text.USBH_Core_Thread)
    __arm_cp.57_1                            0x080056c8   Number         4  usbh_lib_core.o(.text.USBH_Core_Thread)
    __arm_cp.57_2                            0x080056cc   Number         4  usbh_lib_core.o(.text.USBH_Core_Thread)
    __arm_cp.57_3                            0x080056d0   Number         4  usbh_lib_core.o(.text.USBH_Core_Thread)
    [Anonymous Symbol]                       0x080056d4   Section        0  usbh_config_0.o(.text.USBH_CustomClass_Configure)
    [Anonymous Symbol]                       0x080056e4   Section        0  usbh_config_0.o(.text.USBH_CustomClass_Initialize)
    [Anonymous Symbol]                       0x080056f0   Section        0  usbh_config_0.o(.text.USBH_CustomClass_Unconfigure)
    [Anonymous Symbol]                       0x080056fc   Section        0  usbh_config_0.o(.text.USBH_CustomClass_Uninitialize)
    [Anonymous Symbol]                       0x08005708   Section        0  usbh_config_0.o(.text.USBH_Delay)
    [Anonymous Symbol]                       0x0800571c   Section        0  usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature)
    [Anonymous Symbol]                       0x0800576c   Section        0  usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor)
    [Anonymous Symbol]                       0x080057d0   Section        0  usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress)
    [Anonymous Symbol]                       0x08005820   Section        0  usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration)
    __arm_cp.49_0                            0x08005878   Number         4  usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration)
    [Anonymous Symbol]                       0x0800587c   Section        0  usbh_lib_drv.o(.text.USBH_DriverGetCapabilities)
    [Anonymous Symbol]                       0x08005888   Section        0  usbh_lib_drv.o(.text.USBH_DriverGetVersion)
    [Anonymous Symbol]                       0x08005894   Section        0  usbh_lib_drv.o(.text.USBH_DriverInitialize)
    [Anonymous Symbol]                       0x080058e8   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeCreate)
    [Anonymous Symbol]                       0x0800594c   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeDelete)
    [Anonymous Symbol]                       0x080059a0   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeModify)
    [Anonymous Symbol]                       0x08005a10   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeTransfer)
    [Anonymous Symbol]                       0x08005a80   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort)
    [Anonymous Symbol]                       0x08005ac8   Section        0  usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult)
    [Anonymous Symbol]                       0x08005b00   Section        0  usbh_lib_drv.o(.text.USBH_DriverPortGetState)
    [Anonymous Symbol]                       0x08005b2c   Section        0  usbh_lib_drv.o(.text.USBH_DriverPortReset)
    __arm_cp.6_1                             0x08005b84   Number         4  usbh_lib_drv.o(.text.USBH_DriverPortReset)
    [Anonymous Symbol]                       0x08005b88   Section        0  usbh_lib_drv.o(.text.USBH_DriverPortResume)
    [Anonymous Symbol]                       0x08005bd0   Section        0  usbh_lib_drv.o(.text.USBH_DriverPortSuspend)
    __arm_cp.7_1                             0x08005c18   Number         4  usbh_lib_drv.o(.text.USBH_DriverPortSuspend)
    [Anonymous Symbol]                       0x08005c1c   Section        0  usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff)
    __arm_cp.5_0                             0x08005c70   Number         4  usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff)
    [Anonymous Symbol]                       0x08005c74   Section        0  usbh_lib_drv.o(.text.USBH_DriverPowerControl)
    __arm_cp.4_0                             0x08005cbc   Number         4  usbh_lib_drv.o(.text.USBH_DriverPowerControl)
    __arm_cp.4_1                             0x08005cc0   Number         4  usbh_lib_drv.o(.text.USBH_DriverPowerControl)
    USBH_Engine                              0x08005cc5   Thumb Code  1900  usbh_lib_core.o(.text.USBH_Engine)
    [Anonymous Symbol]                       0x08005cc4   Section        0  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_0                            0x08006430   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_1                            0x08006434   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_2                            0x08006438   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_3                            0x0800643c   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_4                            0x08006440   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    __arm_cp.58_5                            0x08006444   Number         4  usbh_lib_core.o(.text.USBH_Engine)
    USBH_GetCapabilities                     0x08006449   Thumb Code    16  usbh_hs_stm32f4xx.o(.text.USBH_GetCapabilities)
    [Anonymous Symbol]                       0x08006448   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_GetCapabilities)
    USBH_GetFrameNumber                      0x08006459   Thumb Code    54  usbh_hs_stm32f4xx.o(.text.USBH_GetFrameNumber)
    [Anonymous Symbol]                       0x08006458   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_GetFrameNumber)
    [Anonymous Symbol]                       0x08006490   Section        0  usbh_lib_core.o(.text.USBH_GetFree_PIPE)
    USBH_GetVersion                          0x080064b1   Thumb Code    18  usbh_hs_stm32f4xx.o(.text.USBH_GetVersion)
    [Anonymous Symbol]                       0x080064b0   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_GetVersion)
    [Anonymous Symbol]                       0x080064c4   Section        0  usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe)
    [Anonymous Symbol]                       0x08006500   Section        0  usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe)
    __arm_cp.53_0                            0x0800653c   Number         4  usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe)
    __arm_cp.53_1                            0x08006540   Number         4  usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe)
    [Anonymous Symbol]                       0x08006544   Section        0  usbh_config_0.o(.text.USBH_HID_Configure)
    [Anonymous Symbol]                       0x08006554   Section        0  usbh_config_0.o(.text.USBH_HID_Initialize_Lib)
    [Anonymous Symbol]                       0x08006560   Section        0  usbh_config_0.o(.text.USBH_HID_Unconfigure)
    [Anonymous Symbol]                       0x0800656c   Section        0  usbh_config_0.o(.text.USBH_HID_Uninitialize_Lib)
    [Anonymous Symbol]                       0x08006578   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ)
    USBH_HW_StartTransfer                    0x08006ca5   Thumb Code   776  usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer)
    [Anonymous Symbol]                       0x08006ca4   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_HW_StartTransfer)
    USBH_Initialize                          0x08006fad   Thumb Code   148  usbh_hs_stm32f4xx.o(.text.USBH_Initialize)
    [Anonymous Symbol]                       0x08006fac   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_Initialize)
    [Anonymous Symbol]                       0x08007040   Section        0  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_0                             0x08007244   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_1                             0x08007248   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_2                             0x0800724c   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_3                             0x08007250   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_4                             0x08007254   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_5                             0x08007258   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_6                             0x0800725c   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_7                             0x08007260   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_8                             0x08007264   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_9                             0x08007268   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_10                            0x0800726c   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    __arm_cp.1_11                            0x08007270   Number         4  usbh_lib_core.o(.text.USBH_Initialize)
    [Anonymous Symbol]                       0x08007274   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Configure)
    __arm_cp.9_1                             0x08007378   Number         4  usbh_lib_msc.o(.text.USBH_MSC_Configure)
    [Anonymous Symbol]                       0x0800737c   Section        0  usbh_msc.o(.text.USBH_MSC_DriveMount)
    [Anonymous Symbol]                       0x080073ec   Section        0  usbh_lib_msc.o(.text.USBH_MSC_GetDevice)
    __arm_cp.2_1                             0x08007418   Number         4  usbh_lib_msc.o(.text.USBH_MSC_GetDevice)
    [Anonymous Symbol]                       0x0800741c   Section        0  usbh_lib_msc.o(.text.USBH_MSC_GetStatus)
    __arm_cp.4_0                             0x08007444   Number         4  usbh_lib_msc.o(.text.USBH_MSC_GetStatus)
    [Anonymous Symbol]                       0x08007448   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Initialize)
    [Anonymous Symbol]                       0x0800744c   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib)
    __arm_cp.11_1                            0x08007888   Number         4  usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib)
    [Anonymous Symbol]                       0x0800788c   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Read)
    [Anonymous Symbol]                       0x080078e8   Section        0  usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity)
    USBH_MSC_SCSI_Read10                     0x08007915   Thumb Code   304  usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10)
    [Anonymous Symbol]                       0x08007914   Section        0  usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10)
    __arm_cp.6_1                             0x08007a44   Number         4  usbh_lib_msc.o(.text.USBH_MSC_SCSI_Read10)
    USBH_MSC_SCSI_RequestSense               0x08007a49   Thumb Code   268  usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense)
    [Anonymous Symbol]                       0x08007a48   Section        0  usbh_lib_msc.o(.text.USBH_MSC_SCSI_RequestSense)
    USBH_MSC_SCSI_TestUnitReady              0x08007b55   Thumb Code   232  usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady)
    [Anonymous Symbol]                       0x08007b54   Section        0  usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady)
    __arm_cp.12_1                            0x08007c3c   Number         4  usbh_lib_msc.o(.text.USBH_MSC_SCSI_TestUnitReady)
    [Anonymous Symbol]                       0x08007c40   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Unconfigure)
    __arm_cp.10_0                            0x08007cd0   Number         4  usbh_lib_msc.o(.text.USBH_MSC_Unconfigure)
    [Anonymous Symbol]                       0x08007cd4   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Uninitialize)
    [Anonymous Symbol]                       0x08007cd6   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Uninitialize_Lib)
    [Anonymous Symbol]                       0x08007ce0   Section        0  usbh_lib_msc.o(.text.USBH_MSC_Write)
    __arm_cp.7_0                             0x08007e80   Number         4  usbh_lib_msc.o(.text.USBH_MSC_Write)
    __arm_cp.7_1                             0x08007e84   Number         4  usbh_lib_msc.o(.text.USBH_MSC_Write)
    [Anonymous Symbol]                       0x08007e88   Section        0  usbh_lib_core.o(.text.USBH_MemoryAllocate)
    [Anonymous Symbol]                       0x08007eb4   Section        0  usbh_lib_mem.o(.text.USBH_MemoryAllocateLib)
    [Anonymous Symbol]                       0x08007ef0   Section        0  usbh_lib_core.o(.text.USBH_MemoryFree)
    [Anonymous Symbol]                       0x08007f18   Section        0  usbh_lib_mem.o(.text.USBH_MemoryFreeLib)
    [Anonymous Symbol]                       0x08007f54   Section        0  usbh_lib_mem.o(.text.USBH_MemoryGetPoolSize)
    [Anonymous Symbol]                       0x08007f60   Section        0  usbh_lib_core.o(.text.USBH_MemoryInitialize)
    [Anonymous Symbol]                       0x08007f80   Section        0  usbh_lib_mem.o(.text.USBH_MemoryInitializeLib)
    [Anonymous Symbol]                       0x08007fb4   Section        0  usbh_lib_mem.o(.text.USBH_MemoryIsInPool)
    __arm_cp.3_0                             0x08007fd8   Number         4  usbh_lib_mem.o(.text.USBH_MemoryIsInPool)
    __arm_cp.3_1                             0x08007fdc   Number         4  usbh_lib_mem.o(.text.USBH_MemoryIsInPool)
    USBH_MsToTick                            0x08007fe1   Thumb Code   170  usbh_config_0.o(.text.USBH_MsToTick)
    [Anonymous Symbol]                       0x08007fe0   Section        0  usbh_config_0.o(.text.USBH_MsToTick)
    [Anonymous Symbol]                       0x0800808c   Section        0  usbh_config_0.o(.text.USBH_MutexAcquire)
    [Anonymous Symbol]                       0x080080c0   Section        0  usbh_config_0.o(.text.USBH_MutexCreate)
    [Anonymous Symbol]                       0x08008118   Section        0  usbh_config_0.o(.text.USBH_MutexDelete)
    [Anonymous Symbol]                       0x0800813c   Section        0  usbh_config_0.o(.text.USBH_MutexRelease)
    [Anonymous Symbol]                       0x08008160   Section        0  usbh_lib_core.o(.text.USBH_Notify)
    [Anonymous Symbol]                       0x08008164   Section        0  usbh_lib_core.o(.text.USBH_PipeAbort)
    USBH_PipeCreate                          0x080081d5   Thumb Code   390  usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate)
    [Anonymous Symbol]                       0x080081d4   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeCreate)
    [Anonymous Symbol]                       0x0800835c   Section        0  usbh_lib_core.o(.text.USBH_PipeCreate)
    USBH_PipeDelete                          0x080083c1   Thumb Code   136  usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete)
    [Anonymous Symbol]                       0x080083c0   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeDelete)
    [Anonymous Symbol]                       0x08008448   Section        0  usbh_lib_core.o(.text.USBH_PipeDelete)
    USBH_PipeDoPing                          0x0800847d   Thumb Code   196  usbh_lib_core.o(.text.USBH_PipeDoPing)
    [Anonymous Symbol]                       0x0800847c   Section        0  usbh_lib_core.o(.text.USBH_PipeDoPing)
    __arm_cp.39_0                            0x08008540   Number         4  usbh_lib_core.o(.text.USBH_PipeDoPing)
    __arm_cp.39_1                            0x08008544   Number         4  usbh_lib_core.o(.text.USBH_PipeDoPing)
    USBH_PipeModify                          0x08008549   Thumb Code   202  usbh_hs_stm32f4xx.o(.text.USBH_PipeModify)
    [Anonymous Symbol]                       0x08008548   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeModify)
    [Anonymous Symbol]                       0x08008614   Section        0  usbh_lib_core.o(.text.USBH_PipeReceive)
    __arm_cp.34_0                            0x0800890c   Number         4  usbh_lib_core.o(.text.USBH_PipeReceive)
    __arm_cp.34_1                            0x08008910   Number         4  usbh_lib_core.o(.text.USBH_PipeReceive)
    __arm_cp.34_2                            0x08008914   Number         4  usbh_lib_core.o(.text.USBH_PipeReceive)
    USBH_PipeReset                           0x08008919   Thumb Code   110  usbh_hs_stm32f4xx.o(.text.USBH_PipeReset)
    [Anonymous Symbol]                       0x08008918   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeReset)
    [Anonymous Symbol]                       0x08008988   Section        0  usbh_lib_core.o(.text.USBH_PipeSend)
    __arm_cp.38_0                            0x08008c78   Number         4  usbh_lib_core.o(.text.USBH_PipeSend)
    __arm_cp.38_1                            0x08008c7c   Number         4  usbh_lib_core.o(.text.USBH_PipeSend)
    __arm_cp.38_2                            0x08008c80   Number         4  usbh_lib_core.o(.text.USBH_PipeSend)
    USBH_PipeTransfer                        0x08008c85   Thumb Code   232  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer)
    [Anonymous Symbol]                       0x08008c84   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransfer)
    USBH_PipeTransferAbort                   0x08008d6d   Thumb Code   112  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort)
    [Anonymous Symbol]                       0x08008d6c   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferAbort)
    USBH_PipeTransferGetResult               0x08008ddd   Thumb Code    50  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult)
    [Anonymous Symbol]                       0x08008ddc   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PipeTransferGetResult)
    USBH_PortGetState                        0x08008e11   Thumb Code   146  usbh_hs_stm32f4xx.o(.text.USBH_PortGetState)
    [Anonymous Symbol]                       0x08008e10   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PortGetState)
    USBH_PortReset                           0x08008ea5   Thumb Code   164  usbh_hs_stm32f4xx.o(.text.USBH_PortReset)
    [Anonymous Symbol]                       0x08008ea4   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PortReset)
    USBH_PortResume                          0x08008f49   Thumb Code    94  usbh_hs_stm32f4xx.o(.text.USBH_PortResume)
    [Anonymous Symbol]                       0x08008f48   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PortResume)
    USBH_PortSuspend                         0x08008fa9   Thumb Code    74  usbh_hs_stm32f4xx.o(.text.USBH_PortSuspend)
    [Anonymous Symbol]                       0x08008fa8   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PortSuspend)
    USBH_PortVbusOnOff                       0x08008ff5   Thumb Code   122  usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff)
    [Anonymous Symbol]                       0x08008ff4   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PortVbusOnOff)
    USBH_PowerControl                        0x08009071   Thumb Code   680  usbh_hs_stm32f4xx.o(.text.USBH_PowerControl)
    [Anonymous Symbol]                       0x08009070   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_PowerControl)
    USBH_RecoveryEnumerateDevice             0x08009319   Thumb Code   424  usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice)
    [Anonymous Symbol]                       0x08009318   Section        0  usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice)
    __arm_cp.63_0                            0x080094c0   Number         4  usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice)
    __arm_cp.63_1                            0x080094c4   Number         4  usbh_lib_core.o(.text.USBH_RecoveryEnumerateDevice)
    [Anonymous Symbol]                       0x080094c8   Section        0  usbh_config_0.o(.text.USBH_SemaphoreAcquire)
    [Anonymous Symbol]                       0x080094fc   Section        0  usbh_config_0.o(.text.USBH_SemaphoreCreate)
    [Anonymous Symbol]                       0x08009554   Section        0  usbh_config_0.o(.text.USBH_SemaphoreDelete)
    [Anonymous Symbol]                       0x08009578   Section        0  usbh_config_0.o(.text.USBH_SemaphoreRelease)
    [Anonymous Symbol]                       0x0800959c   Section        0  usbh_lib_drv.o(.text.USBH_SignalPipeEvent)
    [Anonymous Symbol]                       0x080095dc   Section        0  usbh_lib_drv.o(.text.USBH_SignalPortEvent)
    __arm_cp.18_0                            0x08009638   Number         4  usbh_lib_drv.o(.text.USBH_SignalPortEvent)
    __arm_cp.18_1                            0x0800963c   Number         4  usbh_lib_drv.o(.text.USBH_SignalPortEvent)
    [Anonymous Symbol]                       0x08009640   Section        0  usbh_config_0.o(.text.USBH_ThreadCreate)
    [Anonymous Symbol]                       0x080096b0   Section        0  usbh_config_0.o(.text.USBH_ThreadFlagsSet)
    [Anonymous Symbol]                       0x080096d8   Section        0  usbh_config_0.o(.text.USBH_ThreadFlagsWait)
    [Anonymous Symbol]                       0x08009740   Section        0  usbh_config_0.o(.text.USBH_ThreadGetHandle)
    [Anonymous Symbol]                       0x08009748   Section        0  usbh_config_0.o(.text.USBH_ThreadTerminate)
    [Anonymous Symbol]                       0x0800976c   Section        0  usbh_config_0.o(.text.USBH_TimerCreate)
    [Anonymous Symbol]                       0x080097c0   Section        0  usbh_config_0.o(.text.USBH_TimerDelete)
    [Anonymous Symbol]                       0x080097e4   Section        0  usbh_config_0.o(.text.USBH_TimerStart)
    USBH_Uninitialize                        0x08009819   Thumb Code    54  usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize)
    [Anonymous Symbol]                       0x08009818   Section        0  usbh_hs_stm32f4xx.o(.text.USBH_Uninitialize)
    USBH_UninitializeDevices                 0x08009851   Thumb Code   284  usbh_lib_core.o(.text.USBH_UninitializeDevices)
    [Anonymous Symbol]                       0x08009850   Section        0  usbh_lib_core.o(.text.USBH_UninitializeDevices)
    __arm_cp.5_0                             0x0800996c   Number         4  usbh_lib_core.o(.text.USBH_UninitializeDevices)
    __arm_cp.5_1                             0x08009970   Number         4  usbh_lib_core.o(.text.USBH_UninitializeDevices)
    __arm_cp.5_2                             0x08009974   Number         4  usbh_lib_core.o(.text.USBH_UninitializeDevices)
    [Anonymous Symbol]                       0x08009978   Section        0  stm32f4xx_ll_usb.o(.text.USB_CoreInit)
    USB_CoreReset                            0x08009a75   Thumb Code   132  stm32f4xx_ll_usb.o(.text.USB_CoreReset)
    [Anonymous Symbol]                       0x08009a74   Section        0  stm32f4xx_ll_usb.o(.text.USB_CoreReset)
    [Anonymous Symbol]                       0x08009af8   Section        0  stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt)
    [Anonymous Symbol]                       0x08009b0c   Section        0  stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo)
    [Anonymous Symbol]                       0x08009b8c   Section        0  stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo)
    [Anonymous Symbol]                       0x08009c14   Section        0  stm32f4xx_ll_usb.o(.text.USB_GetMode)
    [Anonymous Symbol]                       0x08009c24   Section        0  stm32f4xx_ll_usb.o(.text.USB_HostInit)
    [Anonymous Symbol]                       0x08009dd0   Section        0  stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode)
    UnlockRecord                             0x08009eb1   Thumb Code    86  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x08009eb0   Section        0  eventrecorder.o(.text.UnlockRecord)
    [Anonymous Symbol]                       0x08009f08   Section        0  stm32f4xx_it.o(.text.UsageFault_Handler)
    __NVIC_DisableIRQ                        0x08009f0d   Thumb Code    56  usbh_hs_stm32f4xx.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08009f0c   Section        0  usbh_hs_stm32f4xx.o(.text.__NVIC_DisableIRQ)
    __NVIC_DisableIRQ                        0x08009f45   Thumb Code    56  stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    [Anonymous Symbol]                       0x08009f44   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_DisableIRQ)
    __NVIC_EnableIRQ                         0x08009f7d   Thumb Code    48  usbh_hs_stm32f4xx.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08009f7c   Section        0  usbh_hs_stm32f4xx.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x08009fad   Thumb Code    48  stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08009fac   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x08009fdd   Thumb Code    16  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08009fdc   Section        0  rtx_kernel.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x08009fed   Thumb Code    16  stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x08009fec   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x08009ffd   Thumb Code    66  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08009ffc   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x0800a041   Thumb Code    60  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0800a040   Section        0  stm32f4xx_hal_cortex.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0800a07c   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x0800a114   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x0800a114   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x0800a134   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x0800a134   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x0800a148   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x0800a148   Section        0  rtx_lib.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x0800a17c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x0800a17c   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x0800a198   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x0800a1a0   Section        0  retarget_io.o(.text._sys_close)
    [Anonymous Symbol]                       0x0800a20c   Section        0  retarget_io.o(.text._sys_flen)
    [Anonymous Symbol]                       0x0800a2a4   Section        0  retarget_io.o(.text._sys_istty)
    [Anonymous Symbol]                       0x0800a2ec   Section        0  retarget_io.o(.text._sys_open)
    [Anonymous Symbol]                       0x0800a3f0   Section        0  retarget_io.o(.text._sys_read)
    [Anonymous Symbol]                       0x0800a48c   Section        0  retarget_io.o(.text._sys_seek)
    [Anonymous Symbol]                       0x0800a510   Section        0  retarget_io.o(.text._sys_write)
    alloc_clus                               0x0800a595   Thumb Code   112  fs_fat.o(.text.alloc_clus)
    [Anonymous Symbol]                       0x0800a594   Section        0  fs_fat.o(.text.alloc_clus)
    __arm_cp.34_0                            0x0800a604   Number         4  fs_fat.o(.text.alloc_clus)
    alloc_table_read                         0x0800a609   Thumb Code   150  fs_fat.o(.text.alloc_table_read)
    [Anonymous Symbol]                       0x0800a608   Section        0  fs_fat.o(.text.alloc_table_read)
    alloc_table_write                        0x0800a69f   Thumb Code   214  fs_fat.o(.text.alloc_table_write)
    [Anonymous Symbol]                       0x0800a69e   Section        0  fs_fat.o(.text.alloc_table_write)
    [Anonymous Symbol]                       0x0800a774   Section        0  main.o(.text.app_main)
    atomic_chk32_all                         0x0800a791   Thumb Code    56  rtx_thread.o(.text.atomic_chk32_all)
    [Anonymous Symbol]                       0x0800a790   Section        0  rtx_thread.o(.text.atomic_chk32_all)
    atomic_chk32_any                         0x0800a7c9   Thumb Code    52  rtx_thread.o(.text.atomic_chk32_any)
    [Anonymous Symbol]                       0x0800a7c8   Section        0  rtx_thread.o(.text.atomic_chk32_any)
    atomic_cmp_xch_32                        0x0800a7fd   Thumb Code    96  eventrecorder.o(.text.atomic_cmp_xch_32)
    [Anonymous Symbol]                       0x0800a7fc   Section        0  eventrecorder.o(.text.atomic_cmp_xch_32)
    atomic_dec16_nz                          0x0800a85d   Thumb Code    44  rtx_semaphore.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x0800a85c   Section        0  rtx_semaphore.o(.text.atomic_dec16_nz)
    atomic_dec16_nz                          0x0800a889   Thumb Code    44  rtx_system.o(.text.atomic_dec16_nz)
    [Anonymous Symbol]                       0x0800a888   Section        0  rtx_system.o(.text.atomic_dec16_nz)
    atomic_dec32                             0x0800a8b5   Thumb Code    32  rtx_mempool.o(.text.atomic_dec32)
    [Anonymous Symbol]                       0x0800a8b4   Section        0  rtx_mempool.o(.text.atomic_dec32)
    atomic_dec32_nz                          0x0800a8d5   Thumb Code    40  rtx_msgqueue.o(.text.atomic_dec32_nz)
    [Anonymous Symbol]                       0x0800a8d4   Section        0  rtx_msgqueue.o(.text.atomic_dec32_nz)
    atomic_inc16_lim                         0x0800a8fd   Thumb Code    52  rtx_system.o(.text.atomic_inc16_lim)
    [Anonymous Symbol]                       0x0800a8fc   Section        0  rtx_system.o(.text.atomic_inc16_lim)
    atomic_inc16_lt                          0x0800a931   Thumb Code    56  rtx_semaphore.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x0800a930   Section        0  rtx_semaphore.o(.text.atomic_inc16_lt)
    atomic_inc16_lt                          0x0800a969   Thumb Code    56  rtx_system.o(.text.atomic_inc16_lt)
    [Anonymous Symbol]                       0x0800a968   Section        0  rtx_system.o(.text.atomic_inc16_lt)
    atomic_inc32                             0x0800a9a1   Thumb Code    32  rtx_mempool.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0800a9a0   Section        0  rtx_mempool.o(.text.atomic_inc32)
    atomic_inc32                             0x0800a9c1   Thumb Code    32  rtx_msgqueue.o(.text.atomic_inc32)
    [Anonymous Symbol]                       0x0800a9c0   Section        0  rtx_msgqueue.o(.text.atomic_inc32)
    atomic_inc_32                            0x0800a9e1   Thumb Code    76  eventrecorder.o(.text.atomic_inc_32)
    [Anonymous Symbol]                       0x0800a9e0   Section        0  eventrecorder.o(.text.atomic_inc_32)
    atomic_inc_8                             0x0800aa2d   Thumb Code    88  eventrecorder.o(.text.atomic_inc_8)
    [Anonymous Symbol]                       0x0800aa2c   Section        0  eventrecorder.o(.text.atomic_inc_8)
    atomic_link_get                          0x0800aa85   Thumb Code    40  rtx_mempool.o(.text.atomic_link_get)
    [Anonymous Symbol]                       0x0800aa84   Section        0  rtx_mempool.o(.text.atomic_link_get)
    atomic_link_put                          0x0800aaad   Thumb Code    48  rtx_mempool.o(.text.atomic_link_put)
    [Anonymous Symbol]                       0x0800aaac   Section        0  rtx_mempool.o(.text.atomic_link_put)
    atomic_set32                             0x0800aadd   Thumb Code    40  rtx_thread.o(.text.atomic_set32)
    [Anonymous Symbol]                       0x0800aadc   Section        0  rtx_thread.o(.text.atomic_set32)
    atomic_wr8                               0x0800ab05   Thumb Code    40  rtx_msgqueue.o(.text.atomic_wr8)
    [Anonymous Symbol]                       0x0800ab04   Section        0  rtx_msgqueue.o(.text.atomic_wr8)
    cache_fat                                0x0800ab2d   Thumb Code   148  fs_fat.o(.text.cache_fat)
    [Anonymous Symbol]                       0x0800ab2c   Section        0  fs_fat.o(.text.cache_fat)
    char_validate                            0x0800abc1   Thumb Code   108  fs_fat.o(.text.char_validate)
    [Anonymous Symbol]                       0x0800abc0   Section        0  fs_fat.o(.text.char_validate)
    __arm_cp.70_0                            0x0800ac2c   Number         4  fs_fat.o(.text.char_validate)
    clear_clus                               0x0800ac31   Thumb Code    52  fs_fat.o(.text.clear_clus)
    [Anonymous Symbol]                       0x0800ac30   Section        0  fs_fat.o(.text.clear_clus)
    clus_to_sect                             0x0800ac65   Thumb Code    36  fs_fat.o(.text.clus_to_sect)
    [Anonymous Symbol]                       0x0800ac64   Section        0  fs_fat.o(.text.clus_to_sect)
    crc16_ccitt                              0x0800ac89   Thumb Code   130  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x0800ac88   Section        0  eventrecorder.o(.text.crc16_ccitt)
    [Anonymous Symbol]                       0x0800ad0c   Section        0  fs_config.o(.text.efs_close)
    [Anonymous Symbol]                       0x0800ad18   Section        0  fs_config.o(.text.efs_flen)
    [Anonymous Symbol]                       0x0800ad24   Section        0  fs_config.o(.text.efs_handle_get)
    [Anonymous Symbol]                       0x0800ad30   Section        0  fs_config.o(.text.efs_init)
    [Anonymous Symbol]                       0x0800ad3c   Section        0  fs_config.o(.text.efs_mount)
    [Anonymous Symbol]                       0x0800ad48   Section        0  fs_config.o(.text.efs_open)
    [Anonymous Symbol]                       0x0800ad58   Section        0  fs_config.o(.text.efs_read)
    [Anonymous Symbol]                       0x0800ad68   Section        0  fs_config.o(.text.efs_seek)
    [Anonymous Symbol]                       0x0800ad78   Section        0  fs_config.o(.text.efs_write)
    [Anonymous Symbol]                       0x0800ad88   Section        0  fs_config.o(.text.elink_cmd)
    [Anonymous Symbol]                       0x0800ad94   Section        0  fs_config.o(.text.elink_dir)
    [Anonymous Symbol]                       0x0800ada4   Section        0  fs_config.o(.text.elink_init)
    [Anonymous Symbol]                       0x0800adb0   Section        0  fs_config.o(.text.elink_insert)
    [Anonymous Symbol]                       0x0800adbc   Section        0  fs_config.o(.text.elink_scan)
    entry_flush                              0x0800adcb   Thumb Code    56  fs_fat.o(.text.entry_flush)
    [Anonymous Symbol]                       0x0800adca   Section        0  fs_fat.o(.text.entry_flush)
    entry_pos_comp                           0x0800ae03   Thumb Code    28  fs_fat.o(.text.entry_pos_comp)
    [Anonymous Symbol]                       0x0800ae02   Section        0  fs_fat.o(.text.entry_pos_comp)
    entry_pos_inc                            0x0800ae1f   Thumb Code   132  fs_fat.o(.text.entry_pos_inc)
    [Anonymous Symbol]                       0x0800ae1e   Section        0  fs_fat.o(.text.entry_pos_inc)
    entry_read                               0x0800aea3   Thumb Code    74  fs_fat.o(.text.entry_read)
    [Anonymous Symbol]                       0x0800aea2   Section        0  fs_fat.o(.text.entry_read)
    entry_type                               0x0800aeed   Thumb Code    42  fs_fat.o(.text.entry_type)
    [Anonymous Symbol]                       0x0800aeec   Section        0  fs_fat.o(.text.entry_type)
    evr_initialize                           0x0800af19   Thumb Code   262  rtx_lib.o(.text.evr_initialize)
    [Anonymous Symbol]                       0x0800af18   Section        0  rtx_lib.o(.text.evr_initialize)
    extract_clus                             0x0800b01f   Thumb Code    26  fs_fat.o(.text.extract_clus)
    [Anonymous Symbol]                       0x0800b01e   Section        0  fs_fat.o(.text.extract_clus)
    [Anonymous Symbol]                       0x0800b038   Section        0  fs_fat.o(.text.fat_close)
    __arm_cp.11_2                            0x0800b154   Number         4  fs_fat.o(.text.fat_close)
    fat_crc32                                0x0800b159   Thumb Code    44  fs_fat.o(.text.fat_crc32)
    [Anonymous Symbol]                       0x0800b158   Section        0  fs_fat.o(.text.fat_crc32)
    __arm_cp.78_0                            0x0800b184   Number         4  fs_fat.o(.text.fat_crc32)
    [Anonymous Symbol]                       0x0800b188   Section        0  fs_fat.o(.text.fat_flen)
    [Anonymous Symbol]                       0x0800b1a4   Section        0  fs_fat.o(.text.fat_handle_get)
    __arm_cp.0_0                             0x0800b1dc   Number         4  fs_fat.o(.text.fat_handle_get)
    __arm_cp.0_1                             0x0800b1e0   Number         4  fs_fat.o(.text.fat_handle_get)
    [Anonymous Symbol]                       0x0800b1e4   Section        0  fs_fat.o(.text.fat_init)
    [Anonymous Symbol]                       0x0800b230   Section        0  fs_config.o(.text.fat_jour_init)
    [Anonymous Symbol]                       0x0800b23c   Section        0  fs_fat.o(.text.fat_mount)
    __arm_cp.7_0                             0x0800b4fc   Number         4  fs_fat.o(.text.fat_mount)
    __arm_cp.7_1                             0x0800b500   Number         4  fs_fat.o(.text.fat_mount)
    __arm_cp.7_2                             0x0800b504   Number         4  fs_fat.o(.text.fat_mount)
    __arm_cp.7_3                             0x0800b508   Number         4  fs_fat.o(.text.fat_mount)
    __arm_cp.7_4                             0x0800b50c   Number         4  fs_fat.o(.text.fat_mount)
    [Anonymous Symbol]                       0x0800b510   Section        0  fs_fat.o(.text.fat_open)
    [Anonymous Symbol]                       0x0800b6a4   Section        0  fs_fat.o(.text.fat_read)
    __arm_cp.29_0                            0x0800b7d0   Number         4  fs_fat.o(.text.fat_read)
    __arm_cp.29_1                            0x0800b7d4   Number         4  fs_fat.o(.text.fat_read)
    [Anonymous Symbol]                       0x0800b7d8   Section        0  fs_fat.o(.text.fat_seek)
    __arm_cp.38_0                            0x0800bab0   Number         4  fs_fat.o(.text.fat_seek)
    __arm_cp.38_1                            0x0800bab4   Number         4  fs_fat.o(.text.fat_seek)
    __arm_cp.38_2                            0x0800bab8   Number         4  fs_fat.o(.text.fat_seek)
    fat_vol_chk                              0x0800babd   Thumb Code   142  fs_fat.o(.text.fat_vol_chk)
    [Anonymous Symbol]                       0x0800babc   Section        0  fs_fat.o(.text.fat_vol_chk)
    [Anonymous Symbol]                       0x0800bb4c   Section        0  fs_fat.o(.text.fat_write)
    file_locked                              0x0800bd19   Thumb Code    72  fs_fat.o(.text.file_locked)
    [Anonymous Symbol]                       0x0800bd18   Section        0  fs_fat.o(.text.file_locked)
    [Anonymous Symbol]                       0x0800bd60   Section        0  fs_mapi.o(.text.finit)
    __arm_cp.2_0                             0x0800be1c   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_1                             0x0800be20   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_2                             0x0800be24   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_3                             0x0800be28   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_4                             0x0800be2c   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_5                             0x0800be30   Number         4  fs_mapi.o(.text.finit)
    __arm_cp.2_6                             0x0800be34   Number         4  fs_mapi.o(.text.finit)
    [Anonymous Symbol]                       0x0800be38   Section        0  fs_mapi.o(.text.fmount)
    __arm_cp.4_0                             0x0800be80   Number         4  fs_mapi.o(.text.fmount)
    format_date                              0x0800be85   Thumb Code    44  fs_fat.o(.text.format_date)
    [Anonymous Symbol]                       0x0800be84   Section        0  fs_fat.o(.text.format_date)
    format_time                              0x0800beb1   Thumb Code    46  fs_fat.o(.text.format_time)
    [Anonymous Symbol]                       0x0800beb0   Section        0  fs_fat.o(.text.format_time)
    frec_find                                0x0800bee1   Thumb Code   636  fs_fat.o(.text.frec_find)
    [Anonymous Symbol]                       0x0800bee0   Section        0  fs_fat.o(.text.frec_find)
    __arm_cp.69_0                            0x0800c15c   Number         4  fs_fat.o(.text.frec_find)
    frec_find_elink                          0x0800c161   Thumb Code    84  fs_fat.o(.text.frec_find_elink)
    [Anonymous Symbol]                       0x0800c160   Section        0  fs_fat.o(.text.frec_find_elink)
    fs_close                                 0x0800c1b5   Thumb Code    96  fs_sys.o(.text.fs_close)
    [Anonymous Symbol]                       0x0800c1b4   Section        0  fs_sys.o(.text.fs_close)
    [Anonymous Symbol]                       0x0800c214   Section        0  fs_config.o(.text.fs_config)
    [Anonymous Symbol]                       0x0800c234   Section        0  fs_mapi.o(.text.fs_config_evr)
    fs_config_usb                            0x0800c239   Thumb Code    80  fs_config.o(.text.fs_config_usb)
    [Anonymous Symbol]                       0x0800c238   Section        0  fs_config.o(.text.fs_config_usb)
    [Anonymous Symbol]                       0x0800c288   Section        0  fs_common.o(.text.fs_drive_id)
    [Anonymous Symbol]                       0x0800c2ec   Section        0  fs_sys.o(.text.fs_fclose)
    [Anonymous Symbol]                       0x0800c2f0   Section        0  fs_sys.o(.text.fs_fopen)
    [Anonymous Symbol]                       0x0800c2f4   Section        0  fs_sys.o(.text.fs_fread)
    [Anonymous Symbol]                       0x0800c2f8   Section        0  fs_sys.o(.text.fs_fseek)
    [Anonymous Symbol]                       0x0800c300   Section        0  fs_sys.o(.text.fs_fsize)
    [Anonymous Symbol]                       0x0800c304   Section        0  fs_sys.o(.text.fs_fwrite)
    [Anonymous Symbol]                       0x0800c308   Section        0  fs_config.o(.text.fs_get_rtos_tick_freq)
    [Anonymous Symbol]                       0x0800c310   Section        0  fs_time.o(.text.fs_get_time)
    __arm_cp.0_0                             0x0800c324   Number         4  fs_time.o(.text.fs_get_time)
    [Anonymous Symbol]                       0x0800c328   Section        0  fs_config.o(.text.fs_mutex_acquire)
    [Anonymous Symbol]                       0x0800c34c   Section        0  fs_config.o(.text.fs_mutex_new)
    [Anonymous Symbol]                       0x0800c35c   Section        0  fs_config.o(.text.fs_mutex_release)
    fs_open                                  0x0800c37d   Thumb Code   148  fs_sys.o(.text.fs_open)
    [Anonymous Symbol]                       0x0800c37c   Section        0  fs_sys.o(.text.fs_open)
    __arm_cp.1_0                             0x0800c410   Number         4  fs_sys.o(.text.fs_open)
    fs_read                                  0x0800c415   Thumb Code   108  fs_sys.o(.text.fs_read)
    [Anonymous Symbol]                       0x0800c414   Section        0  fs_sys.o(.text.fs_read)
    fs_seek                                  0x0800c481   Thumb Code   136  fs_sys.o(.text.fs_seek)
    [Anonymous Symbol]                       0x0800c480   Section        0  fs_sys.o(.text.fs_seek)
    [Anonymous Symbol]                       0x0800c508   Section        0  fs_common.o(.text.fs_set_cdrive)
    __arm_cp.0_0                             0x0800c520   Number         4  fs_common.o(.text.fs_set_cdrive)
    __arm_cp.0_1                             0x0800c524   Number         4  fs_common.o(.text.fs_set_cdrive)
    fs_size                                  0x0800c529   Thumb Code   108  fs_sys.o(.text.fs_size)
    [Anonymous Symbol]                       0x0800c528   Section        0  fs_sys.o(.text.fs_size)
    __arm_cp.11_0                            0x0800c594   Number         4  fs_sys.o(.text.fs_size)
    __arm_cp.11_1                            0x0800c598   Number         4  fs_sys.o(.text.fs_size)
    [Anonymous Symbol]                       0x0800c59c   Section        0  fs_common.o(.text.fs_strncasecmp)
    fs_to_rt_rval                            0x0800c5d1   Thumb Code   298  retarget_mdk-fs.o(.text.fs_to_rt_rval)
    [Anonymous Symbol]                       0x0800c5d0   Section        0  retarget_mdk-fs.o(.text.fs_to_rt_rval)
    fs_write                                 0x0800c6fd   Thumb Code   112  fs_sys.o(.text.fs_write)
    [Anonymous Symbol]                       0x0800c6fc   Section        0  fs_sys.o(.text.fs_write)
    __arm_cp.5_0                             0x0800c76c   Number         4  fs_sys.o(.text.fs_write)
    __arm_cp.5_1                             0x0800c770   Number         4  fs_sys.o(.text.fs_write)
    fsinfo_write                             0x0800c775   Thumb Code    72  fs_fat.o(.text.fsinfo_write)
    [Anonymous Symbol]                       0x0800c774   Section        0  fs_fat.o(.text.fsinfo_write)
    __arm_cp.9_0                             0x0800c7bc   Number         4  fs_fat.o(.text.fsinfo_write)
    __arm_cp.9_1                             0x0800c7c0   Number         4  fs_fat.o(.text.fsinfo_write)
    __arm_cp.9_2                             0x0800c7c4   Number         4  fs_fat.o(.text.fsinfo_write)
    [Anonymous Symbol]                       0x0800c7c8   Section        0  fs_config.o(.text.fsj_write)
    get_fat_sect                             0x0800c7d9   Thumb Code    48  fs_fat.o(.text.get_fat_sect)
    [Anonymous Symbol]                       0x0800c7d8   Section        0  fs_fat.o(.text.get_fat_sect)
    [Anonymous Symbol]                       0x0800c808   Section        0  fs_common.o(.text.get_u16)
    [Anonymous Symbol]                       0x0800c80c   Section        0  fs_common.o(.text.get_u32)
    isrRtxMessageQueueGet                    0x0800c811   Thumb Code   172  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800c810   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueueGet)
    isrRtxMessageQueuePut                    0x0800c8bd   Thumb Code   188  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    [Anonymous Symbol]                       0x0800c8bc   Section        0  rtx_msgqueue.o(.text.isrRtxMessageQueuePut)
    isrRtxSemaphoreAcquire                   0x0800c979   Thumb Code   110  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800c978   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreAcquire)
    isrRtxSemaphoreRelease                   0x0800c9e9   Thumb Code   116  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x0800c9e8   Section        0  rtx_semaphore.o(.text.isrRtxSemaphoreRelease)
    isrRtxThreadFlagsSet                     0x0800ca5d   Thumb Code   134  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x0800ca5c   Section        0  rtx_thread.o(.text.isrRtxThreadFlagsSet)
    isr_queue_get                            0x0800cae5   Thumb Code    84  rtx_system.o(.text.isr_queue_get)
    [Anonymous Symbol]                       0x0800cae4   Section        0  rtx_system.o(.text.isr_queue_get)
    isr_queue_put                            0x0800cb39   Thumb Code    94  rtx_system.o(.text.isr_queue_put)
    [Anonymous Symbol]                       0x0800cb38   Section        0  rtx_system.o(.text.isr_queue_put)
    lfn_char_cnt                             0x0800cb99   Thumb Code    28  fs_fat.o(.text.lfn_char_cnt)
    [Anonymous Symbol]                       0x0800cb98   Section        0  fs_fat.o(.text.lfn_char_cnt)
    long_ent_hash                            0x0800cbb5   Thumb Code    40  fs_fat.o(.text.long_ent_hash)
    [Anonymous Symbol]                       0x0800cbb4   Section        0  fs_fat.o(.text.long_ent_hash)
    __arm_cp.74_0                            0x0800cbdc   Number         4  fs_fat.o(.text.long_ent_hash)
    [Anonymous Symbol]                       0x0800cbe0   Section        0  main.o(.text.main)
    name_analyse                             0x0800cc1b   Thumb Code   204  fs_fat.o(.text.name_analyse)
    [Anonymous Symbol]                       0x0800cc1a   Section        0  fs_fat.o(.text.name_analyse)
    name_hash                                0x0800cce7   Thumb Code     8  fs_fat.o(.text.name_hash)
    [Anonymous Symbol]                       0x0800cce6   Section        0  fs_fat.o(.text.name_hash)
    name_strip                               0x0800ccef   Thumb Code    84  fs_fat.o(.text.name_strip)
    [Anonymous Symbol]                       0x0800ccee   Section        0  fs_fat.o(.text.name_strip)
    name_validate                            0x0800cd43   Thumb Code    28  fs_fat.o(.text.name_validate)
    [Anonymous Symbol]                       0x0800cd42   Section        0  fs_fat.o(.text.name_validate)
    [Anonymous Symbol]                       0x0800cd60   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x0800cdb4   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0800cdf8   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x0800ce34   Section        0  rtx_kernel.o(.text.osKernelGetTickFreq)
    [Anonymous Symbol]                       0x0800ce70   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x0800cebc   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x0800cf04   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x0800cf84   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800d010   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x0800d074   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x0800d0cc   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x0800d124   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0800d17c   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    osRtxEventFlagsObject                    0x0800d1ad   Thumb Code    10  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x0800d1ac   Section        0  rtx_system.o(.text.osRtxEventFlagsObject)
    [Anonymous Symbol]                       0x0800d1b8   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x0800d1c0   Section        0  rtx_lib.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x0800d1d4   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelGetState                      0x0800d1f1   Thumb Code    12  rtx_system.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0800d1f0   Section        0  rtx_system.o(.text.osRtxKernelGetState)
    osRtxKernelGetState                      0x0800d1fd   Thumb Code    12  rtx_thread.o(.text.osRtxKernelGetState)
    [Anonymous Symbol]                       0x0800d1fc   Section        0  rtx_thread.o(.text.osRtxKernelGetState)
    osRtxKernelState                         0x0800d209   Thumb Code    12  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x0800d208   Section        0  rtx_kernel.o(.text.osRtxKernelState)
    [Anonymous Symbol]                       0x0800d214   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x0800d360   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x0800d424   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x0800d4bc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x0800d508   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x0800d56c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolObject                    0x0800d605   Thumb Code    10  rtx_system.o(.text.osRtxMemoryPoolObject)
    [Anonymous Symbol]                       0x0800d604   Section        0  rtx_system.o(.text.osRtxMemoryPoolObject)
    osRtxMessageObject                       0x0800d611   Thumb Code    10  rtx_system.o(.text.osRtxMessageObject)
    [Anonymous Symbol]                       0x0800d610   Section        0  rtx_system.o(.text.osRtxMessageObject)
    osRtxMessageQueueId                      0x0800d61d   Thumb Code    10  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    [Anonymous Symbol]                       0x0800d61c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueId)
    osRtxMessageQueuePostProcess             0x0800d629   Thumb Code   324  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800d628   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x0800d76c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexDestroy                        0x0800d7ad   Thumb Code    90  rtx_mutex.o(.text.osRtxMutexDestroy)
    [Anonymous Symbol]                       0x0800d7ac   Section        0  rtx_mutex.o(.text.osRtxMutexDestroy)
    osRtxMutexId                             0x0800d809   Thumb Code    10  rtx_mutex.o(.text.osRtxMutexId)
    [Anonymous Symbol]                       0x0800d808   Section        0  rtx_mutex.o(.text.osRtxMutexId)
    osRtxMutexObject                         0x0800d815   Thumb Code    10  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x0800d814   Section        0  rtx_thread.o(.text.osRtxMutexObject)
    [Anonymous Symbol]                       0x0800d820   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x0800d8b8   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxMutexOwnerUnlock                    0x0800d965   Thumb Code   252  rtx_mutex.o(.text.osRtxMutexOwnerUnlock)
    [Anonymous Symbol]                       0x0800d964   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerUnlock)
    osRtxObject                              0x0800da61   Thumb Code    10  rtx_msgqueue.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da60   Section        0  rtx_msgqueue.o(.text.osRtxObject)
    osRtxObject                              0x0800da6d   Thumb Code    10  rtx_mutex.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da6c   Section        0  rtx_mutex.o(.text.osRtxObject)
    osRtxObject                              0x0800da79   Thumb Code    10  rtx_semaphore.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da78   Section        0  rtx_semaphore.o(.text.osRtxObject)
    osRtxObject                              0x0800da85   Thumb Code    10  rtx_system.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da84   Section        0  rtx_system.o(.text.osRtxObject)
    osRtxObject                              0x0800da91   Thumb Code    10  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da90   Section        0  rtx_thread.o(.text.osRtxObject)
    [Anonymous Symbol]                       0x0800da9c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x0800db54   Section        0  rtx_system.o(.text.osRtxPostProcess)
    osRtxSemaphoreDestroy                    0x0800db99   Thumb Code    90  rtx_semaphore.o(.text.osRtxSemaphoreDestroy)
    [Anonymous Symbol]                       0x0800db98   Section        0  rtx_semaphore.o(.text.osRtxSemaphoreDestroy)
    osRtxSemaphoreId                         0x0800dbf5   Thumb Code    10  rtx_semaphore.o(.text.osRtxSemaphoreId)
    [Anonymous Symbol]                       0x0800dbf4   Section        0  rtx_semaphore.o(.text.osRtxSemaphoreId)
    osRtxSemaphoreObject                     0x0800dc01   Thumb Code    10  rtx_system.o(.text.osRtxSemaphoreObject)
    [Anonymous Symbol]                       0x0800dc00   Section        0  rtx_system.o(.text.osRtxSemaphoreObject)
    osRtxSemaphorePostProcess                0x0800dc0d   Thumb Code    62  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x0800dc0c   Section        0  rtx_semaphore.o(.text.osRtxSemaphorePostProcess)
    [Anonymous Symbol]                       0x0800dc4c   Section        0  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadBlock                         0x0800dc5d   Thumb Code   136  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0800dc5c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x0800dce5   Thumb Code   250  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x0800dce4   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x0800dde0   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x0800de7c   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x0800dfcc   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x0800e02c   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x0800e0c5   Thumb Code   162  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x0800e0c4   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadGetRunning                    0x0800e169   Thumb Code    12  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800e168   Section        0  rtx_msgqueue.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800e175   Thumb Code    12  rtx_mutex.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800e174   Section        0  rtx_mutex.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800e181   Thumb Code    12  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800e180   Section        0  rtx_semaphore.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800e18d   Thumb Code    12  rtx_thread.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800e18c   Section        0  rtx_thread.o(.text.osRtxThreadGetRunning)
    osRtxThreadGetRunning                    0x0800e199   Thumb Code    12  rtx_timer.o(.text.osRtxThreadGetRunning)
    [Anonymous Symbol]                       0x0800e198   Section        0  rtx_timer.o(.text.osRtxThreadGetRunning)
    osRtxThreadId                            0x0800e1a5   Thumb Code    10  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x0800e1a4   Section        0  rtx_thread.o(.text.osRtxThreadId)
    [Anonymous Symbol]                       0x0800e1b0   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x0800e1ec   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x0800e224   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0800e29c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListRoot                      0x0800e2d1   Thumb Code    34  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0800e2d0   Section        0  rtx_thread.o(.text.osRtxThreadListRoot)
    [Anonymous Symbol]                       0x0800e2f4   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadObject                        0x0800e34d   Thumb Code    10  rtx_system.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0800e34c   Section        0  rtx_system.o(.text.osRtxThreadObject)
    osRtxThreadObject                        0x0800e359   Thumb Code    10  rtx_thread.o(.text.osRtxThreadObject)
    [Anonymous Symbol]                       0x0800e358   Section        0  rtx_thread.o(.text.osRtxThreadObject)
    osRtxThreadPostProcess                   0x0800e365   Thumb Code    68  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800e364   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x0800e3a8   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x0800e3c8   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadSetRunning                    0x0800e3ed   Thumb Code    20  rtx_thread.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800e3ec   Section        0  rtx_thread.o(.text.osRtxThreadSetRunning)
    osRtxThreadSetRunning                    0x0800e401   Thumb Code    20  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800e400   Section        0  rtx_timer.o(.text.osRtxThreadSetRunning)
    [Anonymous Symbol]                       0x0800e414   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x0800e450   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x0800e4e8   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x0800e518   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x0800e590   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x0800e5d8   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerDestroy                        0x0800e6e9   Thumb Code    94  rtx_timer.o(.text.osRtxTimerDestroy)
    [Anonymous Symbol]                       0x0800e6e8   Section        0  rtx_timer.o(.text.osRtxTimerDestroy)
    osRtxTimerId                             0x0800e749   Thumb Code    10  rtx_timer.o(.text.osRtxTimerId)
    [Anonymous Symbol]                       0x0800e748   Section        0  rtx_timer.o(.text.osRtxTimerId)
    [Anonymous Symbol]                       0x0800e754   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x0800e784   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x0800e7b9   Thumb Code   220  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0800e7b8   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0800e894   Section        0  rtx_semaphore.o(.text.osSemaphoreAcquire)
    [Anonymous Symbol]                       0x0800e8f4   Section        0  rtx_semaphore.o(.text.osSemaphoreDelete)
    [Anonymous Symbol]                       0x0800e94c   Section        0  rtx_semaphore.o(.text.osSemaphoreNew)
    [Anonymous Symbol]                       0x0800e9c0   Section        0  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadEntry                            0x0800ea11   Thumb Code    16  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800ea10   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x0800ea20   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x0800ea44   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x0800eaa4   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x0800eb18   Section        0  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x0800eb54   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x0800ebc8   Section        0  rtx_thread.o(.text.osThreadTerminate)
    [Anonymous Symbol]                       0x0800ec20   Section        0  rtx_timer.o(.text.osTimerDelete)
    [Anonymous Symbol]                       0x0800ec78   Section        0  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x0800ed04   Section        0  rtx_timer.o(.text.osTimerStart)
    os_kernel_is_active                      0x0800ed69   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x0800ed68   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    path_create                              0x0800eda1   Thumb Code  1796  fs_fat.o(.text.path_create)
    [Anonymous Symbol]                       0x0800eda0   Section        0  fs_fat.o(.text.path_create)
    __arm_cp.26_10                           0x0800f288   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_11                           0x0800f28c   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_12                           0x0800f290   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_13                           0x0800f294   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_14                           0x0800f298   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_15                           0x0800f29c   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_7                            0x0800f4b0   Number         4  fs_fat.o(.text.path_create)
    __arm_cp.26_8                            0x0800f4b4   Number         4  fs_fat.o(.text.path_create)
    path_init                                0x0800f4b9   Thumb Code    52  fs_fat.o(.text.path_init)
    [Anonymous Symbol]                       0x0800f4b8   Section        0  fs_fat.o(.text.path_init)
    path_open                                0x0800f4ed   Thumb Code   152  fs_fat.o(.text.path_open)
    [Anonymous Symbol]                       0x0800f4ec   Section        0  fs_fat.o(.text.path_open)
    path_validate                            0x0800f585   Thumb Code    74  fs_fat.o(.text.path_validate)
    [Anonymous Symbol]                       0x0800f584   Section        0  fs_fat.o(.text.path_validate)
    read_cache                               0x0800f5cf   Thumb Code   120  fs_fat.o(.text.read_cache)
    [Anonymous Symbol]                       0x0800f5ce   Section        0  fs_fat.o(.text.read_cache)
    read_sector                              0x0800f647   Thumb Code    80  fs_fat.o(.text.read_sector)
    [Anonymous Symbol]                       0x0800f646   Section        0  fs_fat.o(.text.read_sector)
    [Anonymous Symbol]                       0x0800f698   Section        0  retarget_mdk-fs.o(.text.rt_fs_close)
    [Anonymous Symbol]                       0x0800f6cc   Section        0  retarget_mdk-fs.o(.text.rt_fs_open)
    [Anonymous Symbol]                       0x0800f70c   Section        0  retarget_mdk-fs.o(.text.rt_fs_read)
    [Anonymous Symbol]                       0x0800f750   Section        0  retarget_mdk-fs.o(.text.rt_fs_seek)
    [Anonymous Symbol]                       0x0800f7a4   Section        0  retarget_mdk-fs.o(.text.rt_fs_size)
    [Anonymous Symbol]                       0x0800f7e4   Section        0  retarget_mdk-fs.o(.text.rt_fs_write)
    [Anonymous Symbol]                       0x0800f826   Section        0  fs_common.o(.text.set_u16)
    [Anonymous Symbol]                       0x0800f82a   Section        0  fs_common.o(.text.set_u32)
    sfn_extract                              0x0800f82f   Thumb Code    84  fs_fat.o(.text.sfn_extract)
    [Anonymous Symbol]                       0x0800f82e   Section        0  fs_fat.o(.text.sfn_extract)
    short_ent_hash                           0x0800f883   Thumb Code    30  fs_fat.o(.text.short_ent_hash)
    [Anonymous Symbol]                       0x0800f882   Section        0  fs_fat.o(.text.short_ent_hash)
    sn_chksum                                0x0800f8a1   Thumb Code    30  fs_fat.o(.text.sn_chksum)
    [Anonymous Symbol]                       0x0800f8a0   Section        0  fs_fat.o(.text.sn_chksum)
    svcRtxDelay                              0x0800f8c1   Thumb Code    80  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x0800f8c0   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x0800f911   Thumb Code    16  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0800f910   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x0800f921   Thumb Code    28  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x0800f920   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelGetTickFreq                  0x0800f93d   Thumb Code    28  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    [Anonymous Symbol]                       0x0800f93c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickFreq)
    svcRtxKernelInitialize                   0x0800f959   Thumb Code   772  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x0800f958   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x0800fc5d   Thumb Code   164  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0800fc5c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x0800fd01   Thumb Code   360  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x0800fd00   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x0800fe69   Thumb Code   656  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x0800fe68   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x080100f9   Thumb Code   348  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x080100f8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08010255   Thumb Code   374  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08010254   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x080103cd   Thumb Code    88  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x080103cc   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08010425   Thumb Code   322  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08010424   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08010569   Thumb Code   416  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08010568   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxSemaphoreAcquire                   0x08010709   Thumb Code   170  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    [Anonymous Symbol]                       0x08010708   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreAcquire)
    svcRtxSemaphoreDelete                    0x080107b5   Thumb Code   124  rtx_semaphore.o(.text.svcRtxSemaphoreDelete)
    [Anonymous Symbol]                       0x080107b4   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreDelete)
    svcRtxSemaphoreNew                       0x08010831   Thumb Code   374  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    [Anonymous Symbol]                       0x08010830   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreNew)
    svcRtxSemaphoreRelease                   0x080109a9   Thumb Code   162  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    [Anonymous Symbol]                       0x080109a8   Section        0  rtx_semaphore.o(.text.svcRtxSemaphoreRelease)
    svcRtxThreadExit                         0x08010a4d   Thumb Code   132  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08010a4c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x08010ad1   Thumb Code   214  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x08010ad0   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x08010ba9   Thumb Code   190  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x08010ba8   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadGetId                        0x08010c69   Thumb Code    22  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x08010c68   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x08010c81   Thumb Code  1130  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x08010c80   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadTerminate                    0x080110ed   Thumb Code   310  rtx_thread.o(.text.svcRtxThreadTerminate)
    [Anonymous Symbol]                       0x080110ec   Section        0  rtx_thread.o(.text.svcRtxThreadTerminate)
    svcRtxTimerDelete                        0x08011225   Thumb Code    88  rtx_timer.o(.text.svcRtxTimerDelete)
    [Anonymous Symbol]                       0x08011224   Section        0  rtx_timer.o(.text.svcRtxTimerDelete)
    svcRtxTimerNew                           0x0801127d   Thumb Code   400  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x0801127c   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x0801140d   Thumb Code   158  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x0801140c   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    unlink_clus                              0x080114ad   Thumb Code   132  fs_fat.o(.text.unlink_clus)
    [Anonymous Symbol]                       0x080114ac   Section        0  fs_fat.o(.text.unlink_clus)
    __arm_cp.25_0                            0x08011530   Number         4  fs_fat.o(.text.unlink_clus)
    usb0_DevCtrl                             0x08011535   Thumb Code    26  fs_config.o(.text.usb0_DevCtrl)
    [Anonymous Symbol]                       0x08011534   Section        0  fs_config.o(.text.usb0_DevCtrl)
    usb0_Init                                0x08011551   Thumb Code    18  fs_config.o(.text.usb0_Init)
    [Anonymous Symbol]                       0x08011550   Section        0  fs_config.o(.text.usb0_Init)
    usb0_RdInfo                              0x08011565   Thumb Code    18  fs_config.o(.text.usb0_RdInfo)
    [Anonymous Symbol]                       0x08011564   Section        0  fs_config.o(.text.usb0_RdInfo)
    usb0_RdSect                              0x08011579   Thumb Code    26  fs_config.o(.text.usb0_RdSect)
    [Anonymous Symbol]                       0x08011578   Section        0  fs_config.o(.text.usb0_RdSect)
    usb0_UnInit                              0x08011595   Thumb Code    18  fs_config.o(.text.usb0_UnInit)
    [Anonymous Symbol]                       0x08011594   Section        0  fs_config.o(.text.usb0_UnInit)
    usb0_WrSect                              0x080115a9   Thumb Code    26  fs_config.o(.text.usb0_WrSect)
    [Anonymous Symbol]                       0x080115a8   Section        0  fs_config.o(.text.usb0_WrSect)
    user_perthread_libspace_free             0x080115c5   Thumb Code    72  rtx_lib.o(.text.user_perthread_libspace_free)
    [Anonymous Symbol]                       0x080115c4   Section        0  rtx_lib.o(.text.user_perthread_libspace_free)
    write_cache                              0x0801160d   Thumb Code   162  fs_fat.o(.text.write_cache)
    [Anonymous Symbol]                       0x0801160c   Section        0  fs_fat.o(.text.write_cache)
    write_sector                             0x080116af   Thumb Code    50  fs_fat.o(.text.write_sector)
    [Anonymous Symbol]                       0x080116ae   Section        0  fs_fat.o(.text.write_sector)
    xPSR_InitVal                             0x080116e1   Thumb Code    18  rtx_thread.o(.text.xPSR_InitVal)
    [Anonymous Symbol]                       0x080116e0   Section        0  rtx_thread.o(.text.xPSR_InitVal)
    locale$$code                             0x080116f4   Section       44  lc_ctype_c.o(locale$$code)
    $v0                                      0x08011720   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08011720   Section       26  fpinit.o(x$fpl$fpinit)
    __tagsym$$used.4                         0x0801173c   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x080117ac   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x080117e4   Section        0  fs_fat.o(.rodata..Lswitch.table.fat_seek)
    ChIndex                                  0x08011800   Data          13  fs_fat.o(.rodata.ChIndex)
    [Anonymous Symbol]                       0x08011800   Section        0  fs_fat.o(.rodata.ChIndex)
    __tagsym$$used.0                         0x08011858   Number         0  eventrecorder.o(.rodata.EventRecorderInfo)
    fat_crc32.crc32_table                    0x08011888   Data        1024  fs_fat.o(.rodata.fat_crc32.crc32_table)
    [Anonymous Symbol]                       0x08011888   Section        0  fs_fat.o(.rodata.fat_crc32.crc32_table)
    fs_usb0_drv                              0x08011c94   Data          24  fs_config.o(.rodata.fs_usb0_drv)
    [Anonymous Symbol]                       0x08011c94   Section        0  fs_config.o(.rodata.fs_usb0_drv)
    fs_usb0_mtx_at                           0x08011cac   Data          16  fs_config.o(.rodata.fs_usb0_mtx_at)
    [Anonymous Symbol]                       0x08011cac   Section        0  fs_config.o(.rodata.fs_usb0_mtx_at)
    os_idle_thread_attr                      0x08011cc0   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x08011cc0   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x08011ce4   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x08011ce4   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x08011cfc   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x08011cfc   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x08011d20   Data           4  thread.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011d20   Section        0  thread.o(.rodata.str1.1)
    .L.str.2                                 0x08011d24   Data           2  thread.o(.rodata.str1.1)
    .L.str.1                                 0x08011d26   Data           9  thread.o(.rodata.str1.1)
    .L.str                                   0x08011d2f   Data          11  rtx_kernel.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011d2f   Section        0  rtx_kernel.o(.rodata.str1.1)
    .L.str                                   0x08011d3a   Data           7  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011d3a   Section        0  retarget_io.o(.rodata.str1.1)
    .L.str.2                                 0x08011d41   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str.1                                 0x08011d49   Data           8  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08011d51   Section        0  usbh_config_0.o(.rodata.str1.1)
    usbh_core_thread_attr                    0x08011da0   Data           4  usbh_config_0.o(.rodata.usbh_core_thread_attr)
    [Anonymous Symbol]                       0x08011da0   Section        0  usbh_config_0.o(.rodata.usbh_core_thread_attr)
    locale$$data                             0x08011dec   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x08011df0   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x08011df8   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x08011efc   Data           0  lc_ctype_c.o(locale$$data)
    .data                                    0x20000000   Section        4  streamlock.o(.data)
    .data                                    0x20000004   Section        4  stdio_streams.o(.data)
    .data                                    0x20000008   Section        4  stdio_streams.o(.data)
    .data                                    0x2000000c   Section        4  stdio_streams.o(.data)
    OTG_DFIFO                                0x20000010   Data          64  usbh_hs_stm32f4xx.o(.data.OTG_DFIFO)
    [Anonymous Symbol]                       0x20000010   Section        0  usbh_hs_stm32f4xx.o(.data.OTG_DFIFO)
    usbh_def_pipe_mutex_attr                 0x200000fc   Data          16  usbh_config_0.o(.data.usbh_def_pipe_mutex_attr)
    [Anonymous Symbol]                       0x200000fc   Section        0  usbh_config_0.o(.data.usbh_def_pipe_mutex_attr)
    usbh_driver_semaphore_attr               0x2000010c   Data          16  usbh_config_0.o(.data.usbh_driver_semaphore_attr)
    [Anonymous Symbol]                       0x2000010c   Section        0  usbh_config_0.o(.data.usbh_driver_semaphore_attr)
    .bss                                     0x20000140   Section       96  libspace.o(.bss)
    .bss                                     0x200001a0   Section       84  stdio_streams.o(.bss)
    .bss                                     0x200001f4   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000248   Section       84  stdio_streams.o(.bss)
    HAL_GetTick.ticks                        0x2000029c   Data           4  main.o(.bss.HAL_GetTick.ticks)
    [Anonymous Symbol]                       0x2000029c   Section        0  main.o(.bss.HAL_GetTick.ticks)
    SignalPipeEvent                          0x200002a0   Data           4  usbh_hs_stm32f4xx.o(.bss.SignalPipeEvent)
    [Anonymous Symbol]                       0x200002a0   Section        0  usbh_hs_stm32f4xx.o(.bss.SignalPipeEvent)
    SignalPortEvent                          0x200002a4   Data           4  usbh_hs_stm32f4xx.o(.bss.SignalPortEvent)
    [Anonymous Symbol]                       0x200002a4   Section        0  usbh_hs_stm32f4xx.o(.bss.SignalPortEvent)
    Thread.f                                 0x200002a8   Data           4  thread.o(.bss.Thread.f)
    [Anonymous Symbol]                       0x200002a8   Section        0  thread.o(.bss.Thread.f)
    Thread.result                            0x200002ac   Data           4  thread.o(.bss.Thread.result)
    [Anonymous Symbol]                       0x200002ac   Section        0  thread.o(.bss.Thread.result)
    USBH_MsToTick.max_ms                     0x200002b0   Data           4  usbh_config_0.o(.bss.USBH_MsToTick.max_ms)
    [Anonymous Symbol]                       0x200002b0   Section        0  usbh_config_0.o(.bss.USBH_MsToTick.max_ms)
    USBH_MsToTick.tick_freq_mul              0x200002b4   Data           4  usbh_config_0.o(.bss.USBH_MsToTick.tick_freq_mul)
    [Anonymous Symbol]                       0x200002b4   Section        0  usbh_config_0.o(.bss.USBH_MsToTick.tick_freq_mul)
    cfg_done                                 0x200002b8   Data           1  fs_mapi.o(.bss.cfg_done)
    [Anonymous Symbol]                       0x200002b8   Section        0  fs_mapi.o(.bss.cfg_done)
    exec1                                    0x200002bc   Data           4  timer.o(.bss.exec1)
    [Anonymous Symbol]                       0x200002bc   Section        0  timer.o(.bss.exec1)
    exec2                                    0x200002c0   Data           4  timer.o(.bss.exec2)
    [Anonymous Symbol]                       0x200002c0   Section        0  timer.o(.bss.exec2)
    fs_cdrive_id                             0x2000038c   Data           1  fs_common.o(.bss.fs_cdrive_id)
    [Anonymous Symbol]                       0x2000038c   Section        0  fs_common.o(.bss.fs_cdrive_id)
    fs_usb0_vol                              0x20000440   Data         132  fs_config.o(.bss.fs_usb0_vol)
    [Anonymous Symbol]                       0x20000440   Section        0  fs_config.o(.bss.fs_usb0_vol)
    hw_initialized                           0x20000820   Data           1  usbh_hs_stm32f4xx.o(.bss.hw_initialized)
    [Anonymous Symbol]                       0x20000820   Section        0  usbh_hs_stm32f4xx.o(.bss.hw_initialized)
    hw_powered                               0x20000821   Data           1  usbh_hs_stm32f4xx.o(.bss.hw_powered)
    [Anonymous Symbol]                       0x20000821   Section        0  usbh_hs_stm32f4xx.o(.bss.hw_powered)
    EventBuffer                              0x20000840   Data        1024  eventrecorder.o(.bss.noinit)
    [Anonymous Symbol]                       0x20000840   Section        0  eventrecorder.o(.bss.noinit)
    EventFilter                              0x20000c40   Data         128  eventrecorder.o(.bss.noinit)
    EventStatus                              0x20000cc0   Data          36  eventrecorder.o(.bss.noinit)
    os_isr_queue                             0x20000ce8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x20000ce8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000d28   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20008d28   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20008d28   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x20008d2c   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x20008d2c   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x20008d3c   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x20008f1c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x20008f1c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20008f50   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20008f50   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    fs_usb0_mtx_cb                           0x20008fa0   Data          28  fs_config.o(.bss.os.mutex.cb)
    [Anonymous Symbol]                       0x20008fa0   Section        0  fs_config.o(.bss.os.mutex.cb)
    usbh_def_pipe_mutex_cb_mem               0x20008fbc   Data          28  usbh_config_0.o(.bss.os.mutex.cb)
    [Anonymous Symbol]                       0x20008fbc   Section        0  usbh_config_0.o(.bss.os.mutex.cb)
    usbh_driver_semaphore_cb_mem             0x20008fd8   Data          16  usbh_config_0.o(.bss.os.semaphore.cb)
    [Anonymous Symbol]                       0x20008fd8   Section        0  usbh_config_0.o(.bss.os.semaphore.cb)
    os_idle_thread_cb                        0x20008fe8   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008fe8   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20009038   Data          80  rtx_lib.o(.bss.os.thread.cb)
    usbh0_core_thread_cb_mem                 0x20009088   Data          80  usbh_config_0.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20009088   Section        0  usbh_config_0.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200090d8   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200090d8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    usbh0_core_thread_stack_mem              0x200092d8   Data        1024  usbh_config_0.o(.bss.os.thread.stack)
    [Anonymous Symbol]                       0x200092d8   Section        0  usbh_config_0.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x200096d8   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x200096d8   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    usbh_debounce_timer_cb_mem               0x200098d8   Data          32  usbh_config_0.o(.bss.os.timer.cb)
    [Anonymous Symbol]                       0x200098d8   Section        0  usbh_config_0.o(.bss.os.timer.cb)
    os_kernel_is_active.os_kernel_active     0x200098f8   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x200098f8   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    pipe                                     0x200098fc   Data         512  usbh_hs_stm32f4xx.o(.bss.pipe)
    [Anonymous Symbol]                       0x200098fc   Section        0  usbh_hs_stm32f4xx.o(.bss.pipe)
    port_reset                               0x20009afc   Data           1  usbh_hs_stm32f4xx.o(.bss.port_reset)
    [Anonymous Symbol]                       0x20009afc   Section        0  usbh_hs_stm32f4xx.o(.bss.port_reset)
    usb0_cache                               0x20009b0c   Data        5120  fs_config.o(.bss.usb0_cache)
    [Anonymous Symbol]                       0x20009b0c   Section        0  fs_config.o(.bss.usb0_cache)
    Heap_Mem                                 0x2000b260   Data         512  startup_stm32f429xx.o(HEAP)
    HEAP                                     0x2000b260   Section      512  startup_stm32f429xx.o(HEAP)
    Stack_Mem                                0x2000b460   Data        1024  startup_stm32f429xx.o(STACK)
    STACK                                    0x2000b460   Section     1024  startup_stm32f429xx.o(STACK)
    __initial_sp                             0x2000b860   Data           0  startup_stm32f429xx.o(STACK)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __Vectors_Size                           0x000001ac   Number         0  startup_stm32f429xx.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f429xx.o(RESET)
    __Vectors_End                            0x080001ac   Data           0  startup_stm32f429xx.o(RESET)
    __main                                   0x080001ad   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080001b5   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080001b5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x080001bf   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000211   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x0800022d   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x08000231   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x0800024d   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800024f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x08000253   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x08000253   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x08000253   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_heap_1                     0x0800025b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_common                  0x0800025b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_rand_1                     0x0800025b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_user_alloc_1               0x0800025b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_lc_collate_1               0x08000261   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_2                 0x08000261   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000014)
    __rt_lib_init_atexit_1                   0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_fp_trap_1                  0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_ctype_1                 0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_signal_1                   0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_2                    0x0800026d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000026)
    __rt_lib_init_alloca_1                   0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_cpp_1                      0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_return                     0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_stdio_1                    0x08000271   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_shutdown                        0x08000273   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000275   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x08000275   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x08000279   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x08000279   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x08000279   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000279   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000279   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x0800027d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800027d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_entry                               0x0800027f   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800027f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800027f   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000285   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800028d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000291   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000291   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000299   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800029b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800029b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800029f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x080002a5   Thumb Code   208  irq_armv7m.o(.text)
    PendSV_Handler                           0x08000375   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x08000385   Thumb Code    16  irq_armv7m.o(.text)
    Reset_Handler                            0x080003a5   Thumb Code     8  startup_stm32f429xx.o(.text)
    ADC_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX0_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_RX1_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_SCE_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN1_TX_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX0_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_RX1_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_SCE_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    CAN2_TX_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DCMI_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream0_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream1_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream2_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream3_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream4_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream5_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream6_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA1_Stream7_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2D_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream0_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream1_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream2_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream3_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream4_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream5_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream6_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    DMA2_Stream7_IRQHandler                  0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    ETH_WKUP_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI15_10_IRQHandler                     0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI1_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI2_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI3_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI4_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    EXTI9_5_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    FLASH_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    FMC_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    FPU_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    HASH_RNG_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_ER_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C1_EV_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_ER_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C2_EV_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_ER_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    I2C3_EV_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_ER_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    LTDC_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_IRQHandler                        0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_IN_IRQHandler                 0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_EP1_OUT_IRQHandler                0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    OTG_HS_WKUP_IRQHandler                   0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    PVD_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    RCC_IRQHandler                           0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_Alarm_IRQHandler                     0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    RTC_WKUP_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SAI1_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SDIO_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI1_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI2_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI3_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI4_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI5_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    SPI6_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TAMP_STAMP_IRQHandler                    0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_BRK_TIM9_IRQHandler                 0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_CC_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_TRG_COM_TIM11_IRQHandler            0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM1_UP_TIM10_IRQHandler                 0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM2_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM3_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM4_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM5_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM6_DAC_IRQHandler                      0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM7_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_BRK_TIM12_IRQHandler                0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_CC_IRQHandler                       0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_TRG_COM_TIM14_IRQHandler            0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    TIM8_UP_TIM13_IRQHandler                 0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART4_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART5_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART7_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    UART8_IRQHandler                         0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART1_IRQHandler                        0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART2_IRQHandler                        0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART3_IRQHandler                        0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    USART6_IRQHandler                        0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    WWDG_IRQHandler                          0x080003bf   Thumb Code     0  startup_stm32f429xx.o(.text)
    __user_initial_stackheap                 0x080003c1   Thumb Code     0  startup_stm32f429xx.o(.text)
    __aeabi_errno_addr                       0x080003e5   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x080003e5   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x080003e5   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __aeabi_uldivmod                         0x080003e9   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x080003e9   Thumb Code   240  lludivv7m.o(.text)
    tolower                                  0x080004d9   Thumb Code    26  tolower.o(.text)
    _fclose$unlocked                         0x080004f3   Thumb Code     0  fclose.o(.text)
    _fclose_internal                         0x080004f3   Thumb Code    76  fclose.o(.text)
    fclose                                   0x08000541   Thumb Code    46  fclose_locked.o(.text)
    _do_fflush                               0x08000575   Thumb Code    74  fflush_locked.o(.text)
    $Super$$fflush                           0x080005bf   Thumb Code    60  fflush_locked.o(.text)
    freopen                                  0x080006b9   Thumb Code    42  fopen_locked.o(.text)
    fopen                                    0x080006e3   Thumb Code   100  fopen_locked.o(.text)
    strlen                                   0x08000751   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x0800078f   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800078f   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080007f5   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memclr                           0x08000819   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000819   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800081d   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x0800085d   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x0800085d   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x0800085d   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000861   Thumb Code    74  rt_memclr_w.o(.text)
    strcmp                                   0x080008b1   Thumb Code   124  strcmpv7em.o(.text)
    __use_two_region_memory                  0x0800092d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x0800092f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000931   Thumb Code     2  heapauxi.o(.text)
    __user_libspace                          0x08000935   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000935   Thumb Code     0  libspace.o(.text)
    __rt_ctype_table                         0x0800093d   Thumb Code    16  rt_ctype_table.o(.text)
    malloc_internal$concurrent               0x0800095d   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x080009df   Thumb Code    20  h1_alloc_threads.o(.text)
    free_internal$concurrent                 0x080009f3   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x08000a55   Thumb Code    20  h1_free_threads.o(.text)
    _fseek                                   0x08000a69   Thumb Code   242  fseek.o(.text)
    fseek                                    0x08000a69   Thumb Code     0  fseek.o(.text)
    _seterr                                  0x08000b61   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x08000b75   Thumb Code   108  stdio.o(.text)
    _fflush                                  0x08000be1   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x08000c27   Thumb Code    60  stdio.o(.text)
    __aeabi_memcpy4                          0x08000c69   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000c69   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000c69   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000cb1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_heap_descriptor                     0x08000ccd   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __rt_locale                              0x08000cd7   Thumb Code    10  rt_locale_twolibspace.o(.text)
    __use_no_heap                            0x08000ce1   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x08000ce3   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000ce5   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000ce7   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000ce9   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000d0b   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x08000d11   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x08000d6f   Thumb Code    14  h1_init_threads.o(.text)
    __Heap_DescSize                          0x08000d7d   Thumb Code     4  h1_init_threads.o(.text)
    _readbuf                                 0x08000d81   Thumb Code    54  filbuf.o(.text)
    _seteof                                  0x08000db7   Thumb Code    40  filbuf.o(.text)
    __filbuf                                 0x08000ddf   Thumb Code   492  filbuf.o(.text)
    __filbuf_byte                            0x08000ddf   Thumb Code     0  filbuf.o(.text)
    __filbuf_wide                            0x08000ddf   Thumb Code     0  filbuf.o(.text)
    _ftell_internal                          0x08000fcb   Thumb Code    66  ftell.o(.text)
    ftell                                    0x08000fcb   Thumb Code     0  ftell.o(.text)
    _initio                                  0x0800100d   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x080010fd   Thumb Code   168  initio_locked.o(.text)
    __user_setup_stackheap                   0x080011d5   Thumb Code    74  sys_stackheap_outer.o(.text)
    _maybe_terminate_alloc                   0x0800121f   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_ProvideMemory                     0x0800122d   Thumb Code    68  h1_extend_threads.o(.text)
    setvbuf                                  0x08001271   Thumb Code   104  setvbuf_locked.o(.text)
    fread                                    0x080012d9   Thumb Code   298  freadfast_locked.o(.text)
    _flushlinebuffered                       0x08001405   Thumb Code    98  flushlinebuffered_locked.o(.text)
    exit                                     0x08001471   Thumb Code    18  exit.o(.text)
    __rt_SIGRTRED                            0x08001483   Thumb Code    14  defsig_rtred_outer.o(.text)
    __rt_SIGRTMEM                            0x08001491   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __I$use$semihosting                      0x0800149f   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x0800149f   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080014a1   Thumb Code     0  indicate_semi.o(.text)
    _terminate_alloc                         0x080014a1   Thumb Code    16  term_alloc.o(.text)
    __sig_exit                               0x080014b1   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTRED_inner                      0x080014bd   Thumb Code    14  defsig_rtred_inner.o(.text)
    __rt_SIGRTMEM_inner                      0x080014f1   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _sys_exit                                0x08001541   Thumb Code     8  sys_exit.o(.text)
    __Heap_Finalize                          0x0800154d   Thumb Code    10  h1_final_threads.o(.text)
    __default_signal_display                 0x08001557   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x08001589   Thumb Code    14  sys_wrch.o(.text)
    _fp_init                                 0x08001599   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    BusFault_Handler                         0x080015b1   Thumb Code     4  stm32f4xx_it.o(.text.BusFault_Handler)
    DebugMon_Handler                         0x0800165d   Thumb Code     2  stm32f4xx_it.o(.text.DebugMon_Handler)
    EXTI0_IRQHandler                         0x08001661   Thumb Code    10  stm32f4xx_it.o(.text.EXTI0_IRQHandler)
    Error_Handler                            0x0800166d   Thumb Code     6  main.o(.text.Error_Handler)
    EventRecord2                             0x0800174d   Thumb Code    90  eventrecorder.o(.text.EventRecord2)
    EventRecord4                             0x080017a9   Thumb Code   150  eventrecorder.o(.text.EventRecord4)
    EventRecorderDisable                     0x08001931   Thumb Code   146  eventrecorder.o(.text.EventRecorderDisable)
    EventRecorderEnable                      0x080019c5   Thumb Code   146  eventrecorder.o(.text.EventRecorderEnable)
    EventRecorderInitialize                  0x08001a59   Thumb Code   440  eventrecorder.o(.text.EventRecorderInitialize)
    EventRecorderStart                       0x08001c11   Thumb Code    74  eventrecorder.o(.text.EventRecorderStart)
    EventRecorderTimerGetCount               0x08001c5d   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetCount)
    EventRecorderTimerGetFreq                0x08001c69   Thumb Code    12  eventrecorder.o(.text.EventRecorderTimerGetFreq)
    EventRecorderTimerSetup                  0x08001c75   Thumb Code    36  eventrecorder.o(.text.EventRecorderTimerSetup)
    EvrRtxDelay                              0x08001c99   Thumb Code    26  rtx_evr.o(.text.EvrRtxDelay)
    EvrRtxDelayCompleted                     0x08001cb5   Thumb Code    26  rtx_evr.o(.text.EvrRtxDelayCompleted)
    EvrRtxDelayError                         0x08001cd1   Thumb Code    22  rtx_evr.o(.text.EvrRtxDelayError)
    EvrRtxDelayStarted                       0x08001ce9   Thumb Code    26  rtx_evr.o(.text.EvrRtxDelayStarted)
    EvrRtxEventFlagsWaitTimeout              0x08001d05   Thumb Code    26  rtx_evr.o(.text.EvrRtxEventFlagsWaitTimeout)
    EvrRtxKernelError                        0x08001d21   Thumb Code    22  rtx_evr.o(.text.EvrRtxKernelError)
    EvrRtxKernelErrorNotify                  0x08001d39   Thumb Code    24  rtx_evr.o(.text.EvrRtxKernelErrorNotify)
    EvrRtxKernelGetTickCount                 0x08001d51   Thumb Code    26  rtx_evr.o(.text.EvrRtxKernelGetTickCount)
    EvrRtxKernelGetTickFreq                  0x08001d6d   Thumb Code    26  rtx_evr.o(.text.EvrRtxKernelGetTickFreq)
    EvrRtxKernelInitialize                   0x08001d89   Thumb Code    20  rtx_evr.o(.text.EvrRtxKernelInitialize)
    EvrRtxKernelInitialized                  0x08001d9d   Thumb Code    20  rtx_evr.o(.text.EvrRtxKernelInitialized)
    EvrRtxKernelStart                        0x08001db1   Thumb Code    20  rtx_evr.o(.text.EvrRtxKernelStart)
    EvrRtxKernelStarted                      0x08001dc5   Thumb Code    20  rtx_evr.o(.text.EvrRtxKernelStarted)
    EvrRtxMemoryAlloc                        0x08001dd9   Thumb Code    42  rtx_evr.o(.text.EvrRtxMemoryAlloc)
    EvrRtxMemoryBlockAlloc                   0x08001e05   Thumb Code    28  rtx_evr.o(.text.EvrRtxMemoryBlockAlloc)
    EvrRtxMemoryBlockFree                    0x08001e21   Thumb Code    40  rtx_evr.o(.text.EvrRtxMemoryBlockFree)
    EvrRtxMemoryBlockInit                    0x08001e49   Thumb Code    42  rtx_evr.o(.text.EvrRtxMemoryBlockInit)
    EvrRtxMemoryFree                         0x08001e75   Thumb Code    40  rtx_evr.o(.text.EvrRtxMemoryFree)
    EvrRtxMemoryInit                         0x08001e9d   Thumb Code    36  rtx_evr.o(.text.EvrRtxMemoryInit)
    EvrRtxMemoryPoolAllocTimeout             0x08001ec1   Thumb Code    26  rtx_evr.o(.text.EvrRtxMemoryPoolAllocTimeout)
    EvrRtxMessageQueueCreated                0x08001edd   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueCreated)
    EvrRtxMessageQueueError                  0x08001ef9   Thumb Code    24  rtx_evr.o(.text.EvrRtxMessageQueueError)
    EvrRtxMessageQueueGet                    0x08001f11   Thumb Code    42  rtx_evr.o(.text.EvrRtxMessageQueueGet)
    EvrRtxMessageQueueGetPending             0x08001f3d   Thumb Code    40  rtx_evr.o(.text.EvrRtxMessageQueueGetPending)
    EvrRtxMessageQueueGetTimeout             0x08001f65   Thumb Code    26  rtx_evr.o(.text.EvrRtxMessageQueueGetTimeout)
    EvrRtxMessageQueueInsertPending          0x08001f81   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueInsertPending)
    EvrRtxMessageQueueInserted               0x08001f9d   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueInserted)
    EvrRtxMessageQueueNotInserted            0x08001fb9   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueNotInserted)
    EvrRtxMessageQueueNotRetrieved           0x08001fd5   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueNotRetrieved)
    EvrRtxMessageQueuePut                    0x08001ff1   Thumb Code    46  rtx_evr.o(.text.EvrRtxMessageQueuePut)
    EvrRtxMessageQueuePutPending             0x08002021   Thumb Code    40  rtx_evr.o(.text.EvrRtxMessageQueuePutPending)
    EvrRtxMessageQueuePutTimeout             0x08002049   Thumb Code    26  rtx_evr.o(.text.EvrRtxMessageQueuePutTimeout)
    EvrRtxMessageQueueRetrieved              0x08002065   Thumb Code    28  rtx_evr.o(.text.EvrRtxMessageQueueRetrieved)
    EvrRtxMutexAcquire                       0x08002081   Thumb Code    28  rtx_evr.o(.text.EvrRtxMutexAcquire)
    EvrRtxMutexAcquirePending                0x0800209d   Thumb Code    28  rtx_evr.o(.text.EvrRtxMutexAcquirePending)
    EvrRtxMutexAcquireTimeout                0x080020b9   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexAcquireTimeout)
    EvrRtxMutexAcquired                      0x080020d5   Thumb Code    28  rtx_evr.o(.text.EvrRtxMutexAcquired)
    EvrRtxMutexCreated                       0x080020f1   Thumb Code    28  rtx_evr.o(.text.EvrRtxMutexCreated)
    EvrRtxMutexDelete                        0x0800210d   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexDelete)
    EvrRtxMutexDestroyed                     0x08002129   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexDestroyed)
    EvrRtxMutexError                         0x08002145   Thumb Code    24  rtx_evr.o(.text.EvrRtxMutexError)
    EvrRtxMutexNew                           0x0800215d   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexNew)
    EvrRtxMutexNotAcquired                   0x08002179   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexNotAcquired)
    EvrRtxMutexRelease                       0x08002195   Thumb Code    26  rtx_evr.o(.text.EvrRtxMutexRelease)
    EvrRtxMutexReleased                      0x080021b1   Thumb Code    28  rtx_evr.o(.text.EvrRtxMutexReleased)
    EvrRtxSemaphoreAcquire                   0x080021cd   Thumb Code    28  rtx_evr.o(.text.EvrRtxSemaphoreAcquire)
    EvrRtxSemaphoreAcquirePending            0x080021e9   Thumb Code    28  rtx_evr.o(.text.EvrRtxSemaphoreAcquirePending)
    EvrRtxSemaphoreAcquireTimeout            0x08002205   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreAcquireTimeout)
    EvrRtxSemaphoreAcquired                  0x08002221   Thumb Code    28  rtx_evr.o(.text.EvrRtxSemaphoreAcquired)
    EvrRtxSemaphoreCreated                   0x0800223d   Thumb Code    28  rtx_evr.o(.text.EvrRtxSemaphoreCreated)
    EvrRtxSemaphoreDelete                    0x08002259   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreDelete)
    EvrRtxSemaphoreDestroyed                 0x08002275   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreDestroyed)
    EvrRtxSemaphoreError                     0x08002291   Thumb Code    24  rtx_evr.o(.text.EvrRtxSemaphoreError)
    EvrRtxSemaphoreNew                       0x080022a9   Thumb Code    40  rtx_evr.o(.text.EvrRtxSemaphoreNew)
    EvrRtxSemaphoreNotAcquired               0x080022d1   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreNotAcquired)
    EvrRtxSemaphoreRelease                   0x080022ed   Thumb Code    26  rtx_evr.o(.text.EvrRtxSemaphoreRelease)
    EvrRtxSemaphoreReleased                  0x08002309   Thumb Code    28  rtx_evr.o(.text.EvrRtxSemaphoreReleased)
    EvrRtxThreadBlocked                      0x08002325   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadBlocked)
    EvrRtxThreadCreated                      0x08002341   Thumb Code    56  rtx_evr.o(.text.EvrRtxThreadCreated)
    EvrRtxThreadDestroyed                    0x08002379   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadDestroyed)
    EvrRtxThreadError                        0x08002395   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadError)
    EvrRtxThreadExit                         0x080023ad   Thumb Code    20  rtx_evr.o(.text.EvrRtxThreadExit)
    EvrRtxThreadFlagsError                   0x080023c1   Thumb Code    24  rtx_evr.o(.text.EvrRtxThreadFlagsError)
    EvrRtxThreadFlagsSet                     0x080023d9   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadFlagsSet)
    EvrRtxThreadFlagsSetDone                 0x080023f5   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadFlagsSetDone)
    EvrRtxThreadFlagsWait                    0x08002411   Thumb Code    40  rtx_evr.o(.text.EvrRtxThreadFlagsWait)
    EvrRtxThreadFlagsWaitCompleted           0x08002439   Thumb Code    42  rtx_evr.o(.text.EvrRtxThreadFlagsWaitCompleted)
    EvrRtxThreadFlagsWaitNotCompleted        0x08002465   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadFlagsWaitNotCompleted)
    EvrRtxThreadFlagsWaitPending             0x08002481   Thumb Code    40  rtx_evr.o(.text.EvrRtxThreadFlagsWaitPending)
    EvrRtxThreadFlagsWaitTimeout             0x080024a9   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadFlagsWaitTimeout)
    EvrRtxThreadGetId                        0x080024c5   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadGetId)
    EvrRtxThreadJoined                       0x080024e1   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadJoined)
    EvrRtxThreadNew                          0x080024fd   Thumb Code    40  rtx_evr.o(.text.EvrRtxThreadNew)
    EvrRtxThreadPreempted                    0x08002525   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadPreempted)
    EvrRtxThreadSwitched                     0x08002541   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadSwitched)
    EvrRtxThreadTerminate                    0x0800255d   Thumb Code    26  rtx_evr.o(.text.EvrRtxThreadTerminate)
    EvrRtxThreadUnblocked                    0x08002579   Thumb Code    28  rtx_evr.o(.text.EvrRtxThreadUnblocked)
    EvrRtxTimerCallback                      0x08002595   Thumb Code    28  rtx_evr.o(.text.EvrRtxTimerCallback)
    EvrRtxTimerCreated                       0x080025b1   Thumb Code    28  rtx_evr.o(.text.EvrRtxTimerCreated)
    EvrRtxTimerDelete                        0x080025cd   Thumb Code    26  rtx_evr.o(.text.EvrRtxTimerDelete)
    EvrRtxTimerDestroyed                     0x080025e9   Thumb Code    26  rtx_evr.o(.text.EvrRtxTimerDestroyed)
    EvrRtxTimerError                         0x08002605   Thumb Code    24  rtx_evr.o(.text.EvrRtxTimerError)
    EvrRtxTimerNew                           0x0800261d   Thumb Code    46  rtx_evr.o(.text.EvrRtxTimerNew)
    EvrRtxTimerStart                         0x0800264d   Thumb Code    28  rtx_evr.o(.text.EvrRtxTimerStart)
    EvrRtxTimerStarted                       0x08002669   Thumb Code    26  rtx_evr.o(.text.EvrRtxTimerStarted)
    FS_USBH_MSC_DeviceCtrl                   0x08002685   Thumb Code    72  usbh_lib_msc.o(.text.FS_USBH_MSC_DeviceCtrl)
    FS_USBH_MSC_Initialize                   0x080026cd   Thumb Code    60  usbh_lib_msc.o(.text.FS_USBH_MSC_Initialize)
    FS_USBH_MSC_ReadInfo                     0x0800270d   Thumb Code    46  usbh_lib_msc.o(.text.FS_USBH_MSC_ReadInfo)
    FS_USBH_MSC_ReadSectors                  0x0800273b   Thumb Code    40  usbh_lib_msc.o(.text.FS_USBH_MSC_ReadSectors)
    FS_USBH_MSC_Uninitialize                 0x08002763   Thumb Code    44  usbh_lib_msc.o(.text.FS_USBH_MSC_Uninitialize)
    FS_USBH_MSC_WriteSectors                 0x0800278f   Thumb Code    40  usbh_lib_msc.o(.text.FS_USBH_MSC_WriteSectors)
    HAL_Delay                                0x080027e1   Thumb Code    66  stm32f4xx_hal.o(.text.HAL_Delay)
    HAL_GPIO_DeInit                          0x08002825   Thumb Code   604  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_DeInit)
    HAL_GPIO_EXTI_Callback                   0x08002a81   Thumb Code    40  main.o(.text.HAL_GPIO_EXTI_Callback)
    HAL_GPIO_EXTI_IRQHandler                 0x08002aa9   Thumb Code    56  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_EXTI_IRQHandler)
    HAL_GPIO_Init                            0x08002ae1   Thumb Code  1006  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_Init)
    HAL_GPIO_TogglePin                       0x08002ed1   Thumb Code    38  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_TogglePin)
    HAL_GPIO_WritePin                        0x08002ef9   Thumb Code    46  stm32f4xx_hal_gpio.o(.text.HAL_GPIO_WritePin)
    HAL_GetTick                              0x08002f29   Thumb Code   102  main.o(.text.HAL_GetTick)
    HAL_HCD_Init                             0x08002f91   Thumb Code   328  stm32f4xx_hal_hcd.o(.text.HAL_HCD_Init)
    HAL_HCD_MspDeInit                        0x080030d9   Thumb Code    78  stm32f4xx_hal_msp.o(.text.HAL_HCD_MspDeInit)
    HAL_HCD_MspInit                          0x08003129   Thumb Code   200  stm32f4xx_hal_msp.o(.text.HAL_HCD_MspInit)
    HAL_Init                                 0x080031f1   Thumb Code    54  stm32f4xx_hal.o(.text.HAL_Init)
    HAL_InitTick                             0x08003229   Thumb Code    10  main.o(.text.HAL_InitTick)
    HAL_MspInit                              0x08003235   Thumb Code    74  stm32f4xx_hal_msp.o(.text.HAL_MspInit)
    HAL_NVIC_DisableIRQ                      0x08003281   Thumb Code    20  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_DisableIRQ)
    HAL_NVIC_EnableIRQ                       0x08003295   Thumb Code    20  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_EnableIRQ)
    HAL_NVIC_SetPriority                     0x080032a9   Thumb Code    50  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriority)
    HAL_NVIC_SetPriorityGrouping             0x080032dd   Thumb Code    16  stm32f4xx_hal_cortex.o(.text.HAL_NVIC_SetPriorityGrouping)
    HAL_RCC_ClockConfig                      0x080032ed   Thumb Code   610  stm32f4xx_hal_rcc.o(.text.HAL_RCC_ClockConfig)
    HAL_RCC_GetSysClockFreq                  0x08003551   Thumb Code   230  stm32f4xx_hal_rcc.o(.text.HAL_RCC_GetSysClockFreq)
    HAL_RCC_OscConfig                        0x08003639   Thumb Code  1726  stm32f4xx_hal_rcc.o(.text.HAL_RCC_OscConfig)
    HAL_SPI_Init                             0x08003cf9   Thumb Code   258  stm32f4xx_hal_spi.o(.text.HAL_SPI_Init)
    HAL_SPI_MspInit                          0x08003dfd   Thumb Code   146  stm32f4xx_hal_msp.o(.text.HAL_SPI_MspInit)
    HardFault_Handler                        0x08003e91   Thumb Code     4  stm32f4xx_it.o(.text.HardFault_Handler)
    Init_Thread                              0x08003ebd   Thumb Code    58  thread.o(.text.Init_Thread)
    Init_Timers                              0x08003ef9   Thumb Code   178  timer.o(.text.Init_Timers)
    MemManage_Handler                        0x08004501   Thumb Code     4  stm32f4xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x08004649   Thumb Code     4  stm32f4xx_it.o(.text.NMI_Handler)
    OS_Tick_AcknowledgeIRQ                   0x080046b9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x080046c5   Thumb Code    60  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x08004701   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x08004709   Thumb Code   126  os_systick.o(.text.OS_Tick_Setup)
    OTG_HS_IRQHandler                        0x08004789   Thumb Code    34  otg_hs_stm32f4xx.o(.text.OTG_HS_IRQHandler)
    OTG_HS_PinVbusOnOff                      0x080047ad   Thumb Code    54  otg_hs_stm32f4xx.o(.text.OTG_HS_PinVbusOnOff)
    SystemClock_Config                       0x08004bbd   Thumb Code   190  main.o(.text.SystemClock_Config)
    SystemInit                               0x08004c7d   Thumb Code    18  system_stm32f4xx.o(.text.SystemInit)
    Thread                                   0x08004c91   Thumb Code   132  thread.o(.text.Thread)
    USBH0_SignalPipeEvent                    0x08004ee1   Thumb Code    22  usbh_config_0.o(.text.USBH0_SignalPipeEvent)
    USBH0_SignalPortEvent                    0x08004ef9   Thumb Code    26  usbh_config_0.o(.text.USBH0_SignalPortEvent)
    USBH_CDC_Configure                       0x08004f15   Thumb Code    16  usbh_config_0.o(.text.USBH_CDC_Configure)
    USBH_CDC_Initialize_Lib                  0x08004f25   Thumb Code    12  usbh_config_0.o(.text.USBH_CDC_Initialize_Lib)
    USBH_CDC_Unconfigure                     0x08004f31   Thumb Code    12  usbh_config_0.o(.text.USBH_CDC_Unconfigure)
    USBH_CDC_Uninitialize_Lib                0x08004f3d   Thumb Code    12  usbh_config_0.o(.text.USBH_CDC_Uninitialize_Lib)
    USBH_ConnectDebounce                     0x08005089   Thumb Code   300  usbh_lib_core.o(.text.USBH_ConnectDebounce)
    USBH_ControlTransfer                     0x080051c5   Thumb Code   680  usbh_lib_core.o(.text.USBH_ControlTransfer)
    USBH_Core_Thread                         0x08005481   Thumb Code   580  usbh_lib_core.o(.text.USBH_Core_Thread)
    USBH_CustomClass_Configure               0x080056d5   Thumb Code    16  usbh_config_0.o(.text.USBH_CustomClass_Configure)
    USBH_CustomClass_Initialize              0x080056e5   Thumb Code    12  usbh_config_0.o(.text.USBH_CustomClass_Initialize)
    USBH_CustomClass_Unconfigure             0x080056f1   Thumb Code    12  usbh_config_0.o(.text.USBH_CustomClass_Unconfigure)
    USBH_CustomClass_Uninitialize            0x080056fd   Thumb Code    12  usbh_config_0.o(.text.USBH_CustomClass_Uninitialize)
    USBH_Delay                               0x08005709   Thumb Code    20  usbh_config_0.o(.text.USBH_Delay)
    USBH_DeviceRequest_ClearFeature          0x0800571d   Thumb Code    80  usbh_lib_core.o(.text.USBH_DeviceRequest_ClearFeature)
    USBH_DeviceRequest_GetDescriptor         0x0800576d   Thumb Code   100  usbh_lib_core.o(.text.USBH_DeviceRequest_GetDescriptor)
    USBH_DeviceRequest_SetAddress            0x080057d1   Thumb Code    80  usbh_lib_core.o(.text.USBH_DeviceRequest_SetAddress)
    USBH_DeviceRequest_SetConfiguration      0x08005821   Thumb Code    88  usbh_lib_core.o(.text.USBH_DeviceRequest_SetConfiguration)
    USBH_DriverGetCapabilities               0x0800587d   Thumb Code    12  usbh_lib_drv.o(.text.USBH_DriverGetCapabilities)
    USBH_DriverGetVersion                    0x08005889   Thumb Code    12  usbh_lib_drv.o(.text.USBH_DriverGetVersion)
    USBH_DriverInitialize                    0x08005895   Thumb Code    84  usbh_lib_drv.o(.text.USBH_DriverInitialize)
    USBH_DriverPipeCreate                    0x080058e9   Thumb Code   100  usbh_lib_drv.o(.text.USBH_DriverPipeCreate)
    USBH_DriverPipeDelete                    0x0800594d   Thumb Code    84  usbh_lib_drv.o(.text.USBH_DriverPipeDelete)
    USBH_DriverPipeModify                    0x080059a1   Thumb Code   112  usbh_lib_drv.o(.text.USBH_DriverPipeModify)
    USBH_DriverPipeTransfer                  0x08005a11   Thumb Code   112  usbh_lib_drv.o(.text.USBH_DriverPipeTransfer)
    USBH_DriverPipeTransferAbort             0x08005a81   Thumb Code    72  usbh_lib_drv.o(.text.USBH_DriverPipeTransferAbort)
    USBH_DriverPipeTransferGetResult         0x08005ac9   Thumb Code    56  usbh_lib_drv.o(.text.USBH_DriverPipeTransferGetResult)
    USBH_DriverPortGetState                  0x08005b01   Thumb Code    44  usbh_lib_drv.o(.text.USBH_DriverPortGetState)
    USBH_DriverPortReset                     0x08005b2d   Thumb Code    88  usbh_lib_drv.o(.text.USBH_DriverPortReset)
    USBH_DriverPortResume                    0x08005b89   Thumb Code    72  usbh_lib_drv.o(.text.USBH_DriverPortResume)
    USBH_DriverPortSuspend                   0x08005bd1   Thumb Code    72  usbh_lib_drv.o(.text.USBH_DriverPortSuspend)
    USBH_DriverPortVbusOnOff                 0x08005c1d   Thumb Code    84  usbh_lib_drv.o(.text.USBH_DriverPortVbusOnOff)
    USBH_DriverPowerControl                  0x08005c75   Thumb Code    72  usbh_lib_drv.o(.text.USBH_DriverPowerControl)
    USBH_GetFree_PIPE                        0x08006491   Thumb Code    32  usbh_lib_core.o(.text.USBH_GetFree_PIPE)
    USBH_Get_PipeCallback_of_Pipe            0x080064c5   Thumb Code    60  usbh_lib_core.o(.text.USBH_Get_PipeCallback_of_Pipe)
    USBH_Get_Thread_ID_of_Pipe               0x08006501   Thumb Code    60  usbh_lib_core.o(.text.USBH_Get_Thread_ID_of_Pipe)
    USBH_HID_Configure                       0x08006545   Thumb Code    16  usbh_config_0.o(.text.USBH_HID_Configure)
    USBH_HID_Initialize_Lib                  0x08006555   Thumb Code    12  usbh_config_0.o(.text.USBH_HID_Initialize_Lib)
    USBH_HID_Unconfigure                     0x08006561   Thumb Code    12  usbh_config_0.o(.text.USBH_HID_Unconfigure)
    USBH_HID_Uninitialize_Lib                0x0800656d   Thumb Code    12  usbh_config_0.o(.text.USBH_HID_Uninitialize_Lib)
    USBH_HS_IRQ                              0x08006579   Thumb Code  1836  usbh_hs_stm32f4xx.o(.text.USBH_HS_IRQ)
    USBH_Initialize                          0x08007041   Thumb Code   516  usbh_lib_core.o(.text.USBH_Initialize)
    USBH_MSC_Configure                       0x08007275   Thumb Code   260  usbh_lib_msc.o(.text.USBH_MSC_Configure)
    USBH_MSC_DriveMount                      0x0800737d   Thumb Code   112  usbh_msc.o(.text.USBH_MSC_DriveMount)
    USBH_MSC_GetDevice                       0x080073ed   Thumb Code    44  usbh_lib_msc.o(.text.USBH_MSC_GetDevice)
    USBH_MSC_GetStatus                       0x0800741d   Thumb Code    40  usbh_lib_msc.o(.text.USBH_MSC_GetStatus)
    USBH_MSC_Initialize                      0x08007449   Thumb Code     2  usbh_lib_msc.o(.text.USBH_MSC_Initialize)
    USBH_MSC_Initialize_Lib                  0x0800744d   Thumb Code  1084  usbh_lib_msc.o(.text.USBH_MSC_Initialize_Lib)
    USBH_MSC_Read                            0x0800788d   Thumb Code    90  usbh_lib_msc.o(.text.USBH_MSC_Read)
    USBH_MSC_ReadCapacity                    0x080078e9   Thumb Code    44  usbh_lib_msc.o(.text.USBH_MSC_ReadCapacity)
    USBH_MSC_Unconfigure                     0x08007c41   Thumb Code   144  usbh_lib_msc.o(.text.USBH_MSC_Unconfigure)
    USBH_MSC_Uninitialize                    0x08007cd5   Thumb Code     2  usbh_lib_msc.o(.text.USBH_MSC_Uninitialize)
    USBH_MSC_Uninitialize_Lib                0x08007cd7   Thumb Code    10  usbh_lib_msc.o(.text.USBH_MSC_Uninitialize_Lib)
    USBH_MSC_Write                           0x08007ce1   Thumb Code   416  usbh_lib_msc.o(.text.USBH_MSC_Write)
    USBH_MemoryAllocate                      0x08007e89   Thumb Code    42  usbh_lib_core.o(.text.USBH_MemoryAllocate)
    USBH_MemoryAllocateLib                   0x08007eb5   Thumb Code    60  usbh_lib_mem.o(.text.USBH_MemoryAllocateLib)
    USBH_MemoryFree                          0x08007ef1   Thumb Code    40  usbh_lib_core.o(.text.USBH_MemoryFree)
    USBH_MemoryFreeLib                       0x08007f19   Thumb Code    60  usbh_lib_mem.o(.text.USBH_MemoryFreeLib)
    USBH_MemoryGetPoolSize                   0x08007f55   Thumb Code    12  usbh_lib_mem.o(.text.USBH_MemoryGetPoolSize)
    USBH_MemoryInitialize                    0x08007f61   Thumb Code    30  usbh_lib_core.o(.text.USBH_MemoryInitialize)
    USBH_MemoryInitializeLib                 0x08007f81   Thumb Code    52  usbh_lib_mem.o(.text.USBH_MemoryInitializeLib)
    USBH_MemoryIsInPool                      0x08007fb5   Thumb Code    36  usbh_lib_mem.o(.text.USBH_MemoryIsInPool)
    USBH_MutexAcquire                        0x0800808d   Thumb Code    50  usbh_config_0.o(.text.USBH_MutexAcquire)
    USBH_MutexCreate                         0x080080c1   Thumb Code    86  usbh_config_0.o(.text.USBH_MutexCreate)
    USBH_MutexDelete                         0x08008119   Thumb Code    36  usbh_config_0.o(.text.USBH_MutexDelete)
    USBH_MutexRelease                        0x0800813d   Thumb Code    36  usbh_config_0.o(.text.USBH_MutexRelease)
    USBH_Notify                              0x08008161   Thumb Code     2  usbh_lib_core.o(.text.USBH_Notify)
    USBH_PipeAbort                           0x08008165   Thumb Code   112  usbh_lib_core.o(.text.USBH_PipeAbort)
    USBH_PipeCreate                          0x0800835d   Thumb Code   100  usbh_lib_core.o(.text.USBH_PipeCreate)
    USBH_PipeDelete                          0x08008449   Thumb Code    52  usbh_lib_core.o(.text.USBH_PipeDelete)
    USBH_PipeReceive                         0x08008615   Thumb Code   760  usbh_lib_core.o(.text.USBH_PipeReceive)
    USBH_PipeSend                            0x08008989   Thumb Code   752  usbh_lib_core.o(.text.USBH_PipeSend)
    USBH_SemaphoreAcquire                    0x080094c9   Thumb Code    50  usbh_config_0.o(.text.USBH_SemaphoreAcquire)
    USBH_SemaphoreCreate                     0x080094fd   Thumb Code    86  usbh_config_0.o(.text.USBH_SemaphoreCreate)
    USBH_SemaphoreDelete                     0x08009555   Thumb Code    36  usbh_config_0.o(.text.USBH_SemaphoreDelete)
    USBH_SemaphoreRelease                    0x08009579   Thumb Code    36  usbh_config_0.o(.text.USBH_SemaphoreRelease)
    USBH_SignalPipeEvent                     0x0800959d   Thumb Code    62  usbh_lib_drv.o(.text.USBH_SignalPipeEvent)
    USBH_SignalPortEvent                     0x080095dd   Thumb Code    92  usbh_lib_drv.o(.text.USBH_SignalPortEvent)
    USBH_ThreadCreate                        0x08009641   Thumb Code   112  usbh_config_0.o(.text.USBH_ThreadCreate)
    USBH_ThreadFlagsSet                      0x080096b1   Thumb Code    38  usbh_config_0.o(.text.USBH_ThreadFlagsSet)
    USBH_ThreadFlagsWait                     0x080096d9   Thumb Code   102  usbh_config_0.o(.text.USBH_ThreadFlagsWait)
    USBH_ThreadGetHandle                     0x08009741   Thumb Code     8  usbh_config_0.o(.text.USBH_ThreadGetHandle)
    USBH_ThreadTerminate                     0x08009749   Thumb Code    36  usbh_config_0.o(.text.USBH_ThreadTerminate)
    USBH_TimerCreate                         0x0800976d   Thumb Code    84  usbh_config_0.o(.text.USBH_TimerCreate)
    USBH_TimerDelete                         0x080097c1   Thumb Code    36  usbh_config_0.o(.text.USBH_TimerDelete)
    USBH_TimerStart                          0x080097e5   Thumb Code    50  usbh_config_0.o(.text.USBH_TimerStart)
    USB_CoreInit                             0x08009979   Thumb Code   252  stm32f4xx_ll_usb.o(.text.USB_CoreInit)
    USB_DisableGlobalInt                     0x08009af9   Thumb Code    20  stm32f4xx_ll_usb.o(.text.USB_DisableGlobalInt)
    USB_FlushRxFifo                          0x08009b0d   Thumb Code   128  stm32f4xx_ll_usb.o(.text.USB_FlushRxFifo)
    USB_FlushTxFifo                          0x08009b8d   Thumb Code   134  stm32f4xx_ll_usb.o(.text.USB_FlushTxFifo)
    USB_GetMode                              0x08009c15   Thumb Code    16  stm32f4xx_ll_usb.o(.text.USB_GetMode)
    USB_HostInit                             0x08009c25   Thumb Code   428  stm32f4xx_ll_usb.o(.text.USB_HostInit)
    USB_SetCurrentMode                       0x08009dd1   Thumb Code   222  stm32f4xx_ll_usb.o(.text.USB_SetCurrentMode)
    UsageFault_Handler                       0x08009f09   Thumb Code     4  stm32f4xx_it.o(.text.UsageFault_Handler)
    __user_perthread_libspace                0x0800a07d   Thumb Code   150  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x0800a115   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x0800a135   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x0800a149   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _mutex_release                           0x0800a17d   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _platform_post_stackheap_init            0x0800a199   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_close                               0x0800a1a1   Thumb Code   108  retarget_io.o(.text._sys_close)
    _sys_flen                                0x0800a20d   Thumb Code   150  retarget_io.o(.text._sys_flen)
    _sys_istty                               0x0800a2a5   Thumb Code    72  retarget_io.o(.text._sys_istty)
    _sys_open                                0x0800a2ed   Thumb Code   260  retarget_io.o(.text._sys_open)
    _sys_read                                0x0800a3f1   Thumb Code   154  retarget_io.o(.text._sys_read)
    _sys_seek                                0x0800a48d   Thumb Code   130  retarget_io.o(.text._sys_seek)
    _sys_write                               0x0800a511   Thumb Code   130  retarget_io.o(.text._sys_write)
    app_main                                 0x0800a775   Thumb Code    26  main.o(.text.app_main)
    efs_close                                0x0800ad0d   Thumb Code    10  fs_config.o(.text.efs_close)
    efs_flen                                 0x0800ad19   Thumb Code    12  fs_config.o(.text.efs_flen)
    efs_handle_get                           0x0800ad25   Thumb Code    12  fs_config.o(.text.efs_handle_get)
    efs_init                                 0x0800ad31   Thumb Code    10  fs_config.o(.text.efs_init)
    efs_mount                                0x0800ad3d   Thumb Code    10  fs_config.o(.text.efs_mount)
    efs_open                                 0x0800ad49   Thumb Code    14  fs_config.o(.text.efs_open)
    efs_read                                 0x0800ad59   Thumb Code    14  fs_config.o(.text.efs_read)
    efs_seek                                 0x0800ad69   Thumb Code    14  fs_config.o(.text.efs_seek)
    efs_write                                0x0800ad79   Thumb Code    16  fs_config.o(.text.efs_write)
    elink_cmd                                0x0800ad89   Thumb Code    12  fs_config.o(.text.elink_cmd)
    elink_dir                                0x0800ad95   Thumb Code    14  fs_config.o(.text.elink_dir)
    elink_init                               0x0800ada5   Thumb Code    10  fs_config.o(.text.elink_init)
    elink_insert                             0x0800adb1   Thumb Code    12  fs_config.o(.text.elink_insert)
    elink_scan                               0x0800adbd   Thumb Code    14  fs_config.o(.text.elink_scan)
    fat_close                                0x0800b039   Thumb Code   284  fs_fat.o(.text.fat_close)
    fat_flen                                 0x0800b189   Thumb Code    28  fs_fat.o(.text.fat_flen)
    fat_handle_get                           0x0800b1a5   Thumb Code    56  fs_fat.o(.text.fat_handle_get)
    fat_init                                 0x0800b1e5   Thumb Code    76  fs_fat.o(.text.fat_init)
    fat_jour_init                            0x0800b231   Thumb Code    10  fs_config.o(.text.fat_jour_init)
    fat_mount                                0x0800b23d   Thumb Code   704  fs_fat.o(.text.fat_mount)
    fat_open                                 0x0800b511   Thumb Code   404  fs_fat.o(.text.fat_open)
    fat_read                                 0x0800b6a5   Thumb Code   300  fs_fat.o(.text.fat_read)
    fat_seek                                 0x0800b7d9   Thumb Code   728  fs_fat.o(.text.fat_seek)
    fat_write                                0x0800bb4d   Thumb Code   460  fs_fat.o(.text.fat_write)
    finit                                    0x0800bd61   Thumb Code   188  fs_mapi.o(.text.finit)
    fmount                                   0x0800be39   Thumb Code    72  fs_mapi.o(.text.fmount)
    fs_config                                0x0800c215   Thumb Code    32  fs_config.o(.text.fs_config)
    fs_config_evr                            0x0800c235   Thumb Code     2  fs_mapi.o(.text.fs_config_evr)
    fs_drive_id                              0x0800c289   Thumb Code   100  fs_common.o(.text.fs_drive_id)
    fs_fclose                                0x0800c2ed   Thumb Code     4  fs_sys.o(.text.fs_fclose)
    fs_fopen                                 0x0800c2f1   Thumb Code     4  fs_sys.o(.text.fs_fopen)
    fs_fread                                 0x0800c2f5   Thumb Code     4  fs_sys.o(.text.fs_fread)
    fs_fseek                                 0x0800c2f9   Thumb Code     8  fs_sys.o(.text.fs_fseek)
    fs_fsize                                 0x0800c301   Thumb Code     4  fs_sys.o(.text.fs_fsize)
    fs_fwrite                                0x0800c305   Thumb Code     4  fs_sys.o(.text.fs_fwrite)
    fs_get_rtos_tick_freq                    0x0800c309   Thumb Code     8  fs_config.o(.text.fs_get_rtos_tick_freq)
    fs_get_time                              0x0800c311   Thumb Code    20  fs_time.o(.text.fs_get_time)
    fs_mutex_acquire                         0x0800c329   Thumb Code    36  fs_config.o(.text.fs_mutex_acquire)
    fs_mutex_new                             0x0800c34d   Thumb Code    16  fs_config.o(.text.fs_mutex_new)
    fs_mutex_release                         0x0800c35d   Thumb Code    32  fs_config.o(.text.fs_mutex_release)
    fs_set_cdrive                            0x0800c509   Thumb Code    24  fs_common.o(.text.fs_set_cdrive)
    fs_strncasecmp                           0x0800c59d   Thumb Code    50  fs_common.o(.text.fs_strncasecmp)
    fsj_write                                0x0800c7c9   Thumb Code    16  fs_config.o(.text.fsj_write)
    get_u16                                  0x0800c809   Thumb Code     4  fs_common.o(.text.get_u16)
    get_u32                                  0x0800c80d   Thumb Code     4  fs_common.o(.text.get_u32)
    main                                     0x0800cbe1   Thumb Code    58  main.o(.text.main)
    osDelay                                  0x0800cd61   Thumb Code    84  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x0800cdb5   Thumb Code    66  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x0800cdf9   Thumb Code    58  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelGetTickFreq                      0x0800ce35   Thumb Code    58  rtx_kernel.o(.text.osKernelGetTickFreq)
    osKernelInitialize                       0x0800ce71   Thumb Code    74  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x0800cebd   Thumb Code    70  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x0800cf05   Thumb Code   126  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueuePut                        0x0800cf85   Thumb Code   138  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x0800d011   Thumb Code   100  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x0800d075   Thumb Code    86  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x0800d0cd   Thumb Code    86  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x0800d125   Thumb Code    86  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x0800d17d   Thumb Code    48  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x0800d1b9   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x0800d1c1   Thumb Code    18  rtx_lib.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x0800d1d5   Thumb Code    28  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x0800d215   Thumb Code   332  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x0800d361   Thumb Code   194  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x0800d425   Thumb Code   150  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x0800d4bd   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x0800d509   Thumb Code   100  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x0800d56d   Thumb Code   152  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x0800d76d   Thumb Code    62  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x0800d821   Thumb Code   152  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x0800d8b9   Thumb Code   172  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x0800da9d   Thumb Code   184  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x0800db55   Thumb Code    66  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x0800dc4d   Thumb Code    16  rtx_lib.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayRemove                   0x0800dde1   Thumb Code   156  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x0800de7d   Thumb Code   336  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x0800dfcd   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDispatch                      0x0800e02d   Thumb Code   150  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadJoinWakeup                    0x0800e1b1   Thumb Code    60  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadListGet                       0x0800e1ed   Thumb Code    54  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x0800e225   Thumb Code   118  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0800e29d   Thumb Code    50  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x0800e2f5   Thumb Code    88  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x0800e3a9   Thumb Code    32  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x0800e3c9   Thumb Code    34  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x0800e415   Thumb Code    60  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x0800e451   Thumb Code   150  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x0800e4e9   Thumb Code    46  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x0800e519   Thumb Code   118  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x0800e591   Thumb Code    70  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x0800e5d9   Thumb Code   272  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x0800e755   Thumb Code    48  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x0800e785   Thumb Code    50  rtx_timer.o(.text.osRtxTimerThread)
    osSemaphoreAcquire                       0x0800e895   Thumb Code    94  rtx_semaphore.o(.text.osSemaphoreAcquire)
    osSemaphoreDelete                        0x0800e8f5   Thumb Code    86  rtx_semaphore.o(.text.osSemaphoreDelete)
    osSemaphoreNew                           0x0800e94d   Thumb Code   114  rtx_semaphore.o(.text.osSemaphoreNew)
    osSemaphoreRelease                       0x0800e9c1   Thumb Code    78  rtx_semaphore.o(.text.osSemaphoreRelease)
    osThreadExit                             0x0800ea21   Thumb Code    36  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x0800ea45   Thumb Code    94  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x0800eaa5   Thumb Code   114  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x0800eb19   Thumb Code    58  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x0800eb55   Thumb Code   114  rtx_thread.o(.text.osThreadNew)
    osThreadTerminate                        0x0800ebc9   Thumb Code    86  rtx_thread.o(.text.osThreadTerminate)
    osTimerDelete                            0x0800ec21   Thumb Code    86  rtx_timer.o(.text.osTimerDelete)
    osTimerNew                               0x0800ec79   Thumb Code   138  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x0800ed05   Thumb Code   100  rtx_timer.o(.text.osTimerStart)
    rt_fs_close                              0x0800f699   Thumb Code    50  retarget_mdk-fs.o(.text.rt_fs_close)
    rt_fs_open                               0x0800f6cd   Thumb Code    64  retarget_mdk-fs.o(.text.rt_fs_open)
    rt_fs_read                               0x0800f70d   Thumb Code    66  retarget_mdk-fs.o(.text.rt_fs_read)
    rt_fs_seek                               0x0800f751   Thumb Code    82  retarget_mdk-fs.o(.text.rt_fs_seek)
    rt_fs_size                               0x0800f7a5   Thumb Code    64  retarget_mdk-fs.o(.text.rt_fs_size)
    rt_fs_write                              0x0800f7e5   Thumb Code    66  retarget_mdk-fs.o(.text.rt_fs_write)
    set_u16                                  0x0800f827   Thumb Code     4  fs_common.o(.text.set_u16)
    set_u32                                  0x0800f82b   Thumb Code     4  fs_common.o(.text.set_u32)
    _get_lc_ctype                            0x080116f5   Thumb Code    44  lc_ctype_c.o(locale$$code)
    $Super$$_fp_init                         0x08011721   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08011739   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08011739   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    osRtxConfig                              0x0801173c   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x080117ac   Data          56  rtx_lib.o(.rodata)
    AHBPrescTable                            0x080117f0   Data          16  system_stm32f4xx.o(.rodata.AHBPrescTable)
    Driver_USBH1                             0x08011810   Data          72  usbh_hs_stm32f4xx.o(.rodata.Driver_USBH1)
    EventRecorderInfo                        0x08011858   Data          24  eventrecorder.o(.rodata.EventRecorderInfo)
    __stderr_name                            0x08011870   Data           8  retarget_io.o(.rodata.__stderr_name)
    __stdin_name                             0x08011878   Data           7  retarget_io.o(.rodata.__stdin_name)
    __stdout_name                            0x0801187f   Data           8  retarget_io.o(.rodata.__stdout_name)
    fs_DevPool                               0x08011c88   Data           8  fs_config.o(.rodata.fs_DevPool)
    fs_efs_fh_cnt                            0x08011c90   Data           1  fs_config.o(.rodata.fs_efs_fh_cnt)
    fs_fat_fh_cnt                            0x08011c91   Data           1  fs_config.o(.rodata.fs_fat_fh_cnt)
    fs_ndrv                                  0x08011c92   Data           1  fs_config.o(.rodata.fs_ndrv)
    osRtxUserSVC                             0x08011cbc   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    usbh0_core_thread_attr                   0x08011d64   Data          36  usbh_config_0.o(.rodata.usbh0_core_thread_attr)
    usbh0_mem_pool_reloc                     0x08011d88   Data           1  usbh_config_0.o(.rodata.usbh0_mem_pool_reloc)
    usbh0_mem_pool_size                      0x08011d8c   Data           4  usbh_config_0.o(.rodata.usbh0_mem_pool_size)
    usbh0_pipe_num                           0x08011d90   Data           4  usbh_config_0.o(.rodata.usbh0_pipe_num)
    usbh0_power                              0x08011d94   Data           1  usbh_config_0.o(.rodata.usbh0_power)
    usbh_cb_pipe_event_ptr                   0x08011d98   Data           4  usbh_config_0.o(.rodata.usbh_cb_pipe_event_ptr)
    usbh_cb_port_event_ptr                   0x08011d9c   Data           4  usbh_config_0.o(.rodata.usbh_cb_port_event_ptr)
    usbh_debounce_in_ms                      0x08011da4   Data           2  usbh_config_0.o(.rodata.usbh_debounce_in_ms)
    usbh_dev_num                             0x08011da6   Data           1  usbh_config_0.o(.rodata.usbh_dev_num)
    usbh_hc_num                              0x08011da7   Data           1  usbh_config_0.o(.rodata.usbh_hc_num)
    usbh_hcd_ptr                             0x08011da8   Data           4  usbh_config_0.o(.rodata.usbh_hcd_ptr)
    usbh_mem_pool_ptr                        0x08011dac   Data           4  usbh_config_0.o(.rodata.usbh_mem_pool_ptr)
    usbh_mem_pool_reloc_ptr                  0x08011db0   Data           4  usbh_config_0.o(.rodata.usbh_mem_pool_reloc_ptr)
    usbh_mem_pool_size_ptr                   0x08011db4   Data           4  usbh_config_0.o(.rodata.usbh_mem_pool_size_ptr)
    usbh_msc_num                             0x08011db8   Data           1  usbh_config_0.o(.rodata.usbh_msc_num)
    usbh_pipe_num_ptr                        0x08011dbc   Data           4  usbh_config_0.o(.rodata.usbh_pipe_num_ptr)
    usbh_pipe_ptr                            0x08011dc0   Data           4  usbh_config_0.o(.rodata.usbh_pipe_ptr)
    usbh_power_ptr                           0x08011dc4   Data           4  usbh_config_0.o(.rodata.usbh_power_ptr)
    Region$$Table$$Base                      0x08011dc8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08011de8   Number         0  anon$$obj.o(Region$$Table)
    usb_lib_version                          0x08011de8   Data           4  usb_lib_ver.o(__MW_USB_LIB_VERSION_6.17.0)
    __ctype                                  0x08011df9   Data           0  lc_ctype_c.o(locale$$data)
    _stream_list_lock                        0x20000000   Data           4  streamlock.o(.data)
    __aeabi_stdin                            0x20000004   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x20000008   Data           4  stdio_streams.o(.data)
    __aeabi_stderr                           0x2000000c   Data           4  stdio_streams.o(.data)
    SystemCoreClock                          0x20000050   Data           4  system_stm32f4xx.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000054   Data         164  rtx_kernel.o(.data.os)
    usbh0_hcd_ptr                            0x200000f8   Data           4  usbh_config_0.o(.data.usbh0_hcd_ptr)
    uwTickFreq                               0x2000011c   Data           1  stm32f4xx_hal.o(.data.uwTickFreq)
    uwTickPrio                               0x20000120   Data           4  stm32f4xx_hal.o(.data.uwTickPrio)
    __libspace_start                         0x20000140   Data          96  libspace.o(.bss)
    __stdin                                  0x200001a0   Data          84  stdio_streams.o(.bss)
    __temporary_stack_top$libspace           0x200001a0   Data           0  libspace.o(.bss)
    __stdout                                 0x200001f4   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20000248   Data          84  stdio_streams.o(.bss)
    fbuf                                     0x200002c4   Data         200  thread.o(.bss.fbuf)
    fs_efs_fh                                0x20000390   Data          28  fs_config.o(.bss.fs_efs_fh)
    fs_fat_fh                                0x200003ac   Data         144  fs_config.o(.bss.fs_fat_fh)
    fs_ms_rtos_tick                          0x2000043c   Data           4  fs_config.o(.bss.fs_ms_rtos_tick)
    hhcd_USB_OTG_HS                          0x200004c4   Data         772  main.o(.bss.hhcd_USB_OTG_HS)
    hspi5                                    0x200007c8   Data          88  main.o(.bss.hspi5)
    .bss.os.msgqueue.cb$$Base                0x20008f1c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008f50   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.mutex.cb$$Base                   0x20008fa0   Number         0  fs_config.o(.bss.os.mutex.cb)
    .bss.os.mutex.cb$$Limit                  0x20008fd8   Number         0  usbh_config_0.o(.bss.os.mutex.cb)
    .bss.os.semaphore.cb$$Base               0x20008fd8   Number         0  usbh_config_0.o(.bss.os.semaphore.cb)
    .bss.os.semaphore.cb$$Limit              0x20008fe8   Number         0  usbh_config_0.o(.bss.os.semaphore.cb)
    .bss.os.thread.cb$$Base                  0x20008fe8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200090d8   Number         0  usbh_config_0.o(.bss.os.thread.cb)
    .bss.os.timer.cb$$Base                   0x200098d8   Number         0  usbh_config_0.o(.bss.os.timer.cb)
    .bss.os.timer.cb$$Limit                  0x200098f8   Number         0  usbh_config_0.o(.bss.os.timer.cb)
    otg_hs_role                              0x200098f9   Data           1  otg_hs_stm32f4xx.o(.bss.otg_hs_role)
    tid_Thread                               0x20009b00   Data           4  thread.o(.bss.tid_Thread)
    tim_id1                                  0x20009b04   Data           4  timer.o(.bss.tim_id1)
    tim_id2                                  0x20009b08   Data           4  timer.o(.bss.tim_id2)
    usbh0_mem_pool                           0x2000af0c   Data         572  usbh_config_0.o(.bss.usbh0_mem_pool)
    usbh0_pipe                               0x2000b148   Data          72  usbh_config_0.o(.bss.usbh0_pipe)
    usbh_capabilities                        0x2000b190   Data           4  usbh_config_0.o(.bss.usbh_capabilities)
    usbh_core_thread_id                      0x2000b194   Data           4  usbh_config_0.o(.bss.usbh_core_thread_id)
    usbh_debounce_timer_id                   0x2000b198   Data           4  usbh_config_0.o(.bss.usbh_debounce_timer_id)
    usbh_def_pipe_mutex_id                   0x2000b19c   Data           4  usbh_config_0.o(.bss.usbh_def_pipe_mutex_id)
    usbh_dev                                 0x2000b1a0   Data          28  usbh_config_0.o(.bss.usbh_dev)
    usbh_driver_semaphore_id                 0x2000b1bc   Data           4  usbh_config_0.o(.bss.usbh_driver_semaphore_id)
    usbh_drv_version                         0x2000b1c0   Data           4  usbh_config_0.o(.bss.usbh_drv_version)
    usbh_hci                                 0x2000b1c4   Data         124  usbh_config_0.o(.bss.usbh_hci)
    usbh_msc                                 0x2000b240   Data          28  usbh_config_0.o(.bss.usbh_msc)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080001ad

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00012040, Max: 0x00200000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00011efc, Max: 0x00200000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000001ac   Data   RO         2216    RESET               startup_stm32f429xx.o
    0x080001ac   0x080001ac   0x00000008   Code   RO         3294  * !!!main             c_w.l(__main.o)
    0x080001b4   0x080001b4   0x0000005c   Code   RO         3631    !!!scatter          c_w.l(__scatter.o)
    0x08000210   0x08000210   0x0000001a   Code   RO         3635    !!handler_copy      c_w.l(__scatter_copy.o)
    0x0800022a   0x0800022a   0x00000002   PAD
    0x0800022c   0x0800022c   0x00000002   Code   RO         3632    !!handler_null      c_w.l(__scatter.o)
    0x0800022e   0x0800022e   0x00000002   PAD
    0x08000230   0x08000230   0x0000001c   Code   RO         3637    !!handler_zi        c_w.l(__scatter_zi.o)
    0x0800024c   0x0800024c   0x00000002   Code   RO         3552    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800024e   0x0800024e   0x00000004   Code   RO         3451    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         3454    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000252   0x08000252   0x00000000   Code   RO         3456    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x08000252   0x08000252   0x00000008   Code   RO         3457    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x0800025a   0x0800025a   0x00000000   Code   RO         3459    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800025a   0x0800025a   0x00000000   Code   RO         3461    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800025a   0x0800025a   0x00000000   Code   RO         3463    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800025a   0x0800025a   0x00000006   Code   RO         3464    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000260   0x08000260   0x00000000   Code   RO         3466    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000260   0x08000260   0x0000000c   Code   RO         3467    .ARM.Collect$$libinit$$00000014  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3468    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3470    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3472    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3474    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3476    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3478    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3480    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3482    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000000   Code   RO         3484    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800026c   0x0800026c   0x00000004   Code   RO         3485    .ARM.Collect$$libinit$$00000026  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000000   Code   RO         3486    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000000   Code   RO         3490    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000000   Code   RO         3492    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000000   Code   RO         3494    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000000   Code   RO         3496    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x08000270   0x08000270   0x00000002   Code   RO         3497    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000272   0x08000272   0x00000002   Code   RO         3617    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000274   0x08000274   0x00000000   Code   RO         3554    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000274   0x08000274   0x00000004   Code   RO         3555    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x08000278   0x08000278   0x00000000   Code   RO         3556    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000278   0x08000278   0x00000000   Code   RO         3559    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000278   0x08000278   0x00000000   Code   RO         3562    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000278   0x08000278   0x00000000   Code   RO         3564    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000278   0x08000278   0x00000004   Code   RO         3565    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x0800027c   0x0800027c   0x00000000   Code   RO         3567    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800027c   0x0800027c   0x00000002   Code   RO         3568    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800027e   0x0800027e   0x00000000   Code   RO         3301    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800027e   0x0800027e   0x00000000   Code   RO         3390    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800027e   0x0800027e   0x00000006   Code   RO         3402    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000284   0x08000284   0x00000008   Code   RO         3391    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800028c   0x0800028c   0x00000004   Code   RO         3393    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000290   0x08000290   0x00000000   Code   RO         3395    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000290   0x08000290   0x00000008   Code   RO         3396    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000298   0x08000298   0x00000002   Code   RO         3572    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800029a   0x0800029a   0x00000000   Code   RO         3595    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800029a   0x0800029a   0x00000004   Code   RO         3596    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0800029e   0x0800029e   0x00000006   Code   RO         3597    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080002a4   0x080002a4   0x00000100   Code   RO          101    .text               irq_armv7m.o
    0x080003a4   0x080003a4   0x00000040   Code   RO         2217    .text               startup_stm32f429xx.o
    0x080003e4   0x080003e4   0x00000004   Code   RO         3260    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x080003e8   0x080003e8   0x000000f0   Code   RO         3262    .text               c_w.l(lludivv7m.o)
    0x080004d8   0x080004d8   0x0000001a   Code   RO         3264    .text               c_w.l(tolower.o)
    0x080004f2   0x080004f2   0x0000004c   Code   RO         3272    .text               c_w.l(fclose.o)
    0x0800053e   0x0800053e   0x00000002   PAD
    0x08000540   0x08000540   0x00000034   Code   RO         3274    .text               c_w.l(fclose_locked.o)
    0x08000574   0x08000574   0x00000090   Code   RO         3276    .text               c_w.l(fflush_locked.o)
    0x08000604   0x08000604   0x0000014c   Code   RO         3278    .text               c_w.l(fopen_locked.o)
    0x08000750   0x08000750   0x0000003e   Code   RO         3280    .text               c_w.l(strlen.o)
    0x0800078e   0x0800078e   0x0000008a   Code   RO         3282    .text               c_w.l(rt_memcpy_v6.o)
    0x08000818   0x08000818   0x00000044   Code   RO         3286    .text               c_w.l(rt_memclr.o)
    0x0800085c   0x0800085c   0x0000004e   Code   RO         3288    .text               c_w.l(rt_memclr_w.o)
    0x080008aa   0x080008aa   0x00000006   PAD
    0x080008b0   0x080008b0   0x0000007c   Code   RO         3290    .text               c_w.l(strcmpv7em.o)
    0x0800092c   0x0800092c   0x00000006   Code   RO         3292    .text               c_w.l(heapauxi.o)
    0x08000932   0x08000932   0x00000002   PAD
    0x08000934   0x08000934   0x00000008   Code   RO         3298    .text               c_w.l(libspace.o)
    0x0800093c   0x0800093c   0x00000010   Code   RO         3302    .text               c_w.l(rt_ctype_table.o)
    0x0800094c   0x0800094c   0x000000a6   Code   RO         3316    .text               c_w.l(h1_alloc_threads.o)
    0x080009f2   0x080009f2   0x00000076   Code   RO         3318    .text               c_w.l(h1_free_threads.o)
    0x08000a68   0x08000a68   0x000000f8   Code   RO         3374    .text               c_w.l(fseek.o)
    0x08000b60   0x08000b60   0x00000108   Code   RO         3376    .text               c_w.l(stdio.o)
    0x08000c68   0x08000c68   0x00000064   Code   RO         3387    .text               c_w.l(rt_memcpy_w.o)
    0x08000ccc   0x08000ccc   0x0000000a   Code   RO         3411    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x08000cd6   0x08000cd6   0x0000000a   Code   RO         3418    .text               c_w.l(rt_locale_twolibspace.o)
    0x08000ce0   0x08000ce0   0x00000004   Code   RO         3420    .text               c_w.l(hguard.o)
    0x08000ce4   0x08000ce4   0x0000008a   Code   RO         3422    .text               c_w.l(init_alloc.o)
    0x08000d6e   0x08000d6e   0x00000012   Code   RO         3428    .text               c_w.l(h1_init_threads.o)
    0x08000d80   0x08000d80   0x0000024a   Code   RO         3438    .text               c_w.l(filbuf.o)
    0x08000fca   0x08000fca   0x00000042   Code   RO         3440    .text               c_w.l(ftell.o)
    0x0800100c   0x0800100c   0x000001c8   Code   RO         3444    .text               c_w.l(initio_locked.o)
    0x080011d4   0x080011d4   0x0000004a   Code   RO         3504    .text               c_w.l(sys_stackheap_outer.o)
    0x0800121e   0x0800121e   0x00000000   Code   RO         3509    .text               c_w.l(maybetermalloc2.o)
    0x0800121e   0x0800121e   0x00000052   Code   RO         3512    .text               c_w.l(h1_extend_threads.o)
    0x08001270   0x08001270   0x00000068   Code   RO         3522    .text               c_w.l(setvbuf_locked.o)
    0x080012d8   0x080012d8   0x0000012a   Code   RO         3524    .text               c_w.l(freadfast_locked.o)
    0x08001402   0x08001402   0x00000002   PAD
    0x08001404   0x08001404   0x0000006c   Code   RO         3528    .text               c_w.l(flushlinebuffered_locked.o)
    0x08001470   0x08001470   0x00000012   Code   RO         3530    .text               c_w.l(exit.o)
    0x08001482   0x08001482   0x0000000e   Code   RO         3536    .text               c_w.l(defsig_rtred_outer.o)
    0x08001490   0x08001490   0x0000000e   Code   RO         3540    .text               c_w.l(defsig_rtmem_outer.o)
    0x0800149e   0x0800149e   0x00000002   Code   RO         3569    .text               c_w.l(use_no_semi.o)
    0x080014a0   0x080014a0   0x00000000   Code   RO         3571    .text               c_w.l(indicate_semi.o)
    0x080014a0   0x080014a0   0x00000010   Code   RO         3576    .text               c_w.l(term_alloc.o)
    0x080014b0   0x080014b0   0x0000000a   Code   RO         3578    .text               c_w.l(defsig_exit.o)
    0x080014ba   0x080014ba   0x00000002   PAD
    0x080014bc   0x080014bc   0x00000034   Code   RO         3582    .text               c_w.l(defsig_rtred_inner.o)
    0x080014f0   0x080014f0   0x00000050   Code   RO         3584    .text               c_w.l(defsig_rtmem_inner.o)
    0x08001540   0x08001540   0x0000000c   Code   RO         3590    .text               c_w.l(sys_exit.o)
    0x0800154c   0x0800154c   0x0000000a   Code   RO         3603    .text               c_w.l(h1_final_threads.o)
    0x08001556   0x08001556   0x00000032   Code   RO         3607    .text               c_w.l(defsig_general.o)
    0x08001588   0x08001588   0x0000000e   Code   RO         3609    .text               c_w.l(sys_wrch.o)
    0x08001596   0x08001596   0x00000002   PAD
    0x08001598   0x08001598   0x00000016   Code   RO          685    .text.$Sub$$_fp_init  rtx_lib.o
    0x080015ae   0x080015ae   0x00000002   PAD
    0x080015b0   0x080015b0   0x00000004   Code   RO           87    .text.BusFault_Handler  stm32f4xx_it.o
    0x080015b4   0x080015b4   0x00000024   Code   RO         2626    .text.CheckController  USB_CM3_L.lib(usbh_lib_core.o)
    0x080015d8   0x080015d8   0x0000003c   Code   RO         2888    .text.CheckInstance  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08001614   0x08001614   0x00000048   Code   RO         2682    .text.CheckPipe     USB_CM3_L.lib(usbh_lib_core.o)
    0x0800165c   0x0800165c   0x00000002   Code   RO           91    .text.DebugMon_Handler  stm32f4xx_it.o
    0x0800165e   0x0800165e   0x00000002   PAD
    0x08001660   0x08001660   0x0000000a   Code   RO           93    .text.EXTI0_IRQHandler  stm32f4xx_it.o
    0x0800166a   0x0800166a   0x00000002   PAD
    0x0800166c   0x0800166c   0x00000006   Code   RO           66    .text.Error_Handler  main.o
    0x08001672   0x08001672   0x00000002   PAD
    0x08001674   0x08001674   0x0000003c   Code   RO         1537    .text.EventCheckFilter  eventrecorder.o
    0x080016b0   0x080016b0   0x0000009a   Code   RO         1523    .text.EventGetTS    eventrecorder.o
    0x0800174a   0x0800174a   0x00000002   PAD
    0x0800174c   0x0800174c   0x0000005a   Code   RO         1541    .text.EventRecord2  eventrecorder.o
    0x080017a6   0x080017a6   0x00000002   PAD
    0x080017a8   0x080017a8   0x00000096   Code   RO         1543    .text.EventRecord4  eventrecorder.o
    0x0800183e   0x0800183e   0x00000002   PAD
    0x08001840   0x08001840   0x000000f0   Code   RO         1525    .text.EventRecordItem  eventrecorder.o
    0x08001930   0x08001930   0x00000092   Code   RO         1529    .text.EventRecorderDisable  eventrecorder.o
    0x080019c2   0x080019c2   0x00000002   PAD
    0x080019c4   0x080019c4   0x00000092   Code   RO         1521    .text.EventRecorderEnable  eventrecorder.o
    0x08001a56   0x08001a56   0x00000002   PAD
    0x08001a58   0x08001a58   0x000001b8   Code   RO         1517    .text.EventRecorderInitialize  eventrecorder.o
    0x08001c10   0x08001c10   0x0000004a   Code   RO         1527    .text.EventRecorderStart  eventrecorder.o
    0x08001c5a   0x08001c5a   0x00000002   PAD
    0x08001c5c   0x08001c5c   0x0000000c   Code   RO         1515    .text.EventRecorderTimerGetCount  eventrecorder.o
    0x08001c68   0x08001c68   0x0000000c   Code   RO         1513    .text.EventRecorderTimerGetFreq  eventrecorder.o
    0x08001c74   0x08001c74   0x00000024   Code   RO         1511    .text.EventRecorderTimerSetup  eventrecorder.o
    0x08001c98   0x08001c98   0x0000001a   Code   RO          363    .text.EvrRtxDelay   rtx_evr.o
    0x08001cb2   0x08001cb2   0x00000002   PAD
    0x08001cb4   0x08001cb4   0x0000001a   Code   RO          371    .text.EvrRtxDelayCompleted  rtx_evr.o
    0x08001cce   0x08001cce   0x00000002   PAD
    0x08001cd0   0x08001cd0   0x00000016   Code   RO          361    .text.EvrRtxDelayError  rtx_evr.o
    0x08001ce6   0x08001ce6   0x00000002   PAD
    0x08001ce8   0x08001ce8   0x0000001a   Code   RO          367    .text.EvrRtxDelayStarted  rtx_evr.o
    0x08001d02   0x08001d02   0x00000002   PAD
    0x08001d04   0x08001d04   0x0000001a   Code   RO          419    .text.EvrRtxEventFlagsWaitTimeout  rtx_evr.o
    0x08001d1e   0x08001d1e   0x00000002   PAD
    0x08001d20   0x08001d20   0x00000016   Code   RO          209    .text.EvrRtxKernelError  rtx_evr.o
    0x08001d36   0x08001d36   0x00000002   PAD
    0x08001d38   0x08001d38   0x00000018   Code   RO          255    .text.EvrRtxKernelErrorNotify  rtx_evr.o
    0x08001d50   0x08001d50   0x0000001a   Code   RO          247    .text.EvrRtxKernelGetTickCount  rtx_evr.o
    0x08001d6a   0x08001d6a   0x00000002   PAD
    0x08001d6c   0x08001d6c   0x0000001a   Code   RO          249    .text.EvrRtxKernelGetTickFreq  rtx_evr.o
    0x08001d86   0x08001d86   0x00000002   PAD
    0x08001d88   0x08001d88   0x00000014   Code   RO          211    .text.EvrRtxKernelInitialize  rtx_evr.o
    0x08001d9c   0x08001d9c   0x00000014   Code   RO          213    .text.EvrRtxKernelInitialized  rtx_evr.o
    0x08001db0   0x08001db0   0x00000014   Code   RO          219    .text.EvrRtxKernelStart  rtx_evr.o
    0x08001dc4   0x08001dc4   0x00000014   Code   RO          221    .text.EvrRtxKernelStarted  rtx_evr.o
    0x08001dd8   0x08001dd8   0x0000002a   Code   RO          199    .text.EvrRtxMemoryAlloc  rtx_evr.o
    0x08001e02   0x08001e02   0x00000002   PAD
    0x08001e04   0x08001e04   0x0000001c   Code   RO          205    .text.EvrRtxMemoryBlockAlloc  rtx_evr.o
    0x08001e20   0x08001e20   0x00000028   Code   RO          207    .text.EvrRtxMemoryBlockFree  rtx_evr.o
    0x08001e48   0x08001e48   0x0000002a   Code   RO          203    .text.EvrRtxMemoryBlockInit  rtx_evr.o
    0x08001e72   0x08001e72   0x00000002   PAD
    0x08001e74   0x08001e74   0x00000028   Code   RO          201    .text.EvrRtxMemoryFree  rtx_evr.o
    0x08001e9c   0x08001e9c   0x00000024   Code   RO          197    .text.EvrRtxMemoryInit  rtx_evr.o
    0x08001ec0   0x08001ec0   0x0000001a   Code   RO          497    .text.EvrRtxMemoryPoolAllocTimeout  rtx_evr.o
    0x08001eda   0x08001eda   0x00000002   PAD
    0x08001edc   0x08001edc   0x0000001c   Code   RO          525    .text.EvrRtxMessageQueueCreated  rtx_evr.o
    0x08001ef8   0x08001ef8   0x00000018   Code   RO          521    .text.EvrRtxMessageQueueError  rtx_evr.o
    0x08001f10   0x08001f10   0x0000002a   Code   RO          541    .text.EvrRtxMessageQueueGet  rtx_evr.o
    0x08001f3a   0x08001f3a   0x00000002   PAD
    0x08001f3c   0x08001f3c   0x00000028   Code   RO          543    .text.EvrRtxMessageQueueGetPending  rtx_evr.o
    0x08001f64   0x08001f64   0x0000001a   Code   RO          545    .text.EvrRtxMessageQueueGetTimeout  rtx_evr.o
    0x08001f7e   0x08001f7e   0x00000002   PAD
    0x08001f80   0x08001f80   0x0000001c   Code   RO          535    .text.EvrRtxMessageQueueInsertPending  rtx_evr.o
    0x08001f9c   0x08001f9c   0x0000001c   Code   RO          537    .text.EvrRtxMessageQueueInserted  rtx_evr.o
    0x08001fb8   0x08001fb8   0x0000001c   Code   RO          539    .text.EvrRtxMessageQueueNotInserted  rtx_evr.o
    0x08001fd4   0x08001fd4   0x0000001c   Code   RO          549    .text.EvrRtxMessageQueueNotRetrieved  rtx_evr.o
    0x08001ff0   0x08001ff0   0x0000002e   Code   RO          529    .text.EvrRtxMessageQueuePut  rtx_evr.o
    0x0800201e   0x0800201e   0x00000002   PAD
    0x08002020   0x08002020   0x00000028   Code   RO          531    .text.EvrRtxMessageQueuePutPending  rtx_evr.o
    0x08002048   0x08002048   0x0000001a   Code   RO          533    .text.EvrRtxMessageQueuePutTimeout  rtx_evr.o
    0x08002062   0x08002062   0x00000002   PAD
    0x08002064   0x08002064   0x0000001c   Code   RO          547    .text.EvrRtxMessageQueueRetrieved  rtx_evr.o
    0x08002080   0x08002080   0x0000001c   Code   RO          437    .text.EvrRtxMutexAcquire  rtx_evr.o
    0x0800209c   0x0800209c   0x0000001c   Code   RO          439    .text.EvrRtxMutexAcquirePending  rtx_evr.o
    0x080020b8   0x080020b8   0x0000001a   Code   RO          441    .text.EvrRtxMutexAcquireTimeout  rtx_evr.o
    0x080020d2   0x080020d2   0x00000002   PAD
    0x080020d4   0x080020d4   0x0000001c   Code   RO          443    .text.EvrRtxMutexAcquired  rtx_evr.o
    0x080020f0   0x080020f0   0x0000001c   Code   RO          433    .text.EvrRtxMutexCreated  rtx_evr.o
    0x0800210c   0x0800210c   0x0000001a   Code   RO          453    .text.EvrRtxMutexDelete  rtx_evr.o
    0x08002126   0x08002126   0x00000002   PAD
    0x08002128   0x08002128   0x0000001a   Code   RO          455    .text.EvrRtxMutexDestroyed  rtx_evr.o
    0x08002142   0x08002142   0x00000002   PAD
    0x08002144   0x08002144   0x00000018   Code   RO          429    .text.EvrRtxMutexError  rtx_evr.o
    0x0800215c   0x0800215c   0x0000001a   Code   RO          431    .text.EvrRtxMutexNew  rtx_evr.o
    0x08002176   0x08002176   0x00000002   PAD
    0x08002178   0x08002178   0x0000001a   Code   RO          445    .text.EvrRtxMutexNotAcquired  rtx_evr.o
    0x08002192   0x08002192   0x00000002   PAD
    0x08002194   0x08002194   0x0000001a   Code   RO          447    .text.EvrRtxMutexRelease  rtx_evr.o
    0x080021ae   0x080021ae   0x00000002   PAD
    0x080021b0   0x080021b0   0x0000001c   Code   RO          449    .text.EvrRtxMutexReleased  rtx_evr.o
    0x080021cc   0x080021cc   0x0000001c   Code   RO          465    .text.EvrRtxSemaphoreAcquire  rtx_evr.o
    0x080021e8   0x080021e8   0x0000001c   Code   RO          467    .text.EvrRtxSemaphoreAcquirePending  rtx_evr.o
    0x08002204   0x08002204   0x0000001a   Code   RO          469    .text.EvrRtxSemaphoreAcquireTimeout  rtx_evr.o
    0x0800221e   0x0800221e   0x00000002   PAD
    0x08002220   0x08002220   0x0000001c   Code   RO          471    .text.EvrRtxSemaphoreAcquired  rtx_evr.o
    0x0800223c   0x0800223c   0x0000001c   Code   RO          461    .text.EvrRtxSemaphoreCreated  rtx_evr.o
    0x08002258   0x08002258   0x0000001a   Code   RO          481    .text.EvrRtxSemaphoreDelete  rtx_evr.o
    0x08002272   0x08002272   0x00000002   PAD
    0x08002274   0x08002274   0x0000001a   Code   RO          483    .text.EvrRtxSemaphoreDestroyed  rtx_evr.o
    0x0800228e   0x0800228e   0x00000002   PAD
    0x08002290   0x08002290   0x00000018   Code   RO          457    .text.EvrRtxSemaphoreError  rtx_evr.o
    0x080022a8   0x080022a8   0x00000028   Code   RO          459    .text.EvrRtxSemaphoreNew  rtx_evr.o
    0x080022d0   0x080022d0   0x0000001a   Code   RO          473    .text.EvrRtxSemaphoreNotAcquired  rtx_evr.o
    0x080022ea   0x080022ea   0x00000002   PAD
    0x080022ec   0x080022ec   0x0000001a   Code   RO          475    .text.EvrRtxSemaphoreRelease  rtx_evr.o
    0x08002306   0x08002306   0x00000002   PAD
    0x08002308   0x08002308   0x0000001c   Code   RO          477    .text.EvrRtxSemaphoreReleased  rtx_evr.o
    0x08002324   0x08002324   0x0000001c   Code   RO          305    .text.EvrRtxThreadBlocked  rtx_evr.o
    0x08002340   0x08002340   0x00000038   Code   RO          263    .text.EvrRtxThreadCreated  rtx_evr.o
    0x08002378   0x08002378   0x0000001a   Code   RO          317    .text.EvrRtxThreadDestroyed  rtx_evr.o
    0x08002392   0x08002392   0x00000002   PAD
    0x08002394   0x08002394   0x00000018   Code   RO          259    .text.EvrRtxThreadError  rtx_evr.o
    0x080023ac   0x080023ac   0x00000014   Code   RO          313    .text.EvrRtxThreadExit  rtx_evr.o
    0x080023c0   0x080023c0   0x00000018   Code   RO          339    .text.EvrRtxThreadFlagsError  rtx_evr.o
    0x080023d8   0x080023d8   0x0000001c   Code   RO          341    .text.EvrRtxThreadFlagsSet  rtx_evr.o
    0x080023f4   0x080023f4   0x0000001c   Code   RO          343    .text.EvrRtxThreadFlagsSetDone  rtx_evr.o
    0x08002410   0x08002410   0x00000028   Code   RO          351    .text.EvrRtxThreadFlagsWait  rtx_evr.o
    0x08002438   0x08002438   0x0000002a   Code   RO          357    .text.EvrRtxThreadFlagsWaitCompleted  rtx_evr.o
    0x08002462   0x08002462   0x00000002   PAD
    0x08002464   0x08002464   0x0000001c   Code   RO          359    .text.EvrRtxThreadFlagsWaitNotCompleted  rtx_evr.o
    0x08002480   0x08002480   0x00000028   Code   RO          353    .text.EvrRtxThreadFlagsWaitPending  rtx_evr.o
    0x080024a8   0x080024a8   0x0000001a   Code   RO          355    .text.EvrRtxThreadFlagsWaitTimeout  rtx_evr.o
    0x080024c2   0x080024c2   0x00000002   PAD
    0x080024c4   0x080024c4   0x0000001a   Code   RO          271    .text.EvrRtxThreadGetId  rtx_evr.o
    0x080024de   0x080024de   0x00000002   PAD
    0x080024e0   0x080024e0   0x0000001a   Code   RO          303    .text.EvrRtxThreadJoined  rtx_evr.o
    0x080024fa   0x080024fa   0x00000002   PAD
    0x080024fc   0x080024fc   0x00000028   Code   RO          261    .text.EvrRtxThreadNew  rtx_evr.o
    0x08002524   0x08002524   0x0000001a   Code   RO          309    .text.EvrRtxThreadPreempted  rtx_evr.o
    0x0800253e   0x0800253e   0x00000002   PAD
    0x08002540   0x08002540   0x0000001a   Code   RO          311    .text.EvrRtxThreadSwitched  rtx_evr.o
    0x0800255a   0x0800255a   0x00000002   PAD
    0x0800255c   0x0800255c   0x0000001a   Code   RO          315    .text.EvrRtxThreadTerminate  rtx_evr.o
    0x08002576   0x08002576   0x00000002   PAD
    0x08002578   0x08002578   0x0000001c   Code   RO          307    .text.EvrRtxThreadUnblocked  rtx_evr.o
    0x08002594   0x08002594   0x0000001c   Code   RO          375    .text.EvrRtxTimerCallback  rtx_evr.o
    0x080025b0   0x080025b0   0x0000001c   Code   RO          379    .text.EvrRtxTimerCreated  rtx_evr.o
    0x080025cc   0x080025cc   0x0000001a   Code   RO          393    .text.EvrRtxTimerDelete  rtx_evr.o
    0x080025e6   0x080025e6   0x00000002   PAD
    0x080025e8   0x080025e8   0x0000001a   Code   RO          395    .text.EvrRtxTimerDestroyed  rtx_evr.o
    0x08002602   0x08002602   0x00000002   PAD
    0x08002604   0x08002604   0x00000018   Code   RO          373    .text.EvrRtxTimerError  rtx_evr.o
    0x0800261c   0x0800261c   0x0000002e   Code   RO          377    .text.EvrRtxTimerNew  rtx_evr.o
    0x0800264a   0x0800264a   0x00000002   PAD
    0x0800264c   0x0800264c   0x0000001c   Code   RO          383    .text.EvrRtxTimerStart  rtx_evr.o
    0x08002668   0x08002668   0x0000001a   Code   RO          385    .text.EvrRtxTimerStarted  rtx_evr.o
    0x08002682   0x08002682   0x00000002   PAD
    0x08002684   0x08002684   0x00000048   Code   RO         2922    .text.FS_USBH_MSC_DeviceCtrl  USB_CM3_L.lib(usbh_lib_msc.o)
    0x080026cc   0x080026cc   0x00000040   Code   RO         2912    .text.FS_USBH_MSC_Initialize  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800270c   0x0800270c   0x0000002e   Code   RO         2920    .text.FS_USBH_MSC_ReadInfo  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800273a   0x0800273a   0x00000028   Code   RO         2916    .text.FS_USBH_MSC_ReadSectors  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08002762   0x08002762   0x0000002c   Code   RO         2914    .text.FS_USBH_MSC_Uninitialize  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800278e   0x0800278e   0x00000028   Code   RO         2918    .text.FS_USBH_MSC_WriteSectors  USB_CM3_L.lib(usbh_lib_msc.o)
    0x080027b6   0x080027b6   0x00000002   PAD
    0x080027b8   0x080027b8   0x00000012   Code   RO         1539    .text.GetContext    eventrecorder.o
    0x080027ca   0x080027ca   0x00000002   PAD
    0x080027cc   0x080027cc   0x00000012   Code   RO         1547    .text.GetRecordIndex  eventrecorder.o
    0x080027de   0x080027de   0x00000002   PAD
    0x080027e0   0x080027e0   0x00000042   Code   RO         1590    .text.HAL_Delay     stm32f4xx_hal.o
    0x08002822   0x08002822   0x00000002   PAD
    0x08002824   0x08002824   0x0000025c   Code   RO         1764    .text.HAL_GPIO_DeInit  stm32f4xx_hal_gpio.o
    0x08002a80   0x08002a80   0x00000028   Code   RO           68    .text.HAL_GPIO_EXTI_Callback  main.o
    0x08002aa8   0x08002aa8   0x00000038   Code   RO         1774    .text.HAL_GPIO_EXTI_IRQHandler  stm32f4xx_hal_gpio.o
    0x08002ae0   0x08002ae0   0x000003ee   Code   RO         1762    .text.HAL_GPIO_Init  stm32f4xx_hal_gpio.o
    0x08002ece   0x08002ece   0x00000002   PAD
    0x08002ed0   0x08002ed0   0x00000026   Code   RO         1770    .text.HAL_GPIO_TogglePin  stm32f4xx_hal_gpio.o
    0x08002ef6   0x08002ef6   0x00000002   PAD
    0x08002ef8   0x08002ef8   0x0000002e   Code   RO         1768    .text.HAL_GPIO_WritePin  stm32f4xx_hal_gpio.o
    0x08002f26   0x08002f26   0x00000002   PAD
    0x08002f28   0x08002f28   0x00000066   Code   RO           50    .text.HAL_GetTick   main.o
    0x08002f8e   0x08002f8e   0x00000002   PAD
    0x08002f90   0x08002f90   0x00000148   Code   RO         1785    .text.HAL_HCD_Init  stm32f4xx_hal_hcd.o
    0x080030d8   0x080030d8   0x0000004e   Code   RO         2206    .text.HAL_HCD_MspDeInit  stm32f4xx_hal_msp.o
    0x08003126   0x08003126   0x00000002   PAD
    0x08003128   0x08003128   0x000000c8   Code   RO         2204    .text.HAL_HCD_MspInit  stm32f4xx_hal_msp.o
    0x080031f0   0x080031f0   0x00000036   Code   RO         1570    .text.HAL_Init      stm32f4xx_hal.o
    0x08003226   0x08003226   0x00000002   PAD
    0x08003228   0x08003228   0x0000000a   Code   RO           52    .text.HAL_InitTick  main.o
    0x08003232   0x08003232   0x00000002   PAD
    0x08003234   0x08003234   0x0000004a   Code   RO         2198    .text.HAL_MspInit   stm32f4xx_hal_msp.o
    0x0800327e   0x0800327e   0x00000002   PAD
    0x08003280   0x08003280   0x00000014   Code   RO         1654    .text.HAL_NVIC_DisableIRQ  stm32f4xx_hal_cortex.o
    0x08003294   0x08003294   0x00000014   Code   RO         1650    .text.HAL_NVIC_EnableIRQ  stm32f4xx_hal_cortex.o
    0x080032a8   0x080032a8   0x00000032   Code   RO         1642    .text.HAL_NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x080032da   0x080032da   0x00000002   PAD
    0x080032dc   0x080032dc   0x00000010   Code   RO         1638    .text.HAL_NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x080032ec   0x080032ec   0x00000262   Code   RO         1920    .text.HAL_RCC_ClockConfig  stm32f4xx_hal_rcc.o
    0x0800354e   0x0800354e   0x00000002   PAD
    0x08003550   0x08003550   0x000000e6   Code   RO         1922    .text.HAL_RCC_GetSysClockFreq  stm32f4xx_hal_rcc.o
    0x08003636   0x08003636   0x00000002   PAD
    0x08003638   0x08003638   0x000006be   Code   RO         1918    .text.HAL_RCC_OscConfig  stm32f4xx_hal_rcc.o
    0x08003cf6   0x08003cf6   0x00000002   PAD
    0x08003cf8   0x08003cf8   0x00000102   Code   RO         1974    .text.HAL_SPI_Init  stm32f4xx_hal_spi.o
    0x08003dfa   0x08003dfa   0x00000002   PAD
    0x08003dfc   0x08003dfc   0x00000092   Code   RO         2200    .text.HAL_SPI_MspInit  stm32f4xx_hal_msp.o
    0x08003e8e   0x08003e8e   0x00000002   PAD
    0x08003e90   0x08003e90   0x00000004   Code   RO           83    .text.HardFault_Handler  stm32f4xx_it.o
    0x08003e94   0x08003e94   0x00000012   Code   RO         1555    .text.IncrementRecordsDumped  eventrecorder.o
    0x08003ea6   0x08003ea6   0x00000002   PAD
    0x08003ea8   0x08003ea8   0x00000012   Code   RO         1553    .text.IncrementRecordsWritten  eventrecorder.o
    0x08003eba   0x08003eba   0x00000002   PAD
    0x08003ebc   0x08003ebc   0x0000003a   Code   RO           19    .text.Init_Thread   thread.o
    0x08003ef6   0x08003ef6   0x00000002   PAD
    0x08003ef8   0x08003ef8   0x000000b2   Code   RO            2    .text.Init_Timers   timer.o
    0x08003faa   0x08003faa   0x00000002   PAD
    0x08003fac   0x08003fac   0x00000014   Code   RO          111    .text.IsException   rtx_delay.o
    0x08003fc0   0x08003fc0   0x00000014   Code   RO          580    .text.IsException   rtx_kernel.o
    0x08003fd4   0x08003fd4   0x00000014   Code   RO          827    .text.IsException   rtx_msgqueue.o
    0x08003fe8   0x08003fe8   0x00000014   Code   RO          908    .text.IsException   rtx_mutex.o
    0x08003ffc   0x08003ffc   0x00000014   Code   RO          953    .text.IsException   rtx_semaphore.o
    0x08004010   0x08004010   0x00000014   Code   RO         1111    .text.IsException   rtx_thread.o
    0x08004024   0x08004024   0x00000014   Code   RO         1286    .text.IsException   rtx_timer.o
    0x08004038   0x08004038   0x0000002e   Code   RO          113    .text.IsIrqMasked   rtx_delay.o
    0x08004066   0x08004066   0x00000002   PAD
    0x08004068   0x08004068   0x0000002e   Code   RO          582    .text.IsIrqMasked   rtx_kernel.o
    0x08004096   0x08004096   0x00000002   PAD
    0x08004098   0x08004098   0x0000002e   Code   RO          829    .text.IsIrqMasked   rtx_msgqueue.o
    0x080040c6   0x080040c6   0x00000002   PAD
    0x080040c8   0x080040c8   0x0000002e   Code   RO          910    .text.IsIrqMasked   rtx_mutex.o
    0x080040f6   0x080040f6   0x00000002   PAD
    0x080040f8   0x080040f8   0x0000002e   Code   RO          955    .text.IsIrqMasked   rtx_semaphore.o
    0x08004126   0x08004126   0x00000002   PAD
    0x08004128   0x08004128   0x0000002e   Code   RO         1113    .text.IsIrqMasked   rtx_thread.o
    0x08004156   0x08004156   0x00000002   PAD
    0x08004158   0x08004158   0x0000002e   Code   RO         1288    .text.IsIrqMasked   rtx_timer.o
    0x08004186   0x08004186   0x00000002   PAD
    0x08004188   0x08004188   0x00000022   Code   RO          863    .text.IsMessageQueuePtrValid  rtx_msgqueue.o
    0x080041aa   0x080041aa   0x00000002   PAD
    0x080041ac   0x080041ac   0x00000022   Code   RO          926    .text.IsMutexPtrValid  rtx_mutex.o
    0x080041ce   0x080041ce   0x00000002   PAD
    0x080041d0   0x080041d0   0x00000014   Code   RO          586    .text.IsPrivileged  rtx_kernel.o
    0x080041e4   0x080041e4   0x00000022   Code   RO          977    .text.IsSemaphorePtrValid  rtx_semaphore.o
    0x08004206   0x08004206   0x00000002   PAD
    0x08004208   0x08004208   0x00000022   Code   RO         1197    .text.IsThreadPtrValid  rtx_thread.o
    0x0800422a   0x0800422a   0x00000002   PAD
    0x0800422c   0x0800422c   0x00000022   Code   RO         1312    .text.IsTimerPtrValid  rtx_timer.o
    0x0800424e   0x0800424e   0x00000002   PAD
    0x08004250   0x08004250   0x0000008c   Code   RO         1549    .text.LockRecord    eventrecorder.o
    0x080042dc   0x080042dc   0x00000170   Code   RO           60    .text.MX_GPIO_Init  main.o
    0x0800444c   0x0800444c   0x0000004e   Code   RO           62    .text.MX_SPI5_Init  main.o
    0x0800449a   0x0800449a   0x00000002   PAD
    0x0800449c   0x0800449c   0x00000040   Code   RO           64    .text.MX_USB_OTG_HS_HCD_Init  main.o
    0x080044dc   0x080044dc   0x00000018   Code   RO          729    .text.MemBlockPtr   rtx_memory.o
    0x080044f4   0x080044f4   0x0000000a   Code   RO          727    .text.MemHeadPtr    rtx_memory.o
    0x080044fe   0x080044fe   0x00000002   PAD
    0x08004500   0x08004500   0x00000004   Code   RO           85    .text.MemManage_Handler  stm32f4xx_it.o
    0x08004504   0x08004504   0x00000052   Code   RO          879    .text.MessageQueueGet  rtx_msgqueue.o
    0x08004556   0x08004556   0x00000002   PAD
    0x08004558   0x08004558   0x000000ac   Code   RO          871    .text.MessageQueuePut  rtx_msgqueue.o
    0x08004604   0x08004604   0x00000042   Code   RO          867    .text.MessageQueueRemove  rtx_msgqueue.o
    0x08004646   0x08004646   0x00000002   PAD
    0x08004648   0x08004648   0x00000004   Code   RO           81    .text.NMI_Handler   stm32f4xx_it.o
    0x0800464c   0x0800464c   0x0000006c   Code   RO         1648    .text.NVIC_EncodePriority  stm32f4xx_hal_cortex.o
    0x080046b8   0x080046b8   0x0000000c   Code   RO         1341    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x080046c4   0x080046c4   0x0000003c   Code   RO         1337    .text.OS_Tick_Enable  os_systick.o
    0x08004700   0x08004700   0x00000006   Code   RO         1343    .text.OS_Tick_GetIRQn  os_systick.o
    0x08004706   0x08004706   0x00000002   PAD
    0x08004708   0x08004708   0x0000007e   Code   RO         1335    .text.OS_Tick_Setup  os_systick.o
    0x08004786   0x08004786   0x00000002   PAD
    0x08004788   0x08004788   0x00000022   Code   RO         1372    .text.OTG_HS_IRQHandler  otg_hs_stm32f4xx.o
    0x080047aa   0x080047aa   0x00000002   PAD
    0x080047ac   0x080047ac   0x00000036   Code   RO         1378    .text.OTG_HS_PinVbusOnOff  otg_hs_stm32f4xx.o
    0x080047e2   0x080047e2   0x0000000a   Code   RO         2607    .text.OUTLINED_FUNCTION_0  FS_LFN_CM3_L.lib(fs_sys.o)
    0x080047ec   0x080047ec   0x00000018   Code   RO         2750    .text.OUTLINED_FUNCTION_0  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004804   0x08004804   0x00000006   Code   RO         2858    .text.OUTLINED_FUNCTION_0  USB_CM3_L.lib(usbh_lib_drv.o)
    0x0800480a   0x0800480a   0x0000000a   Code   RO         2924    .text.OUTLINED_FUNCTION_0  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004814   0x08004814   0x00000008   Code   RO         3133    .text.OUTLINED_FUNCTION_0  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800481c   0x0800481c   0x00000006   Code   RO         2540    .text.OUTLINED_FUNCTION_1  FS_LFN_CM3_L.lib(fs_mapi.o)
    0x08004822   0x08004822   0x00000006   Code   RO         2609    .text.OUTLINED_FUNCTION_1  FS_LFN_CM3_L.lib(fs_sys.o)
    0x08004828   0x08004828   0x00000030   Code   RO         2752    .text.OUTLINED_FUNCTION_1  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004858   0x08004858   0x0000000a   Code   RO         2860    .text.OUTLINED_FUNCTION_1  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08004862   0x08004862   0x00000008   Code   RO         2926    .text.OUTLINED_FUNCTION_1  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800486a   0x0800486a   0x00000008   Code   RO         3153    .text.OUTLINED_FUNCTION_10  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004872   0x08004872   0x00000008   Code   RO         2772    .text.OUTLINED_FUNCTION_11  USB_CM3_L.lib(usbh_lib_core.o)
    0x0800487a   0x0800487a   0x00000008   Code   RO         2774    .text.OUTLINED_FUNCTION_12  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004882   0x08004882   0x00000008   Code   RO         3157    .text.OUTLINED_FUNCTION_12  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800488a   0x0800488a   0x00000008   Code   RO         2776    .text.OUTLINED_FUNCTION_13  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004892   0x08004892   0x00000008   Code   RO         3159    .text.OUTLINED_FUNCTION_13  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800489a   0x0800489a   0x0000000e   Code   RO         2778    .text.OUTLINED_FUNCTION_14  USB_CM3_L.lib(usbh_lib_core.o)
    0x080048a8   0x080048a8   0x00000006   Code   RO         3161    .text.OUTLINED_FUNCTION_14  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080048ae   0x080048ae   0x00000008   Code   RO         2780    .text.OUTLINED_FUNCTION_15  USB_CM3_L.lib(usbh_lib_core.o)
    0x080048b6   0x080048b6   0x00000006   Code   RO         3163    .text.OUTLINED_FUNCTION_15  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080048bc   0x080048bc   0x00000008   Code   RO         2782    .text.OUTLINED_FUNCTION_16  USB_CM3_L.lib(usbh_lib_core.o)
    0x080048c4   0x080048c4   0x00000006   Code   RO         2784    .text.OUTLINED_FUNCTION_17  USB_CM3_L.lib(usbh_lib_core.o)
    0x080048ca   0x080048ca   0x0000000a   Code   RO         2786    .text.OUTLINED_FUNCTION_18  USB_CM3_L.lib(usbh_lib_core.o)
    0x080048d4   0x080048d4   0x00000006   Code   RO         3171    .text.OUTLINED_FUNCTION_19  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080048da   0x080048da   0x0000000a   Code   RO         2542    .text.OUTLINED_FUNCTION_2  FS_LFN_CM3_L.lib(fs_mapi.o)
    0x080048e4   0x080048e4   0x00000006   Code   RO         2611    .text.OUTLINED_FUNCTION_2  FS_LFN_CM3_L.lib(fs_sys.o)
    0x080048ea   0x080048ea   0x00000008   Code   RO         2862    .text.OUTLINED_FUNCTION_2  USB_CM3_L.lib(usbh_lib_drv.o)
    0x080048f2   0x080048f2   0x00000010   Code   RO         2928    .text.OUTLINED_FUNCTION_2  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004902   0x08004902   0x0000000e   Code   RO         3137    .text.OUTLINED_FUNCTION_2  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004910   0x08004910   0x0000000c   Code   RO         2790    .text.OUTLINED_FUNCTION_20  USB_CM3_L.lib(usbh_lib_core.o)
    0x0800491c   0x0800491c   0x00000006   Code   RO         3173    .text.OUTLINED_FUNCTION_20  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004922   0x08004922   0x00000006   Code   RO         2792    .text.OUTLINED_FUNCTION_21  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004928   0x08004928   0x0000000c   Code   RO         2794    .text.OUTLINED_FUNCTION_22  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004934   0x08004934   0x0000000c   Code   RO         2796    .text.OUTLINED_FUNCTION_23  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004940   0x08004940   0x00000008   Code   RO         2798    .text.OUTLINED_FUNCTION_24  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004948   0x08004948   0x0000000a   Code   RO         2800    .text.OUTLINED_FUNCTION_25  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004952   0x08004952   0x0000000e   Code   RO         2802    .text.OUTLINED_FUNCTION_26  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004960   0x08004960   0x0000000a   Code   RO         3185    .text.OUTLINED_FUNCTION_26  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800496a   0x0800496a   0x0000000a   Code   RO         2804    .text.OUTLINED_FUNCTION_27  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004974   0x08004974   0x0000000a   Code   RO         3187    .text.OUTLINED_FUNCTION_27  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800497e   0x0800497e   0x0000000a   Code   RO         2806    .text.OUTLINED_FUNCTION_28  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004988   0x08004988   0x00000006   Code   RO         3189    .text.OUTLINED_FUNCTION_28  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800498e   0x0800498e   0x00000012   Code   RO         2808    .text.OUTLINED_FUNCTION_29  USB_CM3_L.lib(usbh_lib_core.o)
    0x080049a0   0x080049a0   0x00000006   Code   RO         2544    .text.OUTLINED_FUNCTION_3  FS_LFN_CM3_L.lib(fs_mapi.o)
    0x080049a6   0x080049a6   0x0000002c   Code   RO         2756    .text.OUTLINED_FUNCTION_3  USB_CM3_L.lib(usbh_lib_core.o)
    0x080049d2   0x080049d2   0x00000006   Code   RO         2864    .text.OUTLINED_FUNCTION_3  USB_CM3_L.lib(usbh_lib_drv.o)
    0x080049d8   0x080049d8   0x0000000a   Code   RO         2930    .text.OUTLINED_FUNCTION_3  USB_CM3_L.lib(usbh_lib_msc.o)
    0x080049e2   0x080049e2   0x0000000a   Code   RO         3139    .text.OUTLINED_FUNCTION_3  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080049ec   0x080049ec   0x0000002a   Code   RO         2758    .text.OUTLINED_FUNCTION_4  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004a16   0x08004a16   0x0000000a   Code   RO         2866    .text.OUTLINED_FUNCTION_4  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08004a20   0x08004a20   0x0000000a   Code   RO         2932    .text.OUTLINED_FUNCTION_4  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004a2a   0x08004a2a   0x00000010   Code   RO         2760    .text.OUTLINED_FUNCTION_5  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004a3a   0x08004a3a   0x00000008   Code   RO         2868    .text.OUTLINED_FUNCTION_5  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08004a42   0x08004a42   0x00000006   Code   RO         2934    .text.OUTLINED_FUNCTION_5  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004a48   0x08004a48   0x00000008   Code   RO         3143    .text.OUTLINED_FUNCTION_5  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004a50   0x08004a50   0x0000000a   Code   RO         2762    .text.OUTLINED_FUNCTION_6  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004a5a   0x08004a5a   0x00000006   Code   RO         2870    .text.OUTLINED_FUNCTION_6  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08004a60   0x08004a60   0x00000008   Code   RO         2936    .text.OUTLINED_FUNCTION_6  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004a68   0x08004a68   0x00000006   Code   RO         2552    .text.OUTLINED_FUNCTION_7  FS_LFN_CM3_L.lib(fs_mapi.o)
    0x08004a6e   0x08004a6e   0x00000008   Code   RO         2764    .text.OUTLINED_FUNCTION_7  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004a76   0x08004a76   0x00000008   Code   RO         2872    .text.OUTLINED_FUNCTION_7  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08004a7e   0x08004a7e   0x00000008   Code   RO         2938    .text.OUTLINED_FUNCTION_7  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08004a86   0x08004a86   0x00000008   Code   RO         3147    .text.OUTLINED_FUNCTION_7  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004a8e   0x08004a8e   0x0000001a   Code   RO         2766    .text.OUTLINED_FUNCTION_8  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004aa8   0x08004aa8   0x0000000c   Code   RO         3149    .text.OUTLINED_FUNCTION_8  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08004ab4   0x08004ab4   0x00000006   Code   RO         2768    .text.OUTLINED_FUNCTION_9  USB_CM3_L.lib(usbh_lib_core.o)
    0x08004aba   0x08004aba   0x00000002   PAD
    0x08004abc   0x08004abc   0x00000050   Code   RO          644    .text.SVC_Setup     rtx_kernel.o
    0x08004b0c   0x08004b0c   0x00000024   Code   RO          981    .text.SemaphoreTokenDecrement  rtx_semaphore.o
    0x08004b30   0x08004b30   0x0000002e   Code   RO          993    .text.SemaphoreTokenIncrement  rtx_semaphore.o
    0x08004b5e   0x08004b5e   0x00000002   PAD
    0x08004b60   0x08004b60   0x00000010   Code   RO         1032    .text.SetPendSV     rtx_system.o
    0x08004b70   0x08004b70   0x00000034   Code   RO         1077    .text.SetPrivileged  rtx_thread.o
    0x08004ba4   0x08004ba4   0x00000018   Code   RO         1073    .text.StackOffsetR0  rtx_thread.o
    0x08004bbc   0x08004bbc   0x000000be   Code   RO           58    .text.SystemClock_Config  main.o
    0x08004c7a   0x08004c7a   0x00000002   PAD
    0x08004c7c   0x08004c7c   0x00000012   Code   RO         2224    .text.SystemInit    system_stm32f4xx.o
    0x08004c8e   0x08004c8e   0x00000002   PAD
    0x08004c90   0x08004c90   0x00000084   Code   RO           21    .text.Thread        thread.o
    0x08004d14   0x08004d14   0x0000007c   Code   RO         1205    .text.ThreadFlagsCheck  rtx_thread.o
    0x08004d90   0x08004d90   0x0000001a   Code   RO         1255    .text.ThreadFlagsSet  rtx_thread.o
    0x08004daa   0x08004daa   0x00000002   PAD
    0x08004dac   0x08004dac   0x00000008   Code   RO            4    .text.Timer1_Callback  timer.o
    0x08004db4   0x08004db4   0x0000001a   Code   RO            6    .text.Timer2_Callback  timer.o
    0x08004dce   0x08004dce   0x00000002   PAD
    0x08004dd0   0x08004dd0   0x0000009e   Code   RO         1308    .text.TimerInsert   rtx_timer.o
    0x08004e6e   0x08004e6e   0x00000002   PAD
    0x08004e70   0x08004e70   0x00000048   Code   RO         1318    .text.TimerRemove   rtx_timer.o
    0x08004eb8   0x08004eb8   0x00000028   Code   RO         1304    .text.TimerUnlink   rtx_timer.o
    0x08004ee0   0x08004ee0   0x00000016   Code   RO         2397    .text.USBH0_SignalPipeEvent  usbh_config_0.o
    0x08004ef6   0x08004ef6   0x00000002   PAD
    0x08004ef8   0x08004ef8   0x0000001a   Code   RO         2395    .text.USBH0_SignalPortEvent  usbh_config_0.o
    0x08004f12   0x08004f12   0x00000002   PAD
    0x08004f14   0x08004f14   0x00000010   Code   RO         2407    .text.USBH_CDC_Configure  usbh_config_0.o
    0x08004f24   0x08004f24   0x0000000c   Code   RO         2411    .text.USBH_CDC_Initialize_Lib  usbh_config_0.o
    0x08004f30   0x08004f30   0x0000000c   Code   RO         2409    .text.USBH_CDC_Unconfigure  usbh_config_0.o
    0x08004f3c   0x08004f3c   0x0000000c   Code   RO         2413    .text.USBH_CDC_Uninitialize_Lib  usbh_config_0.o
    0x08004f48   0x08004f48   0x000000c6   Code   RO         1440    .text.USBH_CH_Disable  usbh_hs_stm32f4xx.o
    0x0800500e   0x0800500e   0x00000002   PAD
    0x08005010   0x08005010   0x00000046   Code   RO         1438    .text.USBH_CH_FindFree  usbh_hs_stm32f4xx.o
    0x08005056   0x08005056   0x00000002   PAD
    0x08005058   0x08005058   0x00000016   Code   RO         1394    .text.USBH_CH_GetAddressFromIndex  usbh_hs_stm32f4xx.o
    0x0800506e   0x0800506e   0x00000002   PAD
    0x08005070   0x08005070   0x00000016   Code   RO         1432    .text.USBH_CH_GetIndexFromAddress  usbh_hs_stm32f4xx.o
    0x08005086   0x08005086   0x00000002   PAD
    0x08005088   0x08005088   0x0000013c   Code   RO         2734    .text.USBH_ConnectDebounce  USB_CM3_L.lib(usbh_lib_core.o)
    0x080051c4   0x080051c4   0x000002bc   Code   RO         2706    .text.USBH_ControlTransfer  USB_CM3_L.lib(usbh_lib_core.o)
    0x08005480   0x08005480   0x00000254   Code   RO         2736    .text.USBH_Core_Thread  USB_CM3_L.lib(usbh_lib_core.o)
    0x080056d4   0x080056d4   0x00000010   Code   RO         2415    .text.USBH_CustomClass_Configure  usbh_config_0.o
    0x080056e4   0x080056e4   0x0000000c   Code   RO         2419    .text.USBH_CustomClass_Initialize  usbh_config_0.o
    0x080056f0   0x080056f0   0x0000000c   Code   RO         2417    .text.USBH_CustomClass_Unconfigure  usbh_config_0.o
    0x080056fc   0x080056fc   0x0000000c   Code   RO         2421    .text.USBH_CustomClass_Uninitialize  usbh_config_0.o
    0x08005708   0x08005708   0x00000014   Code   RO         2363    .text.USBH_Delay    usbh_config_0.o
    0x0800571c   0x0800571c   0x00000050   Code   RO         2708    .text.USBH_DeviceRequest_ClearFeature  USB_CM3_L.lib(usbh_lib_core.o)
    0x0800576c   0x0800576c   0x00000064   Code   RO         2660    .text.USBH_DeviceRequest_GetDescriptor  USB_CM3_L.lib(usbh_lib_core.o)
    0x080057d0   0x080057d0   0x00000050   Code   RO         2714    .text.USBH_DeviceRequest_SetAddress  USB_CM3_L.lib(usbh_lib_core.o)
    0x08005820   0x08005820   0x0000005c   Code   RO         2720    .text.USBH_DeviceRequest_SetConfiguration  USB_CM3_L.lib(usbh_lib_core.o)
    0x0800587c   0x0800587c   0x0000000c   Code   RO         2820    .text.USBH_DriverGetCapabilities  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005888   0x08005888   0x0000000c   Code   RO         2818    .text.USBH_DriverGetVersion  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005894   0x08005894   0x00000054   Code   RO         2822    .text.USBH_DriverInitialize  USB_CM3_L.lib(usbh_lib_drv.o)
    0x080058e8   0x080058e8   0x00000064   Code   RO         2838    .text.USBH_DriverPipeCreate  USB_CM3_L.lib(usbh_lib_drv.o)
    0x0800594c   0x0800594c   0x00000054   Code   RO         2842    .text.USBH_DriverPipeDelete  USB_CM3_L.lib(usbh_lib_drv.o)
    0x080059a0   0x080059a0   0x00000070   Code   RO         2840    .text.USBH_DriverPipeModify  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005a10   0x08005a10   0x00000070   Code   RO         2846    .text.USBH_DriverPipeTransfer  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005a80   0x08005a80   0x00000048   Code   RO         2850    .text.USBH_DriverPipeTransferAbort  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005ac8   0x08005ac8   0x00000038   Code   RO         2848    .text.USBH_DriverPipeTransferGetResult  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005b00   0x08005b00   0x0000002c   Code   RO         2836    .text.USBH_DriverPortGetState  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005b2c   0x08005b2c   0x0000005c   Code   RO         2830    .text.USBH_DriverPortReset  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005b88   0x08005b88   0x00000048   Code   RO         2834    .text.USBH_DriverPortResume  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005bd0   0x08005bd0   0x0000004c   Code   RO         2832    .text.USBH_DriverPortSuspend  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005c1c   0x08005c1c   0x00000058   Code   RO         2828    .text.USBH_DriverPortVbusOnOff  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005c74   0x08005c74   0x00000050   Code   RO         2826    .text.USBH_DriverPowerControl  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08005cc4   0x08005cc4   0x00000784   Code   RO         2738    .text.USBH_Engine   USB_CM3_L.lib(usbh_lib_core.o)
    0x08006448   0x08006448   0x00000010   Code   RO         1398    .text.USBH_GetCapabilities  usbh_hs_stm32f4xx.o
    0x08006458   0x08006458   0x00000036   Code   RO         1430    .text.USBH_GetFrameNumber  usbh_hs_stm32f4xx.o
    0x0800648e   0x0800648e   0x00000002   PAD
    0x08006490   0x08006490   0x00000020   Code   RO         2678    .text.USBH_GetFree_PIPE  USB_CM3_L.lib(usbh_lib_core.o)
    0x080064b0   0x080064b0   0x00000012   Code   RO         1396    .text.USBH_GetVersion  usbh_hs_stm32f4xx.o
    0x080064c2   0x080064c2   0x00000002   PAD
    0x080064c4   0x080064c4   0x0000003c   Code   RO         2730    .text.USBH_Get_PipeCallback_of_Pipe  USB_CM3_L.lib(usbh_lib_core.o)
    0x08006500   0x08006500   0x00000044   Code   RO         2728    .text.USBH_Get_Thread_ID_of_Pipe  USB_CM3_L.lib(usbh_lib_core.o)
    0x08006544   0x08006544   0x00000010   Code   RO         2399    .text.USBH_HID_Configure  usbh_config_0.o
    0x08006554   0x08006554   0x0000000c   Code   RO         2403    .text.USBH_HID_Initialize_Lib  usbh_config_0.o
    0x08006560   0x08006560   0x0000000c   Code   RO         2401    .text.USBH_HID_Unconfigure  usbh_config_0.o
    0x0800656c   0x0800656c   0x0000000c   Code   RO         2405    .text.USBH_HID_Uninitialize_Lib  usbh_config_0.o
    0x08006578   0x08006578   0x0000072c   Code   RO         1390    .text.USBH_HS_IRQ   usbh_hs_stm32f4xx.o
    0x08006ca4   0x08006ca4   0x00000308   Code   RO         1392    .text.USBH_HW_StartTransfer  usbh_hs_stm32f4xx.o
    0x08006fac   0x08006fac   0x00000094   Code   RO         1400    .text.USBH_Initialize  usbh_hs_stm32f4xx.o
    0x08007040   0x08007040   0x00000234   Code   RO         2624    .text.USBH_Initialize  USB_CM3_L.lib(usbh_lib_core.o)
    0x08007274   0x08007274   0x00000108   Code   RO         2900    .text.USBH_MSC_Configure  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800737c   0x0800737c   0x00000070   Code   RO           37    .text.USBH_MSC_DriveMount  usbh_msc.o
    0x080073ec   0x080073ec   0x00000030   Code   RO         2886    .text.USBH_MSC_GetDevice  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800741c   0x0800741c   0x0000002c   Code   RO         2890    .text.USBH_MSC_GetStatus  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007448   0x08007448   0x00000002   Code   RO         2882    .text.USBH_MSC_Initialize  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800744a   0x0800744a   0x00000002   PAD
    0x0800744c   0x0800744c   0x00000440   Code   RO         2904    .text.USBH_MSC_Initialize_Lib  USB_CM3_L.lib(usbh_lib_msc.o)
    0x0800788c   0x0800788c   0x0000005a   Code   RO         2892    .text.USBH_MSC_Read  USB_CM3_L.lib(usbh_lib_msc.o)
    0x080078e6   0x080078e6   0x00000002   PAD
    0x080078e8   0x080078e8   0x0000002c   Code   RO         2898    .text.USBH_MSC_ReadCapacity  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007914   0x08007914   0x00000134   Code   RO         2894    .text.USBH_MSC_SCSI_Read10  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007a48   0x08007a48   0x0000010c   Code   RO         2908    .text.USBH_MSC_SCSI_RequestSense  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007b54   0x08007b54   0x000000ec   Code   RO         2906    .text.USBH_MSC_SCSI_TestUnitReady  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007c40   0x08007c40   0x00000094   Code   RO         2902    .text.USBH_MSC_Unconfigure  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007cd4   0x08007cd4   0x00000002   Code   RO         2884    .text.USBH_MSC_Uninitialize  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007cd6   0x08007cd6   0x0000000a   Code   RO         2910    .text.USBH_MSC_Uninitialize_Lib  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007ce0   0x08007ce0   0x000001a8   Code   RO         2896    .text.USBH_MSC_Write  USB_CM3_L.lib(usbh_lib_msc.o)
    0x08007e88   0x08007e88   0x0000002a   Code   RO         2692    .text.USBH_MemoryAllocate  USB_CM3_L.lib(usbh_lib_core.o)
    0x08007eb2   0x08007eb2   0x00000002   PAD
    0x08007eb4   0x08007eb4   0x0000003c   Code   RO         3232    .text.USBH_MemoryAllocateLib  USB_CM3_L.lib(usbh_lib_mem.o)
    0x08007ef0   0x08007ef0   0x00000028   Code   RO         2694    .text.USBH_MemoryFree  USB_CM3_L.lib(usbh_lib_core.o)
    0x08007f18   0x08007f18   0x0000003c   Code   RO         3234    .text.USBH_MemoryFreeLib  USB_CM3_L.lib(usbh_lib_mem.o)
    0x08007f54   0x08007f54   0x0000000c   Code   RO         3228    .text.USBH_MemoryGetPoolSize  USB_CM3_L.lib(usbh_lib_mem.o)
    0x08007f60   0x08007f60   0x0000001e   Code   RO         2628    .text.USBH_MemoryInitialize  USB_CM3_L.lib(usbh_lib_core.o)
    0x08007f7e   0x08007f7e   0x00000002   PAD
    0x08007f80   0x08007f80   0x00000034   Code   RO         3224    .text.USBH_MemoryInitializeLib  USB_CM3_L.lib(usbh_lib_mem.o)
    0x08007fb4   0x08007fb4   0x0000002c   Code   RO         3230    .text.USBH_MemoryIsInPool  USB_CM3_L.lib(usbh_lib_mem.o)
    0x08007fe0   0x08007fe0   0x000000aa   Code   RO         2365    .text.USBH_MsToTick  usbh_config_0.o
    0x0800808a   0x0800808a   0x00000002   PAD
    0x0800808c   0x0800808c   0x00000032   Code   RO         2381    .text.USBH_MutexAcquire  usbh_config_0.o
    0x080080be   0x080080be   0x00000002   PAD
    0x080080c0   0x080080c0   0x00000056   Code   RO         2379    .text.USBH_MutexCreate  usbh_config_0.o
    0x08008116   0x08008116   0x00000002   PAD
    0x08008118   0x08008118   0x00000024   Code   RO         2385    .text.USBH_MutexDelete  usbh_config_0.o
    0x0800813c   0x0800813c   0x00000024   Code   RO         2383    .text.USBH_MutexRelease  usbh_config_0.o
    0x08008160   0x08008160   0x00000002   Code   RO         2662    .text.USBH_Notify   USB_CM3_L.lib(usbh_lib_core.o)
    0x08008162   0x08008162   0x00000002   PAD
    0x08008164   0x08008164   0x00000070   Code   RO         2704    .text.USBH_PipeAbort  USB_CM3_L.lib(usbh_lib_core.o)
    0x080081d4   0x080081d4   0x00000186   Code   RO         1416    .text.USBH_PipeCreate  usbh_hs_stm32f4xx.o
    0x0800835a   0x0800835a   0x00000002   PAD
    0x0800835c   0x0800835c   0x00000064   Code   RO         2676    .text.USBH_PipeCreate  USB_CM3_L.lib(usbh_lib_core.o)
    0x080083c0   0x080083c0   0x00000088   Code   RO         1420    .text.USBH_PipeDelete  usbh_hs_stm32f4xx.o
    0x08008448   0x08008448   0x00000034   Code   RO         2686    .text.USBH_PipeDelete  USB_CM3_L.lib(usbh_lib_core.o)
    0x0800847c   0x0800847c   0x000000cc   Code   RO         2700    .text.USBH_PipeDoPing  USB_CM3_L.lib(usbh_lib_core.o)
    0x08008548   0x08008548   0x000000ca   Code   RO         1418    .text.USBH_PipeModify  usbh_hs_stm32f4xx.o
    0x08008612   0x08008612   0x00000002   PAD
    0x08008614   0x08008614   0x00000304   Code   RO         2690    .text.USBH_PipeReceive  USB_CM3_L.lib(usbh_lib_core.o)
    0x08008918   0x08008918   0x0000006e   Code   RO         1422    .text.USBH_PipeReset  usbh_hs_stm32f4xx.o
    0x08008986   0x08008986   0x00000002   PAD
    0x08008988   0x08008988   0x000002fc   Code   RO         2698    .text.USBH_PipeSend  USB_CM3_L.lib(usbh_lib_core.o)
    0x08008c84   0x08008c84   0x000000e8   Code   RO         1424    .text.USBH_PipeTransfer  usbh_hs_stm32f4xx.o
    0x08008d6c   0x08008d6c   0x00000070   Code   RO         1428    .text.USBH_PipeTransferAbort  usbh_hs_stm32f4xx.o
    0x08008ddc   0x08008ddc   0x00000032   Code   RO         1426    .text.USBH_PipeTransferGetResult  usbh_hs_stm32f4xx.o
    0x08008e0e   0x08008e0e   0x00000002   PAD
    0x08008e10   0x08008e10   0x00000092   Code   RO         1414    .text.USBH_PortGetState  usbh_hs_stm32f4xx.o
    0x08008ea2   0x08008ea2   0x00000002   PAD
    0x08008ea4   0x08008ea4   0x000000a4   Code   RO         1408    .text.USBH_PortReset  usbh_hs_stm32f4xx.o
    0x08008f48   0x08008f48   0x0000005e   Code   RO         1412    .text.USBH_PortResume  usbh_hs_stm32f4xx.o
    0x08008fa6   0x08008fa6   0x00000002   PAD
    0x08008fa8   0x08008fa8   0x0000004a   Code   RO         1410    .text.USBH_PortSuspend  usbh_hs_stm32f4xx.o
    0x08008ff2   0x08008ff2   0x00000002   PAD
    0x08008ff4   0x08008ff4   0x0000007a   Code   RO         1406    .text.USBH_PortVbusOnOff  usbh_hs_stm32f4xx.o
    0x0800906e   0x0800906e   0x00000002   PAD
    0x08009070   0x08009070   0x000002a8   Code   RO         1404    .text.USBH_PowerControl  usbh_hs_stm32f4xx.o
    0x08009318   0x08009318   0x000001b0   Code   RO         2748    .text.USBH_RecoveryEnumerateDevice  USB_CM3_L.lib(usbh_lib_core.o)
    0x080094c8   0x080094c8   0x00000032   Code   RO         2389    .text.USBH_SemaphoreAcquire  usbh_config_0.o
    0x080094fa   0x080094fa   0x00000002   PAD
    0x080094fc   0x080094fc   0x00000056   Code   RO         2387    .text.USBH_SemaphoreCreate  usbh_config_0.o
    0x08009552   0x08009552   0x00000002   PAD
    0x08009554   0x08009554   0x00000024   Code   RO         2393    .text.USBH_SemaphoreDelete  usbh_config_0.o
    0x08009578   0x08009578   0x00000024   Code   RO         2391    .text.USBH_SemaphoreRelease  usbh_config_0.o
    0x0800959c   0x0800959c   0x0000003e   Code   RO         2856    .text.USBH_SignalPipeEvent  USB_CM3_L.lib(usbh_lib_drv.o)
    0x080095da   0x080095da   0x00000002   PAD
    0x080095dc   0x080095dc   0x00000064   Code   RO         2854    .text.USBH_SignalPortEvent  USB_CM3_L.lib(usbh_lib_drv.o)
    0x08009640   0x08009640   0x00000070   Code   RO         2357    .text.USBH_ThreadCreate  usbh_config_0.o
    0x080096b0   0x080096b0   0x00000026   Code   RO         2375    .text.USBH_ThreadFlagsSet  usbh_config_0.o
    0x080096d6   0x080096d6   0x00000002   PAD
    0x080096d8   0x080096d8   0x00000066   Code   RO         2377    .text.USBH_ThreadFlagsWait  usbh_config_0.o
    0x0800973e   0x0800973e   0x00000002   PAD
    0x08009740   0x08009740   0x00000008   Code   RO         2359    .text.USBH_ThreadGetHandle  usbh_config_0.o
    0x08009748   0x08009748   0x00000024   Code   RO         2361    .text.USBH_ThreadTerminate  usbh_config_0.o
    0x0800976c   0x0800976c   0x00000054   Code   RO         2367    .text.USBH_TimerCreate  usbh_config_0.o
    0x080097c0   0x080097c0   0x00000024   Code   RO         2373    .text.USBH_TimerDelete  usbh_config_0.o
    0x080097e4   0x080097e4   0x00000032   Code   RO         2369    .text.USBH_TimerStart  usbh_config_0.o
    0x08009816   0x08009816   0x00000002   PAD
    0x08009818   0x08009818   0x00000036   Code   RO         1402    .text.USBH_Uninitialize  usbh_hs_stm32f4xx.o
    0x0800984e   0x0800984e   0x00000002   PAD
    0x08009850   0x08009850   0x00000128   Code   RO         2632    .text.USBH_UninitializeDevices  USB_CM3_L.lib(usbh_lib_core.o)
    0x08009978   0x08009978   0x000000fc   Code   RO         2093    .text.USB_CoreInit  stm32f4xx_ll_usb.o
    0x08009a74   0x08009a74   0x00000084   Code   RO         2095    .text.USB_CoreReset  stm32f4xx_ll_usb.o
    0x08009af8   0x08009af8   0x00000014   Code   RO         2101    .text.USB_DisableGlobalInt  stm32f4xx_ll_usb.o
    0x08009b0c   0x08009b0c   0x00000080   Code   RO         2113    .text.USB_FlushRxFifo  stm32f4xx_ll_usb.o
    0x08009b8c   0x08009b8c   0x00000086   Code   RO         2111    .text.USB_FlushTxFifo  stm32f4xx_ll_usb.o
    0x08009c12   0x08009c12   0x00000002   PAD
    0x08009c14   0x08009c14   0x00000010   Code   RO         2105    .text.USB_GetMode   stm32f4xx_ll_usb.o
    0x08009c24   0x08009c24   0x000001ac   Code   RO         2163    .text.USB_HostInit  stm32f4xx_ll_usb.o
    0x08009dd0   0x08009dd0   0x000000de   Code   RO         2103    .text.USB_SetCurrentMode  stm32f4xx_ll_usb.o
    0x08009eae   0x08009eae   0x00000002   PAD
    0x08009eb0   0x08009eb0   0x00000056   Code   RO         1551    .text.UnlockRecord  eventrecorder.o
    0x08009f06   0x08009f06   0x00000002   PAD
    0x08009f08   0x08009f08   0x00000004   Code   RO           89    .text.UsageFault_Handler  stm32f4xx_it.o
    0x08009f0c   0x08009f0c   0x00000038   Code   RO         1434    .text.__NVIC_DisableIRQ  usbh_hs_stm32f4xx.o
    0x08009f44   0x08009f44   0x00000038   Code   RO         1656    .text.__NVIC_DisableIRQ  stm32f4xx_hal_cortex.o
    0x08009f7c   0x08009f7c   0x00000030   Code   RO         1436    .text.__NVIC_EnableIRQ  usbh_hs_stm32f4xx.o
    0x08009fac   0x08009fac   0x00000030   Code   RO         1652    .text.__NVIC_EnableIRQ  stm32f4xx_hal_cortex.o
    0x08009fdc   0x08009fdc   0x00000010   Code   RO          646    .text.__NVIC_GetPriorityGrouping  rtx_kernel.o
    0x08009fec   0x08009fec   0x00000010   Code   RO         1644    .text.__NVIC_GetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x08009ffc   0x08009ffc   0x00000042   Code   RO         1646    .text.__NVIC_SetPriority  stm32f4xx_hal_cortex.o
    0x0800a03e   0x0800a03e   0x00000002   PAD
    0x0800a040   0x0800a040   0x0000003c   Code   RO         1640    .text.__NVIC_SetPriorityGrouping  stm32f4xx_hal_cortex.o
    0x0800a07c   0x0800a07c   0x00000096   Code   RO          687    .text.__user_perthread_libspace  rtx_lib.o
    0x0800a112   0x0800a112   0x00000002   PAD
    0x0800a114   0x0800a114   0x00000020   Code   RO          697    .text._mutex_acquire  rtx_lib.o
    0x0800a134   0x0800a134   0x00000012   Code   RO          701    .text._mutex_free   rtx_lib.o
    0x0800a146   0x0800a146   0x00000002   PAD
    0x0800a148   0x0800a148   0x00000032   Code   RO          695    .text._mutex_initialize  rtx_lib.o
    0x0800a17a   0x0800a17a   0x00000002   PAD
    0x0800a17c   0x0800a17c   0x0000001c   Code   RO          699    .text._mutex_release  rtx_lib.o
    0x0800a198   0x0800a198   0x00000008   Code   RO          679    .text._platform_post_stackheap_init  rtx_lib.o
    0x0800a1a0   0x0800a1a0   0x0000006c   Code   RO         1461    .text._sys_close    retarget_io.o
    0x0800a20c   0x0800a20c   0x00000096   Code   RO         1471    .text._sys_flen     retarget_io.o
    0x0800a2a2   0x0800a2a2   0x00000002   PAD
    0x0800a2a4   0x0800a2a4   0x00000048   Code   RO         1467    .text._sys_istty    retarget_io.o
    0x0800a2ec   0x0800a2ec   0x00000104   Code   RO         1459    .text._sys_open     retarget_io.o
    0x0800a3f0   0x0800a3f0   0x0000009a   Code   RO         1465    .text._sys_read     retarget_io.o
    0x0800a48a   0x0800a48a   0x00000002   PAD
    0x0800a48c   0x0800a48c   0x00000082   Code   RO         1469    .text._sys_seek     retarget_io.o
    0x0800a50e   0x0800a50e   0x00000002   PAD
    0x0800a510   0x0800a510   0x00000082   Code   RO         1463    .text._sys_write    retarget_io.o
    0x0800a592   0x0800a592   0x00000002   PAD
    0x0800a594   0x0800a594   0x00000074   Code   RO         3043    .text.alloc_clus    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800a608   0x0800a608   0x00000096   Code   RO         3035    .text.alloc_table_read  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800a69e   0x0800a69e   0x000000d6   Code   RO         3101    .text.alloc_table_write  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800a774   0x0800a774   0x0000001a   Code   RO           54    .text.app_main      main.o
    0x0800a78e   0x0800a78e   0x00000002   PAD
    0x0800a790   0x0800a790   0x00000038   Code   RO         1207    .text.atomic_chk32_all  rtx_thread.o
    0x0800a7c8   0x0800a7c8   0x00000034   Code   RO         1209    .text.atomic_chk32_any  rtx_thread.o
    0x0800a7fc   0x0800a7fc   0x00000060   Code   RO         1545    .text.atomic_cmp_xch_32  eventrecorder.o
    0x0800a85c   0x0800a85c   0x0000002c   Code   RO          985    .text.atomic_dec16_nz  rtx_semaphore.o
    0x0800a888   0x0800a888   0x0000002c   Code   RO         1034    .text.atomic_dec16_nz  rtx_system.o
    0x0800a8b4   0x0800a8b4   0x00000020   Code   RO          754    .text.atomic_dec32  rtx_mempool.o
    0x0800a8d4   0x0800a8d4   0x00000028   Code   RO          881    .text.atomic_dec32_nz  rtx_msgqueue.o
    0x0800a8fc   0x0800a8fc   0x00000034   Code   RO         1036    .text.atomic_inc16_lim  rtx_system.o
    0x0800a930   0x0800a930   0x00000038   Code   RO          995    .text.atomic_inc16_lt  rtx_semaphore.o
    0x0800a968   0x0800a968   0x00000038   Code   RO         1040    .text.atomic_inc16_lt  rtx_system.o
    0x0800a9a0   0x0800a9a0   0x00000020   Code   RO          748    .text.atomic_inc32  rtx_mempool.o
    0x0800a9c0   0x0800a9c0   0x00000020   Code   RO          873    .text.atomic_inc32  rtx_msgqueue.o
    0x0800a9e0   0x0800a9e0   0x0000004c   Code   RO         1557    .text.atomic_inc_32  eventrecorder.o
    0x0800aa2c   0x0800aa2c   0x00000058   Code   RO         1559    .text.atomic_inc_8  eventrecorder.o
    0x0800aa84   0x0800aa84   0x00000028   Code   RO          746    .text.atomic_link_get  rtx_mempool.o
    0x0800aaac   0x0800aaac   0x00000030   Code   RO          752    .text.atomic_link_put  rtx_mempool.o
    0x0800aadc   0x0800aadc   0x00000028   Code   RO         1257    .text.atomic_set32  rtx_thread.o
    0x0800ab04   0x0800ab04   0x00000028   Code   RO          883    .text.atomic_wr8    rtx_msgqueue.o
    0x0800ab2c   0x0800ab2c   0x00000094   Code   RO         3031    .text.cache_fat     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800abc0   0x0800abc0   0x00000070   Code   RO         3115    .text.char_validate  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ac30   0x0800ac30   0x00000034   Code   RO         3053    .text.clear_clus    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ac64   0x0800ac64   0x00000024   Code   RO         3037    .text.clus_to_sect  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ac88   0x0800ac88   0x00000082   Code   RO         1519    .text.crc16_ccitt   eventrecorder.o
    0x0800ad0a   0x0800ad0a   0x00000002   PAD
    0x0800ad0c   0x0800ad0c   0x0000000a   Code   RO         2274    .text.efs_close     fs_config.o
    0x0800ad16   0x0800ad16   0x00000002   PAD
    0x0800ad18   0x0800ad18   0x0000000c   Code   RO         2282    .text.efs_flen      fs_config.o
    0x0800ad24   0x0800ad24   0x0000000c   Code   RO         2262    .text.efs_handle_get  fs_config.o
    0x0800ad30   0x0800ad30   0x0000000a   Code   RO         2264    .text.efs_init      fs_config.o
    0x0800ad3a   0x0800ad3a   0x00000002   PAD
    0x0800ad3c   0x0800ad3c   0x0000000a   Code   RO         2268    .text.efs_mount     fs_config.o
    0x0800ad46   0x0800ad46   0x00000002   PAD
    0x0800ad48   0x0800ad48   0x0000000e   Code   RO         2272    .text.efs_open      fs_config.o
    0x0800ad56   0x0800ad56   0x00000002   PAD
    0x0800ad58   0x0800ad58   0x0000000e   Code   RO         2276    .text.efs_read      fs_config.o
    0x0800ad66   0x0800ad66   0x00000002   PAD
    0x0800ad68   0x0800ad68   0x0000000e   Code   RO         2284    .text.efs_seek      fs_config.o
    0x0800ad76   0x0800ad76   0x00000002   PAD
    0x0800ad78   0x0800ad78   0x00000010   Code   RO         2278    .text.efs_write     fs_config.o
    0x0800ad88   0x0800ad88   0x0000000c   Code   RO         2318    .text.elink_cmd     fs_config.o
    0x0800ad94   0x0800ad94   0x0000000e   Code   RO         2316    .text.elink_dir     fs_config.o
    0x0800ada2   0x0800ada2   0x00000002   PAD
    0x0800ada4   0x0800ada4   0x0000000a   Code   RO         2314    .text.elink_init    fs_config.o
    0x0800adae   0x0800adae   0x00000002   PAD
    0x0800adb0   0x0800adb0   0x0000000c   Code   RO         2320    .text.elink_insert  fs_config.o
    0x0800adbc   0x0800adbc   0x0000000e   Code   RO         2324    .text.elink_scan    fs_config.o
    0x0800adca   0x0800adca   0x00000038   Code   RO         3023    .text.entry_flush   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ae02   0x0800ae02   0x0000001c   Code   RO         3117    .text.entry_pos_comp  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ae1e   0x0800ae1e   0x00000084   Code   RO         3013    .text.entry_pos_inc  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800aea2   0x0800aea2   0x0000004a   Code   RO         3029    .text.entry_read    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800aeec   0x0800aeec   0x0000002a   Code   RO         3119    .text.entry_type    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800af16   0x0800af16   0x00000002   PAD
    0x0800af18   0x0800af18   0x00000106   Code   RO          683    .text.evr_initialize  rtx_lib.o
    0x0800b01e   0x0800b01e   0x0000001a   Code   RO         3017    .text.extract_clus  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b038   0x0800b038   0x00000120   Code   RO         2997    .text.fat_close     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b158   0x0800b158   0x00000030   Code   RO         3131    .text.fat_crc32     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b188   0x0800b188   0x0000001c   Code   RO         3049    .text.fat_flen      FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b1a4   0x0800b1a4   0x00000040   Code   RO         2975    .text.fat_handle_get  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b1e4   0x0800b1e4   0x0000004c   Code   RO         2985    .text.fat_init      FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b230   0x0800b230   0x0000000a   Code   RO         2304    .text.fat_jour_init  fs_config.o
    0x0800b23a   0x0800b23a   0x00000002   PAD
    0x0800b23c   0x0800b23c   0x000002d4   Code   RO         2989    .text.fat_mount     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b510   0x0800b510   0x00000194   Code   RO         3005    .text.fat_open      FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b6a4   0x0800b6a4   0x00000134   Code   RO         3033    .text.fat_read      FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800b7d8   0x0800b7d8   0x000002e4   Code   RO         3051    .text.fat_seek      FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800babc   0x0800babc   0x0000008e   Code   RO         2991    .text.fat_vol_chk   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800bb4a   0x0800bb4a   0x00000002   PAD
    0x0800bb4c   0x0800bb4c   0x000001cc   Code   RO         3041    .text.fat_write     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800bd18   0x0800bd18   0x00000048   Code   RO         3015    .text.file_locked   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800bd60   0x0800bd60   0x000000d8   Code   RO         2490    .text.finit         FS_LFN_CM3_L.lib(fs_mapi.o)
    0x0800be38   0x0800be38   0x0000004c   Code   RO         2494    .text.fmount        FS_LFN_CM3_L.lib(fs_mapi.o)
    0x0800be84   0x0800be84   0x0000002c   Code   RO         3021    .text.format_date   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800beb0   0x0800beb0   0x0000002e   Code   RO         3019    .text.format_time   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800bede   0x0800bede   0x00000002   PAD
    0x0800bee0   0x0800bee0   0x00000280   Code   RO         3113    .text.frec_find     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800c160   0x0800c160   0x00000054   Code   RO         3111    .text.frec_find_elink  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800c1b4   0x0800c1b4   0x00000060   Code   RO         2571    .text.fs_close      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c214   0x0800c214   0x00000020   Code   RO         2254    .text.fs_config     fs_config.o
    0x0800c234   0x0800c234   0x00000002   Code   RO         2486    .text.fs_config_evr  FS_LFN_CM3_L.lib(fs_mapi.o)
    0x0800c236   0x0800c236   0x00000002   PAD
    0x0800c238   0x0800c238   0x00000050   Code   RO         2256    .text.fs_config_usb  fs_config.o
    0x0800c288   0x0800c288   0x00000064   Code   RO         2950    .text.fs_drive_id   FS_LFN_CM3_L.lib(fs_common.o)
    0x0800c2ec   0x0800c2ec   0x00000004   Code   RO         2595    .text.fs_fclose     FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c2f0   0x0800c2f0   0x00000004   Code   RO         2593    .text.fs_fopen      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c2f4   0x0800c2f4   0x00000004   Code   RO         2599    .text.fs_fread      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c2f8   0x0800c2f8   0x00000008   Code   RO         2603    .text.fs_fseek      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c300   0x0800c300   0x00000004   Code   RO         2605    .text.fs_fsize      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c304   0x0800c304   0x00000004   Code   RO         2597    .text.fs_fwrite     FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c308   0x0800c308   0x00000008   Code   RO         2246    .text.fs_get_rtos_tick_freq  fs_config.o
    0x0800c310   0x0800c310   0x00000018   Code   RO         3244    .text.fs_get_time   FS_LFN_CM3_L.lib(fs_time.o)
    0x0800c328   0x0800c328   0x00000024   Code   RO         2240    .text.fs_mutex_acquire  fs_config.o
    0x0800c34c   0x0800c34c   0x00000010   Code   RO         2238    .text.fs_mutex_new  fs_config.o
    0x0800c35c   0x0800c35c   0x00000020   Code   RO         2242    .text.fs_mutex_release  fs_config.o
    0x0800c37c   0x0800c37c   0x00000098   Code   RO         2567    .text.fs_open       FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c414   0x0800c414   0x0000006c   Code   RO         2579    .text.fs_read       FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c480   0x0800c480   0x00000088   Code   RO         2591    .text.fs_seek       FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c508   0x0800c508   0x00000020   Code   RO         2948    .text.fs_set_cdrive  FS_LFN_CM3_L.lib(fs_common.o)
    0x0800c528   0x0800c528   0x00000074   Code   RO         2587    .text.fs_size       FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c59c   0x0800c59c   0x00000032   Code   RO         2954    .text.fs_strncasecmp  FS_LFN_CM3_L.lib(fs_common.o)
    0x0800c5ce   0x0800c5ce   0x00000002   PAD
    0x0800c5d0   0x0800c5d0   0x0000012a   Code   RO         1486    .text.fs_to_rt_rval  retarget_mdk-fs.o
    0x0800c6fa   0x0800c6fa   0x00000002   PAD
    0x0800c6fc   0x0800c6fc   0x00000078   Code   RO         2575    .text.fs_write      FS_LFN_CM3_L.lib(fs_sys.o)
    0x0800c774   0x0800c774   0x00000054   Code   RO         2993    .text.fsinfo_write  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800c7c8   0x0800c7c8   0x00000010   Code   RO         2310    .text.fsj_write     fs_config.o
    0x0800c7d8   0x0800c7d8   0x00000030   Code   RO         3103    .text.get_fat_sect  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800c808   0x0800c808   0x00000004   Code   RO         2958    .text.get_u16       FS_LFN_CM3_L.lib(fs_common.o)
    0x0800c80c   0x0800c80c   0x00000004   Code   RO         2962    .text.get_u32       FS_LFN_CM3_L.lib(fs_common.o)
    0x0800c810   0x0800c810   0x000000ac   Code   RO          841    .text.isrRtxMessageQueueGet  rtx_msgqueue.o
    0x0800c8bc   0x0800c8bc   0x000000bc   Code   RO          837    .text.isrRtxMessageQueuePut  rtx_msgqueue.o
    0x0800c978   0x0800c978   0x0000006e   Code   RO          963    .text.isrRtxSemaphoreAcquire  rtx_semaphore.o
    0x0800c9e6   0x0800c9e6   0x00000002   PAD
    0x0800c9e8   0x0800c9e8   0x00000074   Code   RO          967    .text.isrRtxSemaphoreRelease  rtx_semaphore.o
    0x0800ca5c   0x0800ca5c   0x00000086   Code   RO         1189    .text.isrRtxThreadFlagsSet  rtx_thread.o
    0x0800cae2   0x0800cae2   0x00000002   PAD
    0x0800cae4   0x0800cae4   0x00000054   Code   RO         1016    .text.isr_queue_get  rtx_system.o
    0x0800cb38   0x0800cb38   0x0000005e   Code   RO         1030    .text.isr_queue_put  rtx_system.o
    0x0800cb96   0x0800cb96   0x00000002   PAD
    0x0800cb98   0x0800cb98   0x0000001c   Code   RO         3121    .text.lfn_char_cnt  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800cbb4   0x0800cbb4   0x0000002c   Code   RO         3123    .text.long_ent_hash  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800cbe0   0x0800cbe0   0x0000003a   Code   RO           56    .text.main          main.o
    0x0800cc1a   0x0800cc1a   0x000000cc   Code   RO         3109    .text.name_analyse  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800cce6   0x0800cce6   0x00000008   Code   RO         3071    .text.name_hash     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800ccee   0x0800ccee   0x00000054   Code   RO         3107    .text.name_strip    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800cd42   0x0800cd42   0x0000001c   Code   RO         3069    .text.name_validate  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800cd5e   0x0800cd5e   0x00000002   PAD
    0x0800cd60   0x0800cd60   0x00000054   Code   RO          109    .text.osDelay       rtx_delay.o
    0x0800cdb4   0x0800cdb4   0x00000042   Code   RO          590    .text.osKernelGetState  rtx_kernel.o
    0x0800cdf6   0x0800cdf6   0x00000002   PAD
    0x0800cdf8   0x0800cdf8   0x0000003a   Code   RO          622    .text.osKernelGetTickCount  rtx_kernel.o
    0x0800ce32   0x0800ce32   0x00000002   PAD
    0x0800ce34   0x0800ce34   0x0000003a   Code   RO          626    .text.osKernelGetTickFreq  rtx_kernel.o
    0x0800ce6e   0x0800ce6e   0x00000002   PAD
    0x0800ce70   0x0800ce70   0x0000004a   Code   RO          578    .text.osKernelInitialize  rtx_kernel.o
    0x0800ceba   0x0800ceba   0x00000002   PAD
    0x0800cebc   0x0800cebc   0x00000046   Code   RO          594    .text.osKernelStart  rtx_kernel.o
    0x0800cf02   0x0800cf02   0x00000002   PAD
    0x0800cf04   0x0800cf04   0x0000007e   Code   RO          839    .text.osMessageQueueGet  rtx_msgqueue.o
    0x0800cf82   0x0800cf82   0x00000002   PAD
    0x0800cf84   0x0800cf84   0x0000008a   Code   RO          835    .text.osMessageQueuePut  rtx_msgqueue.o
    0x0800d00e   0x0800d00e   0x00000002   PAD
    0x0800d010   0x0800d010   0x00000064   Code   RO          916    .text.osMutexAcquire  rtx_mutex.o
    0x0800d074   0x0800d074   0x00000056   Code   RO          922    .text.osMutexDelete  rtx_mutex.o
    0x0800d0ca   0x0800d0ca   0x00000002   PAD
    0x0800d0cc   0x0800d0cc   0x00000056   Code   RO          906    .text.osMutexNew    rtx_mutex.o
    0x0800d122   0x0800d122   0x00000002   PAD
    0x0800d124   0x0800d124   0x00000056   Code   RO          918    .text.osMutexRelease  rtx_mutex.o
    0x0800d17a   0x0800d17a   0x00000002   PAD
    0x0800d17c   0x0800d17c   0x00000030   Code   RO         1363    .text.osRtxErrorNotify  rtx_config.o
    0x0800d1ac   0x0800d1ac   0x0000000a   Code   RO         1020    .text.osRtxEventFlagsObject  rtx_system.o
    0x0800d1b6   0x0800d1b6   0x00000002   PAD
    0x0800d1b8   0x0800d1b8   0x00000008   Code   RO         1361    .text.osRtxIdleThread  rtx_config.o
    0x0800d1c0   0x0800d1c0   0x00000012   Code   RO          681    .text.osRtxKernelBeforeInit  rtx_lib.o
    0x0800d1d2   0x0800d1d2   0x00000002   PAD
    0x0800d1d4   0x0800d1d4   0x0000001c   Code   RO          576    .text.osRtxKernelErrorNotify  rtx_kernel.o
    0x0800d1f0   0x0800d1f0   0x0000000c   Code   RO         1012    .text.osRtxKernelGetState  rtx_system.o
    0x0800d1fc   0x0800d1fc   0x0000000c   Code   RO         1081    .text.osRtxKernelGetState  rtx_thread.o
    0x0800d208   0x0800d208   0x0000000c   Code   RO          640    .text.osRtxKernelState  rtx_kernel.o
    0x0800d214   0x0800d214   0x0000014c   Code   RO          731    .text.osRtxMemoryAlloc  rtx_memory.o
    0x0800d360   0x0800d360   0x000000c2   Code   RO          733    .text.osRtxMemoryFree  rtx_memory.o
    0x0800d422   0x0800d422   0x00000002   PAD
    0x0800d424   0x0800d424   0x00000096   Code   RO          725    .text.osRtxMemoryInit  rtx_memory.o
    0x0800d4ba   0x0800d4ba   0x00000002   PAD
    0x0800d4bc   0x0800d4bc   0x0000004a   Code   RO          744    .text.osRtxMemoryPoolAlloc  rtx_mempool.o
    0x0800d506   0x0800d506   0x00000002   PAD
    0x0800d508   0x0800d508   0x00000064   Code   RO          750    .text.osRtxMemoryPoolFree  rtx_mempool.o
    0x0800d56c   0x0800d56c   0x00000098   Code   RO          742    .text.osRtxMemoryPoolInit  rtx_mempool.o
    0x0800d604   0x0800d604   0x0000000a   Code   RO         1024    .text.osRtxMemoryPoolObject  rtx_system.o
    0x0800d60e   0x0800d60e   0x00000002   PAD
    0x0800d610   0x0800d610   0x0000000a   Code   RO         1026    .text.osRtxMessageObject  rtx_system.o
    0x0800d61a   0x0800d61a   0x00000002   PAD
    0x0800d61c   0x0800d61c   0x0000000a   Code   RO          821    .text.osRtxMessageQueueId  rtx_msgqueue.o
    0x0800d626   0x0800d626   0x00000002   PAD
    0x0800d628   0x0800d628   0x00000144   Code   RO          865    .text.osRtxMessageQueuePostProcess  rtx_msgqueue.o
    0x0800d76c   0x0800d76c   0x0000003e   Code   RO          819    .text.osRtxMessageQueueTimerSetup  rtx_msgqueue.o
    0x0800d7aa   0x0800d7aa   0x00000002   PAD
    0x0800d7ac   0x0800d7ac   0x0000005a   Code   RO          942    .text.osRtxMutexDestroy  rtx_mutex.o
    0x0800d806   0x0800d806   0x00000002   PAD
    0x0800d808   0x0800d808   0x0000000a   Code   RO          928    .text.osRtxMutexId  rtx_mutex.o
    0x0800d812   0x0800d812   0x00000002   PAD
    0x0800d814   0x0800d814   0x0000000a   Code   RO         1069    .text.osRtxMutexObject  rtx_thread.o
    0x0800d81e   0x0800d81e   0x00000002   PAD
    0x0800d820   0x0800d820   0x00000098   Code   RO          900    .text.osRtxMutexOwnerRelease  rtx_mutex.o
    0x0800d8b8   0x0800d8b8   0x000000ac   Code   RO          904    .text.osRtxMutexOwnerRestore  rtx_mutex.o
    0x0800d964   0x0800d964   0x000000fc   Code   RO          940    .text.osRtxMutexOwnerUnlock  rtx_mutex.o
    0x0800da60   0x0800da60   0x0000000a   Code   RO          869    .text.osRtxObject   rtx_msgqueue.o
    0x0800da6a   0x0800da6a   0x00000002   PAD
    0x0800da6c   0x0800da6c   0x0000000a   Code   RO          902    .text.osRtxObject   rtx_mutex.o
    0x0800da76   0x0800da76   0x00000002   PAD
    0x0800da78   0x0800da78   0x0000000a   Code   RO          983    .text.osRtxObject   rtx_semaphore.o
    0x0800da82   0x0800da82   0x00000002   PAD
    0x0800da84   0x0800da84   0x0000000a   Code   RO         1038    .text.osRtxObject   rtx_system.o
    0x0800da8e   0x0800da8e   0x00000002   PAD
    0x0800da90   0x0800da90   0x0000000a   Code   RO         1057    .text.osRtxObject   rtx_thread.o
    0x0800da9a   0x0800da9a   0x00000002   PAD
    0x0800da9c   0x0800da9c   0x000000b8   Code   RO         1014    .text.osRtxPendSV_Handler  rtx_system.o
    0x0800db54   0x0800db54   0x00000042   Code   RO         1028    .text.osRtxPostProcess  rtx_system.o
    0x0800db96   0x0800db96   0x00000002   PAD
    0x0800db98   0x0800db98   0x0000005a   Code   RO         1001    .text.osRtxSemaphoreDestroy  rtx_semaphore.o
    0x0800dbf2   0x0800dbf2   0x00000002   PAD
    0x0800dbf4   0x0800dbf4   0x0000000a   Code   RO          987    .text.osRtxSemaphoreId  rtx_semaphore.o
    0x0800dbfe   0x0800dbfe   0x00000002   PAD
    0x0800dc00   0x0800dc00   0x0000000a   Code   RO         1022    .text.osRtxSemaphoreObject  rtx_system.o
    0x0800dc0a   0x0800dc0a   0x00000002   PAD
    0x0800dc0c   0x0800dc0c   0x0000003e   Code   RO          979    .text.osRtxSemaphorePostProcess  rtx_semaphore.o
    0x0800dc4a   0x0800dc4a   0x00000002   PAD
    0x0800dc4c   0x0800dc4c   0x00000010   Code   RO          691    .text.osRtxThreadBeforeFree  rtx_lib.o
    0x0800dc5c   0x0800dc5c   0x00000088   Code   RO         1085    .text.osRtxThreadBlock  rtx_thread.o
    0x0800dce4   0x0800dce4   0x000000fa   Code   RO         1091    .text.osRtxThreadDelayInsert  rtx_thread.o
    0x0800ddde   0x0800ddde   0x00000002   PAD
    0x0800dde0   0x0800dde0   0x0000009c   Code   RO         1063    .text.osRtxThreadDelayRemove  rtx_thread.o
    0x0800de7c   0x0800de7c   0x00000150   Code   RO         1065    .text.osRtxThreadDelayTick  rtx_thread.o
    0x0800dfcc   0x0800dfcc   0x00000060   Code   RO         1097    .text.osRtxThreadDestroy  rtx_thread.o
    0x0800e02c   0x0800e02c   0x00000096   Code   RO         1079    .text.osRtxThreadDispatch  rtx_thread.o
    0x0800e0c2   0x0800e0c2   0x00000002   PAD
    0x0800e0c4   0x0800e0c4   0x000000a2   Code   RO         1099    .text.osRtxThreadFree  rtx_thread.o
    0x0800e166   0x0800e166   0x00000002   PAD
    0x0800e168   0x0800e168   0x0000000c   Code   RO          877    .text.osRtxThreadGetRunning  rtx_msgqueue.o
    0x0800e174   0x0800e174   0x0000000c   Code   RO          932    .text.osRtxThreadGetRunning  rtx_mutex.o
    0x0800e180   0x0800e180   0x0000000c   Code   RO          991    .text.osRtxThreadGetRunning  rtx_semaphore.o
    0x0800e18c   0x0800e18c   0x0000000c   Code   RO         1083    .text.osRtxThreadGetRunning  rtx_thread.o
    0x0800e198   0x0800e198   0x0000000c   Code   RO         1302    .text.osRtxThreadGetRunning  rtx_timer.o
    0x0800e1a4   0x0800e1a4   0x0000000a   Code   RO         1105    .text.osRtxThreadId  rtx_thread.o
    0x0800e1ae   0x0800e1ae   0x00000002   PAD
    0x0800e1b0   0x0800e1b0   0x0000003c   Code   RO         1095    .text.osRtxThreadJoinWakeup  rtx_thread.o
    0x0800e1ec   0x0800e1ec   0x00000036   Code   RO         1053    .text.osRtxThreadListGet  rtx_thread.o
    0x0800e222   0x0800e222   0x00000002   PAD
    0x0800e224   0x0800e224   0x00000076   Code   RO         1049    .text.osRtxThreadListPut  rtx_thread.o
    0x0800e29a   0x0800e29a   0x00000002   PAD
    0x0800e29c   0x0800e29c   0x00000032   Code   RO         1059    .text.osRtxThreadListRemove  rtx_thread.o
    0x0800e2ce   0x0800e2ce   0x00000002   PAD
    0x0800e2d0   0x0800e2d0   0x00000022   Code   RO         1067    .text.osRtxThreadListRoot  rtx_thread.o
    0x0800e2f2   0x0800e2f2   0x00000002   PAD
    0x0800e2f4   0x0800e2f4   0x00000058   Code   RO         1055    .text.osRtxThreadListSort  rtx_thread.o
    0x0800e34c   0x0800e34c   0x0000000a   Code   RO         1018    .text.osRtxThreadObject  rtx_system.o
    0x0800e356   0x0800e356   0x00000002   PAD
    0x0800e358   0x0800e358   0x0000000a   Code   RO         1051    .text.osRtxThreadObject  rtx_thread.o
    0x0800e362   0x0800e362   0x00000002   PAD
    0x0800e364   0x0800e364   0x00000044   Code   RO         1203    .text.osRtxThreadPostProcess  rtx_thread.o
    0x0800e3a8   0x0800e3a8   0x00000020   Code   RO         1061    .text.osRtxThreadReadyPut  rtx_thread.o
    0x0800e3c8   0x0800e3c8   0x00000022   Code   RO         1071    .text.osRtxThreadRegPtr  rtx_thread.o
    0x0800e3ea   0x0800e3ea   0x00000002   PAD
    0x0800e3ec   0x0800e3ec   0x00000014   Code   RO         1239    .text.osRtxThreadSetRunning  rtx_thread.o
    0x0800e400   0x0800e400   0x00000014   Code   RO         1306    .text.osRtxThreadSetRunning  rtx_timer.o
    0x0800e414   0x0800e414   0x0000003c   Code   RO         1093    .text.osRtxThreadStackCheck  rtx_thread.o
    0x0800e450   0x0800e450   0x00000096   Code   RO         1103    .text.osRtxThreadStartup  rtx_thread.o
    0x0800e4e6   0x0800e4e6   0x00000002   PAD
    0x0800e4e8   0x0800e4e8   0x0000002e   Code   RO         1075    .text.osRtxThreadSwitch  rtx_thread.o
    0x0800e516   0x0800e516   0x00000002   PAD
    0x0800e518   0x0800e518   0x00000076   Code   RO         1089    .text.osRtxThreadWaitEnter  rtx_thread.o
    0x0800e58e   0x0800e58e   0x00000002   PAD
    0x0800e590   0x0800e590   0x00000046   Code   RO         1087    .text.osRtxThreadWaitExit  rtx_thread.o
    0x0800e5d6   0x0800e5d6   0x00000002   PAD
    0x0800e5d8   0x0800e5d8   0x00000110   Code   RO         1010    .text.osRtxTick_Handler  rtx_system.o
    0x0800e6e8   0x0800e6e8   0x0000005e   Code   RO         1326    .text.osRtxTimerDestroy  rtx_timer.o
    0x0800e746   0x0800e746   0x00000002   PAD
    0x0800e748   0x0800e748   0x0000000a   Code   RO         1314    .text.osRtxTimerId  rtx_timer.o
    0x0800e752   0x0800e752   0x00000002   PAD
    0x0800e754   0x0800e754   0x00000030   Code   RO         1278    .text.osRtxTimerSetup  rtx_timer.o
    0x0800e784   0x0800e784   0x00000032   Code   RO         1282    .text.osRtxTimerThread  rtx_timer.o
    0x0800e7b6   0x0800e7b6   0x00000002   PAD
    0x0800e7b8   0x0800e7b8   0x000000dc   Code   RO         1280    .text.osRtxTimerTick  rtx_timer.o
    0x0800e894   0x0800e894   0x0000005e   Code   RO          961    .text.osSemaphoreAcquire  rtx_semaphore.o
    0x0800e8f2   0x0800e8f2   0x00000002   PAD
    0x0800e8f4   0x0800e8f4   0x00000056   Code   RO          973    .text.osSemaphoreDelete  rtx_semaphore.o
    0x0800e94a   0x0800e94a   0x00000002   PAD
    0x0800e94c   0x0800e94c   0x00000072   Code   RO          951    .text.osSemaphoreNew  rtx_semaphore.o
    0x0800e9be   0x0800e9be   0x00000002   PAD
    0x0800e9c0   0x0800e9c0   0x0000004e   Code   RO          965    .text.osSemaphoreRelease  rtx_semaphore.o
    0x0800ea0e   0x0800ea0e   0x00000002   PAD
    0x0800ea10   0x0800ea10   0x00000010   Code   RO         1199    .text.osThreadEntry  rtx_thread.o
    0x0800ea20   0x0800ea20   0x00000024   Code   RO         1151    .text.osThreadExit  rtx_thread.o
    0x0800ea44   0x0800ea44   0x0000005e   Code   RO         1187    .text.osThreadFlagsSet  rtx_thread.o
    0x0800eaa2   0x0800eaa2   0x00000002   PAD
    0x0800eaa4   0x0800eaa4   0x00000072   Code   RO         1195    .text.osThreadFlagsWait  rtx_thread.o
    0x0800eb16   0x0800eb16   0x00000002   PAD
    0x0800eb18   0x0800eb18   0x0000003a   Code   RO         1127    .text.osThreadGetId  rtx_thread.o
    0x0800eb52   0x0800eb52   0x00000002   PAD
    0x0800eb54   0x0800eb54   0x00000072   Code   RO         1109    .text.osThreadNew   rtx_thread.o
    0x0800ebc6   0x0800ebc6   0x00000002   PAD
    0x0800ebc8   0x0800ebc8   0x00000056   Code   RO         1153    .text.osThreadTerminate  rtx_thread.o
    0x0800ec1e   0x0800ec1e   0x00000002   PAD
    0x0800ec20   0x0800ec20   0x00000056   Code   RO         1300    .text.osTimerDelete  rtx_timer.o
    0x0800ec76   0x0800ec76   0x00000002   PAD
    0x0800ec78   0x0800ec78   0x0000008a   Code   RO         1284    .text.osTimerNew    rtx_timer.o
    0x0800ed02   0x0800ed02   0x00000002   PAD
    0x0800ed04   0x0800ed04   0x00000064   Code   RO         1294    .text.osTimerStart  rtx_timer.o
    0x0800ed68   0x0800ed68   0x00000036   Code   RO          689    .text.os_kernel_is_active  rtx_lib.o
    0x0800ed9e   0x0800ed9e   0x00000002   PAD
    0x0800eda0   0x0800eda0   0x00000718   Code   RO         3027    .text.path_create   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f4b8   0x0800f4b8   0x00000034   Code   RO         3009    .text.path_init     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f4ec   0x0800f4ec   0x00000098   Code   RO         3011    .text.path_open     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f584   0x0800f584   0x0000004a   Code   RO         3007    .text.path_validate  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f5ce   0x0800f5ce   0x00000078   Code   RO         3039    .text.read_cache    FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f646   0x0800f646   0x00000050   Code   RO         3045    .text.read_sector   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f696   0x0800f696   0x00000002   PAD
    0x0800f698   0x0800f698   0x00000032   Code   RO         1488    .text.rt_fs_close   retarget_mdk-fs.o
    0x0800f6ca   0x0800f6ca   0x00000002   PAD
    0x0800f6cc   0x0800f6cc   0x00000040   Code   RO         1484    .text.rt_fs_open    retarget_mdk-fs.o
    0x0800f70c   0x0800f70c   0x00000042   Code   RO         1492    .text.rt_fs_read    retarget_mdk-fs.o
    0x0800f74e   0x0800f74e   0x00000002   PAD
    0x0800f750   0x0800f750   0x00000052   Code   RO         1494    .text.rt_fs_seek    retarget_mdk-fs.o
    0x0800f7a2   0x0800f7a2   0x00000002   PAD
    0x0800f7a4   0x0800f7a4   0x00000040   Code   RO         1496    .text.rt_fs_size    retarget_mdk-fs.o
    0x0800f7e4   0x0800f7e4   0x00000042   Code   RO         1490    .text.rt_fs_write   retarget_mdk-fs.o
    0x0800f826   0x0800f826   0x00000004   Code   RO         2960    .text.set_u16       FS_LFN_CM3_L.lib(fs_common.o)
    0x0800f82a   0x0800f82a   0x00000004   Code   RO         2964    .text.set_u32       FS_LFN_CM3_L.lib(fs_common.o)
    0x0800f82e   0x0800f82e   0x00000054   Code   RO         3127    .text.sfn_extract   FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f882   0x0800f882   0x0000001e   Code   RO         3129    .text.short_ent_hash  FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f8a0   0x0800f8a0   0x0000001e   Code   RO         3125    .text.sn_chksum     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0800f8be   0x0800f8be   0x00000002   PAD
    0x0800f8c0   0x0800f8c0   0x00000050   Code   RO          117    .text.svcRtxDelay   rtx_delay.o
    0x0800f910   0x0800f910   0x00000010   Code   RO          592    .text.svcRtxKernelGetState  rtx_kernel.o
    0x0800f920   0x0800f920   0x0000001c   Code   RO          624    .text.svcRtxKernelGetTickCount  rtx_kernel.o
    0x0800f93c   0x0800f93c   0x0000001c   Code   RO          628    .text.svcRtxKernelGetTickFreq  rtx_kernel.o
    0x0800f958   0x0800f958   0x00000304   Code   RO          638    .text.svcRtxKernelInitialize  rtx_kernel.o
    0x0800fc5c   0x0800fc5c   0x000000a4   Code   RO          642    .text.svcRtxKernelStart  rtx_kernel.o
    0x0800fd00   0x0800fd00   0x00000168   Code   RO          885    .text.svcRtxMessageQueueGet  rtx_msgqueue.o
    0x0800fe68   0x0800fe68   0x00000290   Code   RO          823    .text.svcRtxMessageQueueNew  rtx_msgqueue.o
    0x080100f8   0x080100f8   0x0000015c   Code   RO          875    .text.svcRtxMessageQueuePut  rtx_msgqueue.o
    0x08010254   0x08010254   0x00000176   Code   RO          930    .text.svcRtxMutexAcquire  rtx_mutex.o
    0x080103ca   0x080103ca   0x00000002   PAD
    0x080103cc   0x080103cc   0x00000058   Code   RO          938    .text.svcRtxMutexDelete  rtx_mutex.o
    0x08010424   0x08010424   0x00000142   Code   RO          924    .text.svcRtxMutexNew  rtx_mutex.o
    0x08010566   0x08010566   0x00000002   PAD
    0x08010568   0x08010568   0x000001a0   Code   RO          934    .text.svcRtxMutexRelease  rtx_mutex.o
    0x08010708   0x08010708   0x000000aa   Code   RO          989    .text.svcRtxSemaphoreAcquire  rtx_semaphore.o
    0x080107b2   0x080107b2   0x00000002   PAD
    0x080107b4   0x080107b4   0x0000007c   Code   RO          999    .text.svcRtxSemaphoreDelete  rtx_semaphore.o
    0x08010830   0x08010830   0x00000176   Code   RO          975    .text.svcRtxSemaphoreNew  rtx_semaphore.o
    0x080109a6   0x080109a6   0x00000002   PAD
    0x080109a8   0x080109a8   0x000000a2   Code   RO          997    .text.svcRtxSemaphoreRelease  rtx_semaphore.o
    0x08010a4a   0x08010a4a   0x00000002   PAD
    0x08010a4c   0x08010a4c   0x00000084   Code   RO         1237    .text.svcRtxThreadExit  rtx_thread.o
    0x08010ad0   0x08010ad0   0x000000d6   Code   RO         1259    .text.svcRtxThreadFlagsSet  rtx_thread.o
    0x08010ba6   0x08010ba6   0x00000002   PAD
    0x08010ba8   0x08010ba8   0x000000be   Code   RO         1269    .text.svcRtxThreadFlagsWait  rtx_thread.o
    0x08010c66   0x08010c66   0x00000002   PAD
    0x08010c68   0x08010c68   0x00000016   Code   RO         1129    .text.svcRtxThreadGetId  rtx_thread.o
    0x08010c7e   0x08010c7e   0x00000002   PAD
    0x08010c80   0x08010c80   0x0000046a   Code   RO         1107    .text.svcRtxThreadNew  rtx_thread.o
    0x080110ea   0x080110ea   0x00000002   PAD
    0x080110ec   0x080110ec   0x00000136   Code   RO         1241    .text.svcRtxThreadTerminate  rtx_thread.o
    0x08011222   0x08011222   0x00000002   PAD
    0x08011224   0x08011224   0x00000058   Code   RO         1324    .text.svcRtxTimerDelete  rtx_timer.o
    0x0801127c   0x0801127c   0x00000190   Code   RO         1310    .text.svcRtxTimerNew  rtx_timer.o
    0x0801140c   0x0801140c   0x0000009e   Code   RO         1316    .text.svcRtxTimerStart  rtx_timer.o
    0x080114aa   0x080114aa   0x00000002   PAD
    0x080114ac   0x080114ac   0x00000088   Code   RO         3025    .text.unlink_clus   FS_LFN_CM3_L.lib(fs_fat.o)
    0x08011534   0x08011534   0x0000001a   Code   RO         2336    .text.usb0_DevCtrl  fs_config.o
    0x0801154e   0x0801154e   0x00000002   PAD
    0x08011550   0x08011550   0x00000012   Code   RO         2326    .text.usb0_Init     fs_config.o
    0x08011562   0x08011562   0x00000002   PAD
    0x08011564   0x08011564   0x00000012   Code   RO         2334    .text.usb0_RdInfo   fs_config.o
    0x08011576   0x08011576   0x00000002   PAD
    0x08011578   0x08011578   0x0000001a   Code   RO         2330    .text.usb0_RdSect   fs_config.o
    0x08011592   0x08011592   0x00000002   PAD
    0x08011594   0x08011594   0x00000012   Code   RO         2328    .text.usb0_UnInit   fs_config.o
    0x080115a6   0x080115a6   0x00000002   PAD
    0x080115a8   0x080115a8   0x0000001a   Code   RO         2332    .text.usb0_WrSect   fs_config.o
    0x080115c2   0x080115c2   0x00000002   PAD
    0x080115c4   0x080115c4   0x00000048   Code   RO          693    .text.user_perthread_libspace_free  rtx_lib.o
    0x0801160c   0x0801160c   0x000000a2   Code   RO         3003    .text.write_cache   FS_LFN_CM3_L.lib(fs_fat.o)
    0x080116ae   0x080116ae   0x00000032   Code   RO         3105    .text.write_sector  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080116e0   0x080116e0   0x00000012   Code   RO         1201    .text.xPSR_InitVal  rtx_thread.o
    0x080116f2   0x080116f2   0x00000002   PAD
    0x080116f4   0x080116f4   0x0000002c   Code   RO         3447    locale$$code        c_w.l(lc_ctype_c.o)
    0x08011720   0x08011720   0x0000001a   Code   RO         3296    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x0801173a   0x0801173a   0x00000002   PAD
    0x0801173c   0x0801173c   0x00000070   Data   RO          707    .rodata             rtx_lib.o
    0x080117ac   0x080117ac   0x00000038   Data   RO          710    .rodata             rtx_lib.o
    0x080117e4   0x080117e4   0x0000000c   Data   RO         3198    .rodata..Lswitch.table.fat_seek  FS_LFN_CM3_L.lib(fs_fat.o)
    0x080117f0   0x080117f0   0x00000010   Data   RO         2229    .rodata.AHBPrescTable  system_stm32f4xx.o
    0x08011800   0x08011800   0x0000000d   Data   RO         3196    .rodata.ChIndex     FS_LFN_CM3_L.lib(fs_fat.o)
    0x0801180d   0x0801180d   0x00000003   PAD
    0x08011810   0x08011810   0x00000048   Data   RO         1447    .rodata.Driver_USBH1  usbh_hs_stm32f4xx.o
    0x08011858   0x08011858   0x00000018   Data   RO         1562    .rodata.EventRecorderInfo  eventrecorder.o
    0x08011870   0x08011870   0x00000008   Data   RO         1475    .rodata.__stderr_name  retarget_io.o
    0x08011878   0x08011878   0x00000007   Data   RO         1473    .rodata.__stdin_name  retarget_io.o
    0x0801187f   0x0801187f   0x00000008   Data   RO         1474    .rodata.__stdout_name  retarget_io.o
    0x08011887   0x08011887   0x00000001   PAD
    0x08011888   0x08011888   0x00000400   Data   RO         3197    .rodata.fat_crc32.crc32_table  FS_LFN_CM3_L.lib(fs_fat.o)
    0x08011c88   0x08011c88   0x00000008   Data   RO         2343    .rodata.fs_DevPool  fs_config.o
    0x08011c90   0x08011c90   0x00000001   Data   RO         2339    .rodata.fs_efs_fh_cnt  fs_config.o
    0x08011c91   0x08011c91   0x00000001   Data   RO         2338    .rodata.fs_fat_fh_cnt  fs_config.o
    0x08011c92   0x08011c92   0x00000001   Data   RO         2340    .rodata.fs_ndrv     fs_config.o
    0x08011c93   0x08011c93   0x00000001   PAD
    0x08011c94   0x08011c94   0x00000018   Data   RO         2347    .rodata.fs_usb0_drv  fs_config.o
    0x08011cac   0x08011cac   0x00000010   Data   RO         2346    .rodata.fs_usb0_mtx_at  fs_config.o
    0x08011cbc   0x08011cbc   0x00000004   Data   RO          709    .rodata.osRtxUserSVC  rtx_lib.o
    0x08011cc0   0x08011cc0   0x00000024   Data   RO          704    .rodata.os_idle_thread_attr  rtx_lib.o
    0x08011ce4   0x08011ce4   0x00000018   Data   RO          706    .rodata.os_timer_mq_attr  rtx_lib.o
    0x08011cfc   0x08011cfc   0x00000024   Data   RO          705    .rodata.os_timer_thread_attr  rtx_lib.o
    0x08011d20   0x08011d20   0x0000000f   Data   RO           27    .rodata.str1.1      thread.o
    0x08011d2f   0x08011d2f   0x0000000b   Data   RO          670    .rodata.str1.1      rtx_kernel.o
    0x08011d3a   0x08011d3a   0x00000017   Data   RO         1476    .rodata.str1.1      retarget_io.o
    0x08011d51   0x08011d51   0x00000012   Data   RO         2434    .rodata.str1.1      usbh_config_0.o
    0x08011d63   0x08011d63   0x00000001   PAD
    0x08011d64   0x08011d64   0x00000024   Data   RO         2437    .rodata.usbh0_core_thread_attr  usbh_config_0.o
    0x08011d88   0x08011d88   0x00000001   Data   RO         2428    .rodata.usbh0_mem_pool_reloc  usbh_config_0.o
    0x08011d89   0x08011d89   0x00000003   PAD
    0x08011d8c   0x08011d8c   0x00000004   Data   RO         2429    .rodata.usbh0_mem_pool_size  usbh_config_0.o
    0x08011d90   0x08011d90   0x00000004   Data   RO         2425    .rodata.usbh0_pipe_num  usbh_config_0.o
    0x08011d94   0x08011d94   0x00000001   Data   RO         2427    .rodata.usbh0_power  usbh_config_0.o
    0x08011d95   0x08011d95   0x00000003   PAD
    0x08011d98   0x08011d98   0x00000004   Data   RO         2467    .rodata.usbh_cb_pipe_event_ptr  usbh_config_0.o
    0x08011d9c   0x08011d9c   0x00000004   Data   RO         2466    .rodata.usbh_cb_port_event_ptr  usbh_config_0.o
    0x08011da0   0x08011da0   0x00000004   Data   RO         2438    .rodata.usbh_core_thread_attr  usbh_config_0.o
    0x08011da4   0x08011da4   0x00000002   Data   RO         2465    .rodata.usbh_debounce_in_ms  usbh_config_0.o
    0x08011da6   0x08011da6   0x00000001   Data   RO         2447    .rodata.usbh_dev_num  usbh_config_0.o
    0x08011da7   0x08011da7   0x00000001   Data   RO         2444    .rodata.usbh_hc_num  usbh_config_0.o
    0x08011da8   0x08011da8   0x00000004   Data   RO         2452    .rodata.usbh_hcd_ptr  usbh_config_0.o
    0x08011dac   0x08011dac   0x00000004   Data   RO         2460    .rodata.usbh_mem_pool_ptr  usbh_config_0.o
    0x08011db0   0x08011db0   0x00000004   Data   RO         2458    .rodata.usbh_mem_pool_reloc_ptr  usbh_config_0.o
    0x08011db4   0x08011db4   0x00000004   Data   RO         2461    .rodata.usbh_mem_pool_size_ptr  usbh_config_0.o
    0x08011db8   0x08011db8   0x00000001   Data   RO         2448    .rodata.usbh_msc_num  usbh_config_0.o
    0x08011db9   0x08011db9   0x00000003   PAD
    0x08011dbc   0x08011dbc   0x00000004   Data   RO         2464    .rodata.usbh_pipe_num_ptr  usbh_config_0.o
    0x08011dc0   0x08011dc0   0x00000004   Data   RO         2463    .rodata.usbh_pipe_ptr  usbh_config_0.o
    0x08011dc4   0x08011dc4   0x00000004   Data   RO         2457    .rodata.usbh_power_ptr  usbh_config_0.o
    0x08011dc8   0x08011dc8   0x00000020   Data   RO         3630    Region$$Table       anon$$obj.o
    0x08011de8   0x08011de8   0x00000004   Data   RO         3216    __MW_USB_LIB_VERSION_6.17.0  USB_CM3_L.lib(usb_lib_ver.o)
    0x08011dec   0x08011dec   0x00000110   Data   RO         3446    locale$$data        c_w.l(lc_ctype_c.o)


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08011f00, Size: 0x0000b860, Max: 0x00030000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08011f00   0x00000004   Data   RW         3378    .data               c_w.l(streamlock.o)
    0x20000004   0x08011f04   0x00000004   Data   RW         3382    .data               c_w.l(stdio_streams.o)
    0x20000008   0x08011f08   0x00000004   Data   RW         3383    .data               c_w.l(stdio_streams.o)
    0x2000000c   0x08011f0c   0x00000004   Data   RW         3384    .data               c_w.l(stdio_streams.o)
    0x20000010   0x08011f10   0x00000040   Data   RW         1446    .data.OTG_DFIFO     usbh_hs_stm32f4xx.o
    0x20000050   0x08011f50   0x00000004   Data   RW         2228    .data.SystemCoreClock  system_stm32f4xx.o
    0x20000054   0x08011f54   0x000000a4   Data   RW          671    .data.os            rtx_kernel.o
    0x200000f8   0x08011ff8   0x00000004   Data   RW         2423    .data.usbh0_hcd_ptr  usbh_config_0.o
    0x200000fc   0x08011ffc   0x00000010   Data   RW         2441    .data.usbh_def_pipe_mutex_attr  usbh_config_0.o
    0x2000010c   0x0801200c   0x00000010   Data   RW         2443    .data.usbh_driver_semaphore_attr  usbh_config_0.o
    0x2000011c   0x0801201c   0x00000001   Data   RW         1629    .data.uwTickFreq    stm32f4xx_hal.o
    0x2000011d   0x0801201d   0x00000003   PAD
    0x20000120   0x08012020   0x00000004   Data   RW         1628    .data.uwTickPrio    stm32f4xx_hal.o
    0x20000124   0x08012024   0x0000001c   PAD
    0x20000140        -       0x00000060   Zero   RW         3299    .bss                c_w.l(libspace.o)
    0x200001a0        -       0x00000054   Zero   RW         3379    .bss                c_w.l(stdio_streams.o)
    0x200001f4        -       0x00000054   Zero   RW         3380    .bss                c_w.l(stdio_streams.o)
    0x20000248        -       0x00000054   Zero   RW         3381    .bss                c_w.l(stdio_streams.o)
    0x2000029c        -       0x00000004   Zero   RW           70    .bss.HAL_GetTick.ticks  main.o
    0x200002a0        -       0x00000004   Zero   RW         1445    .bss.SignalPipeEvent  usbh_hs_stm32f4xx.o
    0x200002a4        -       0x00000004   Zero   RW         1443    .bss.SignalPortEvent  usbh_hs_stm32f4xx.o
    0x200002a8        -       0x00000004   Zero   RW           26    .bss.Thread.f       thread.o
    0x200002ac        -       0x00000004   Zero   RW           25    .bss.Thread.result  thread.o
    0x200002b0        -       0x00000004   Zero   RW         2478    .bss.USBH_MsToTick.max_ms  usbh_config_0.o
    0x200002b4        -       0x00000004   Zero   RW         2477    .bss.USBH_MsToTick.tick_freq_mul  usbh_config_0.o
    0x200002b8        -       0x00000001   Zero   RW         2556    .bss.cfg_done       FS_LFN_CM3_L.lib(fs_mapi.o)
    0x200002b9   0x08012024   0x00000003   PAD
    0x200002bc        -       0x00000004   Zero   RW            8    .bss.exec1          timer.o
    0x200002c0        -       0x00000004   Zero   RW           10    .bss.exec2          timer.o
    0x200002c4        -       0x000000c8   Zero   RW           23    .bss.fbuf           thread.o
    0x2000038c        -       0x00000001   Zero   RW         2966    .bss.fs_cdrive_id   FS_LFN_CM3_L.lib(fs_common.o)
    0x2000038d   0x08012024   0x00000003   PAD
    0x20000390        -       0x0000001c   Zero   RW         2345    .bss.fs_efs_fh      fs_config.o
    0x200003ac        -       0x00000090   Zero   RW         2344    .bss.fs_fat_fh      fs_config.o
    0x2000043c        -       0x00000004   Zero   RW         2341    .bss.fs_ms_rtos_tick  fs_config.o
    0x20000440        -       0x00000084   Zero   RW         2342    .bss.fs_usb0_vol    fs_config.o
    0x200004c4        -       0x00000304   Zero   RW           72    .bss.hhcd_USB_OTG_HS  main.o
    0x200007c8        -       0x00000058   Zero   RW           71    .bss.hspi5          main.o
    0x20000820        -       0x00000001   Zero   RW         1450    .bss.hw_initialized  usbh_hs_stm32f4xx.o
    0x20000821        -       0x00000001   Zero   RW         1451    .bss.hw_powered     usbh_hs_stm32f4xx.o
    0x20000822   0x08012024   0x0000001e   PAD
    0x20000840        -       0x000004a4   Zero   RW         1561    .bss.noinit         eventrecorder.o
    0x20000ce4   0x08012024   0x00000004   PAD
    0x20000ce8        -       0x00008040   Zero   RW          703    .bss.os             rtx_lib.o
    0x20008d28        -       0x00000001   Zero   RW         1353    .bss.os             os_systick.o
    0x20008d29   0x08012024   0x00000003   PAD
    0x20008d2c        -       0x000001f0   Zero   RW          711    .bss.os.libspace    rtx_lib.o
    0x20008f1c        -       0x00000034   Zero   RW          715    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008f50        -       0x00000050   Zero   RW          716    .bss.os.msgqueue.mem  rtx_lib.o
    0x20008fa0        -       0x0000001c   Zero   RW         2349    .bss.os.mutex.cb    fs_config.o
    0x20008fbc        -       0x0000001c   Zero   RW         2440    .bss.os.mutex.cb    usbh_config_0.o
    0x20008fd8        -       0x00000010   Zero   RW         2442    .bss.os.semaphore.cb  usbh_config_0.o
    0x20008fe8        -       0x000000a0   Zero   RW          712    .bss.os.thread.cb   rtx_lib.o
    0x20009088        -       0x00000050   Zero   RW         2435    .bss.os.thread.cb   usbh_config_0.o
    0x200090d8        -       0x00000200   Zero   RW          713    .bss.os.thread.idle.stack  rtx_lib.o
    0x200092d8        -       0x00000400   Zero   RW         2436    .bss.os.thread.stack  usbh_config_0.o
    0x200096d8        -       0x00000200   Zero   RW          714    .bss.os.thread.timer.stack  rtx_lib.o
    0x200098d8        -       0x00000020   Zero   RW         2439    .bss.os.timer.cb    usbh_config_0.o
    0x200098f8        -       0x00000001   Zero   RW          717    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x200098f9        -       0x00000001   Zero   RW         1382    .bss.otg_hs_role    otg_hs_stm32f4xx.o
    0x200098fa   0x08012024   0x00000002   PAD
    0x200098fc        -       0x00000200   Zero   RW         1444    .bss.pipe           usbh_hs_stm32f4xx.o
    0x20009afc        -       0x00000001   Zero   RW         1442    .bss.port_reset     usbh_hs_stm32f4xx.o
    0x20009afd   0x08012024   0x00000003   PAD
    0x20009b00        -       0x00000004   Zero   RW           24    .bss.tid_Thread     thread.o
    0x20009b04        -       0x00000004   Zero   RW            9    .bss.tim_id1        timer.o
    0x20009b08        -       0x00000004   Zero   RW           11    .bss.tim_id2        timer.o
    0x20009b0c        -       0x00001400   Zero   RW         2348    .bss.usb0_cache     fs_config.o
    0x2000af0c        -       0x0000023c   Zero   RW         2459    .bss.usbh0_mem_pool  usbh_config_0.o
    0x2000b148        -       0x00000048   Zero   RW         2462    .bss.usbh0_pipe     usbh_config_0.o
    0x2000b190        -       0x00000004   Zero   RW         2473    .bss.usbh_capabilities  usbh_config_0.o
    0x2000b194        -       0x00000004   Zero   RW         2468    .bss.usbh_core_thread_id  usbh_config_0.o
    0x2000b198        -       0x00000004   Zero   RW         2471    .bss.usbh_debounce_timer_id  usbh_config_0.o
    0x2000b19c        -       0x00000004   Zero   RW         2470    .bss.usbh_def_pipe_mutex_id  usbh_config_0.o
    0x2000b1a0        -       0x0000001c   Zero   RW         2475    .bss.usbh_dev       usbh_config_0.o
    0x2000b1bc        -       0x00000004   Zero   RW         2469    .bss.usbh_driver_semaphore_id  usbh_config_0.o
    0x2000b1c0        -       0x00000004   Zero   RW         2472    .bss.usbh_drv_version  usbh_config_0.o
    0x2000b1c4        -       0x0000007c   Zero   RW         2474    .bss.usbh_hci       usbh_config_0.o
    0x2000b240        -       0x0000001c   Zero   RW         2476    .bss.usbh_msc       usbh_config_0.o
    0x2000b25c   0x08012024   0x00000004   PAD
    0x2000b260        -       0x00000200   Zero   RW         2215    HEAP                startup_stm32f429xx.o
    0x2000b460        -       0x00000400   Zero   RW         2214    STACK               startup_stm32f429xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      2248          0         24          0       1188       8979   eventrecorder.o
       536          0         51          0       5456      13243   fs_config.o
       256         16          0          0          0        785   irq_armv7m.o
       942          0          0          0        864      11799   main.o
       204          0          0          0          1       4996   os_systick.o
        88          0          0          0          1       2564   otg_hs_stm32f4xx.o
      1004          0         46          0          0       2975   retarget_io.o
       690          0          0          0          0       3876   retarget_mdk-fs.o
        56          6          0          0          0        739   rtx_config.o
       230          0          0          0          0       2838   rtx_delay.o
      2464          0          0          0          0      29633   rtx_evr.o
      1556          0         11        164          0      18239   rtx_kernel.o
       730          0        268          0      34645       8318   rtx_lib.o
       710          0          0          0          0       2386   rtx_memory.o
       478          0          0          0          0      12699   rtx_mempool.o
      2938          0          0          0          0      15325   rtx_msgqueue.o
      2356          0          0          0          0       9522   rtx_mutex.o
      1894          0          0          0          0       9654   rtx_semaphore.o
       940         10          0          0          0       6364   rtx_system.o
      5494          6          0          0          0      34283   rtx_thread.o
      1794          0          0          0          0       9430   rtx_timer.o
        64         26        428          0       1536        884   startup_stm32f429xx.o
       120          0          0          5          0       7829   stm32f4xx_hal.o
       460          0          0          0          0      10004   stm32f4xx_hal_cortex.o
      1750          0          0          0          0       5445   stm32f4xx_hal_gpio.o
       328          0          0          0          0      12458   stm32f4xx_hal_hcd.o
       498          0          0          0          0       9602   stm32f4xx_hal_msp.o
      2566          0          0          0          0       7894   stm32f4xx_hal_rcc.o
       258          0          0          0          0      20028   stm32f4xx_hal_spi.o
        32          0          0          0          0       1077   stm32f4xx_it.o
      1332          0          0          0          0      19459   stm32f4xx_ll_usb.o
        18          0         16          4          0       2807   system_stm32f4xx.o
       190          0         15          0        212       1349   thread.o
       212          0          0          0         16       2017   timer.o
      1276          0        109         36       2036      18362   usbh_config_0.o
      5830         12         72         64        523      16686   usbh_hs_stm32f4xx.o
       112          0          0          0          0       2646   usbh_msc.o

    ----------------------------------------------------------------------
     43110         76       1084        276      46552     347194   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       456          0         12          3         74          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       198          8          0          0          1        208   fs_common.o
      8802        138       1049          0          0       2892   fs_fat.o
       322         32          0          0          1        892   fs_mapi.o
       778         20          0          0          0        544   fs_sys.o
        24          4          0          0          0         36   fs_time.o
         0          0          4          0          0          0   usb_lib_ver.o
      7972        250          0          0          0       2312   usbh_lib_core.o
      1320         28          0          0          0        772   usbh_lib_drv.o
       228          8          0          0          0        156   usbh_lib_mem.o
      3418         48          0          0          0        788   usbh_lib_msc.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
        52          6          0          0          0         80   fclose_locked.o
       144         10          0          0          0        128   fflush_locked.o
       586          0          0          0          0        136   filbuf.o
       108         10          0          0          0         88   flushlinebuffered_locked.o
       332         10          0          0          0        152   fopen_locked.o
       298          0          0          0          0         96   freadfast_locked.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
        44         10        272          0          0         76   lc_ctype_c.o
         2          0          0          0          0          0   libinit.o
        36          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       240          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        16          4          0          0          0         76   rt_ctype_table.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
       264          6          0          0          0        160   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       124          0          0          0          0         88   strcmpv7em.o
         0          0          0          4          0          0   streamlock.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
        26          0          0          0          0         76   tolower.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
     27946        758       1328         16        356      13044   Library Totals
        54          0          3          0          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

     10124        202       1049          0          2       4572   FS_LFN_CM3_L.lib
     12938        334          4          0          0       4028   USB_CM3_L.lib
      4804        222        272         16        348       4328   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
     27946        758       1328         16        356      13044   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     71056        834       2412        292      46908     357158   Grand Totals
     71056        834       2412        292      46908     357158   ELF Image Totals
     71056        834       2412        292          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                73468 (  71.75kB)
    Total RW  Size (RW Data + ZI Data)             47200 (  46.09kB)
    Total ROM Size (Code + RO Data + RW Data)      73760 (  72.03kB)

==============================================================================

